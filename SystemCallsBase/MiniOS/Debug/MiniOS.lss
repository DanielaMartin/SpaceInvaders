
MiniOS.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003f28  00400000  00400000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00403f28  00403f28  00013f28  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000884  20000000  00403f30  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000390  20000884  004047b4  00020884  2**2
                  ALLOC
  4 .stack        00003004  20000c14  00404b44  00020884  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  00020884  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  000208ae  2**0
                  CONTENTS, READONLY
  7 .debug_info   0002c65e  00000000  00000000  00020907  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00005dba  00000000  00000000  0004cf65  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00010e98  00000000  00000000  00052d1f  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 000012e0  00000000  00000000  00063bb8  2**3
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00001540  00000000  00000000  00064e98  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0001bec6  00000000  00000000  000663d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00019c3b  00000000  00000000  0008229e  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0005e72a  00000000  00000000  0009bed9  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00003170  00000000  00000000  000fa604  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	18 3c 00 20 71 2c 40 00 6d 2c 40 00 6d 2c 40 00     .<. q,@.m,@.m,@.
  400010:	6d 2c 40 00 6d 2c 40 00 6d 2c 40 00 00 00 00 00     m,@.m,@.m,@.....
	...
  40002c:	0d 02 40 00 6d 2c 40 00 00 00 00 00 6d 2c 40 00     ..@.m,@.....m,@.
  40003c:	c1 01 40 00 6d 2c 40 00 6d 2c 40 00 6d 2c 40 00     ..@.m,@.m,@.m,@.
  40004c:	01 04 40 00 6d 2c 40 00 6d 2c 40 00 6d 2c 40 00     ..@.m,@.m,@.m,@.
  40005c:	6d 2c 40 00 6d 2c 40 00 35 0a 40 00 00 00 00 00     m,@.m,@.5.@.....
  40006c:	75 23 40 00 89 23 40 00 9d 23 40 00 6d 2c 40 00     u#@..#@..#@.m,@.
  40007c:	71 0a 40 00 00 00 00 00 00 00 00 00 6d 2c 40 00     q.@.........m,@.
  40008c:	6d 2c 40 00 6d 2c 40 00 6d 2c 40 00 6d 2c 40 00     m,@.m,@.m,@.m,@.
  40009c:	6d 2c 40 00 6d 2c 40 00 6d 2c 40 00 6d 2c 40 00     m,@.m,@.m,@.m,@.
  4000ac:	6d 2c 40 00 6d 2c 40 00 6d 2c 40 00 6d 2c 40 00     m,@.m,@.m,@.m,@.
  4000bc:	6d 2c 40 00 6d 2c 40 00 6d 2c 40 00 6d 2c 40 00     m,@.m,@.m,@.m,@.

004000cc <__do_global_dtors_aux>:
  4000cc:	b510      	push	{r4, lr}
  4000ce:	4c05      	ldr	r4, [pc, #20]	; (4000e4 <__do_global_dtors_aux+0x18>)
  4000d0:	7823      	ldrb	r3, [r4, #0]
  4000d2:	b933      	cbnz	r3, 4000e2 <__do_global_dtors_aux+0x16>
  4000d4:	4b04      	ldr	r3, [pc, #16]	; (4000e8 <__do_global_dtors_aux+0x1c>)
  4000d6:	b113      	cbz	r3, 4000de <__do_global_dtors_aux+0x12>
  4000d8:	4804      	ldr	r0, [pc, #16]	; (4000ec <__do_global_dtors_aux+0x20>)
  4000da:	f3af 8000 	nop.w
  4000de:	2301      	movs	r3, #1
  4000e0:	7023      	strb	r3, [r4, #0]
  4000e2:	bd10      	pop	{r4, pc}
  4000e4:	20000884 	.word	0x20000884
  4000e8:	00000000 	.word	0x00000000
  4000ec:	00403f30 	.word	0x00403f30

004000f0 <frame_dummy>:
  4000f0:	4b0c      	ldr	r3, [pc, #48]	; (400124 <frame_dummy+0x34>)
  4000f2:	b143      	cbz	r3, 400106 <frame_dummy+0x16>
  4000f4:	480c      	ldr	r0, [pc, #48]	; (400128 <frame_dummy+0x38>)
  4000f6:	490d      	ldr	r1, [pc, #52]	; (40012c <frame_dummy+0x3c>)
  4000f8:	b510      	push	{r4, lr}
  4000fa:	f3af 8000 	nop.w
  4000fe:	480c      	ldr	r0, [pc, #48]	; (400130 <frame_dummy+0x40>)
  400100:	6803      	ldr	r3, [r0, #0]
  400102:	b923      	cbnz	r3, 40010e <frame_dummy+0x1e>
  400104:	bd10      	pop	{r4, pc}
  400106:	480a      	ldr	r0, [pc, #40]	; (400130 <frame_dummy+0x40>)
  400108:	6803      	ldr	r3, [r0, #0]
  40010a:	b933      	cbnz	r3, 40011a <frame_dummy+0x2a>
  40010c:	4770      	bx	lr
  40010e:	4b09      	ldr	r3, [pc, #36]	; (400134 <frame_dummy+0x44>)
  400110:	2b00      	cmp	r3, #0
  400112:	d0f7      	beq.n	400104 <frame_dummy+0x14>
  400114:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400118:	4718      	bx	r3
  40011a:	4b06      	ldr	r3, [pc, #24]	; (400134 <frame_dummy+0x44>)
  40011c:	2b00      	cmp	r3, #0
  40011e:	d0f5      	beq.n	40010c <frame_dummy+0x1c>
  400120:	4718      	bx	r3
  400122:	bf00      	nop
  400124:	00000000 	.word	0x00000000
  400128:	00403f30 	.word	0x00403f30
  40012c:	20000888 	.word	0x20000888
  400130:	00403f30 	.word	0x00403f30
  400134:	00000000 	.word	0x00000000

00400138 <rtt_init>:
  400138:	4b03      	ldr	r3, [pc, #12]	; (400148 <rtt_init+0x10>)
  40013a:	681b      	ldr	r3, [r3, #0]
  40013c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
  400140:	4319      	orrs	r1, r3
  400142:	6001      	str	r1, [r0, #0]
  400144:	2000      	movs	r0, #0
  400146:	4770      	bx	lr
  400148:	200008a0 	.word	0x200008a0

0040014c <rtt_sel_source>:
  40014c:	b941      	cbnz	r1, 400160 <rtt_sel_source+0x14>
  40014e:	4a09      	ldr	r2, [pc, #36]	; (400174 <rtt_sel_source+0x28>)
  400150:	6813      	ldr	r3, [r2, #0]
  400152:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
  400156:	6013      	str	r3, [r2, #0]
  400158:	6802      	ldr	r2, [r0, #0]
  40015a:	4313      	orrs	r3, r2
  40015c:	6003      	str	r3, [r0, #0]
  40015e:	4770      	bx	lr
  400160:	4a04      	ldr	r2, [pc, #16]	; (400174 <rtt_sel_source+0x28>)
  400162:	6813      	ldr	r3, [r2, #0]
  400164:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  400168:	6013      	str	r3, [r2, #0]
  40016a:	6802      	ldr	r2, [r0, #0]
  40016c:	4313      	orrs	r3, r2
  40016e:	6003      	str	r3, [r0, #0]
  400170:	4770      	bx	lr
  400172:	bf00      	nop
  400174:	200008a0 	.word	0x200008a0

00400178 <rtt_disable_interrupt>:
  400178:	6803      	ldr	r3, [r0, #0]
  40017a:	ea23 0101 	bic.w	r1, r3, r1
  40017e:	4b02      	ldr	r3, [pc, #8]	; (400188 <rtt_disable_interrupt+0x10>)
  400180:	681b      	ldr	r3, [r3, #0]
  400182:	4319      	orrs	r1, r3
  400184:	6001      	str	r1, [r0, #0]
  400186:	4770      	bx	lr
  400188:	200008a0 	.word	0x200008a0

0040018c <rtt_read_timer_value>:
  40018c:	6882      	ldr	r2, [r0, #8]
  40018e:	6883      	ldr	r3, [r0, #8]
  400190:	429a      	cmp	r2, r3
  400192:	d003      	beq.n	40019c <rtt_read_timer_value+0x10>
  400194:	6882      	ldr	r2, [r0, #8]
  400196:	6883      	ldr	r3, [r0, #8]
  400198:	4293      	cmp	r3, r2
  40019a:	d1fb      	bne.n	400194 <rtt_read_timer_value+0x8>
  40019c:	4618      	mov	r0, r3
  40019e:	4770      	bx	lr

004001a0 <rtt_get_status>:
  4001a0:	68c0      	ldr	r0, [r0, #12]
  4001a2:	4770      	bx	lr

004001a4 <console_init>:
  4001a4:	4770      	bx	lr
	...

004001a8 <hal_cpu_init>:
*
*	Initializes the CPU. This function must be called before 
*	HAL IO Init. That is: hal_cpu_init(); hal_io_init(); 
*
*/
void hal_cpu_init(void){	
  4001a8:	b508      	push	{r3, lr}
	sysclk_init();  //initialize clocks
  4001aa:	4b01      	ldr	r3, [pc, #4]	; (4001b0 <hal_cpu_init+0x8>)
  4001ac:	4798      	blx	r3
  4001ae:	bd08      	pop	{r3, pc}
  4001b0:	00401b39 	.word	0x00401b39

004001b4 <hal_svc_start>:
*	execution of an SVC instruction
*
*	@param callback the function that gets called on supervisor calls
*/
void hal_svc_start( void(*callback)(void) ){
	svc_callback = callback; //SVC Handler definition is in hal_cpu_asm.s
  4001b4:	4b01      	ldr	r3, [pc, #4]	; (4001bc <hal_svc_start+0x8>)
  4001b6:	6018      	str	r0, [r3, #0]
  4001b8:	4770      	bx	lr
  4001ba:	bf00      	nop
  4001bc:	20000ba0 	.word	0x20000ba0

004001c0 <SysTick_Handler>:
	SysTick_Config( ms_to_ticks(tick_freq_in_ms) );
}

//The actual handler in the vector table entry
//(careful with the capital T in SysTick)
void SysTick_Handler(void){
  4001c0:	b508      	push	{r3, lr}
	(*systick_callback)();
  4001c2:	4b02      	ldr	r3, [pc, #8]	; (4001cc <SysTick_Handler+0xc>)
  4001c4:	681b      	ldr	r3, [r3, #0]
  4001c6:	4798      	blx	r3
  4001c8:	bd08      	pop	{r3, pc}
  4001ca:	bf00      	nop
  4001cc:	20000b9c 	.word	0x20000b9c

004001d0 <hal_delay>:
*
*	Busy-waiting delay
*
*	@param delay_in_ms delay in milliseconds
*/
void hal_delay(uint32_t delay_in_ms){
  4001d0:	b538      	push	{r3, r4, r5, lr}
	delay_ms(delay_in_ms);
  4001d2:	b918      	cbnz	r0, 4001dc <hal_delay+0xc>
  4001d4:	2009      	movs	r0, #9
  4001d6:	4b0a      	ldr	r3, [pc, #40]	; (400200 <hal_delay+0x30>)
  4001d8:	4798      	blx	r3
  4001da:	bd38      	pop	{r3, r4, r5, pc}
  4001dc:	4601      	mov	r1, r0
  4001de:	f243 62b0 	movw	r2, #14000	; 0x36b0
  4001e2:	2300      	movs	r3, #0
  4001e4:	f243 64af 	movw	r4, #13999	; 0x36af
  4001e8:	2500      	movs	r5, #0
  4001ea:	4806      	ldr	r0, [pc, #24]	; (400204 <hal_delay+0x34>)
  4001ec:	fbe0 4501 	umlal	r4, r5, r0, r1
  4001f0:	4620      	mov	r0, r4
  4001f2:	4629      	mov	r1, r5
  4001f4:	4c04      	ldr	r4, [pc, #16]	; (400208 <hal_delay+0x38>)
  4001f6:	47a0      	blx	r4
  4001f8:	4b01      	ldr	r3, [pc, #4]	; (400200 <hal_delay+0x30>)
  4001fa:	4798      	blx	r3
  4001fc:	bd38      	pop	{r3, r4, r5, pc}
  4001fe:	bf00      	nop
  400200:	20000001 	.word	0x20000001
  400204:	07270e00 	.word	0x07270e00
  400208:	00403931 	.word	0x00403931

0040020c <SVC_Handler>:
  40020c:	4b0d      	ldr	r3, [pc, #52]	; (400244 <hal_cpu_set_psp+0x8>)
  40020e:	681b      	ldr	r3, [r3, #0]
  400210:	4718      	bx	r3

00400212 <hal_cpu_get_psp>:
  400212:	f3ef 8009 	mrs	r0, PSP
  400216:	4770      	bx	lr

00400218 <hal_cpu_set_unprivileged>:
  400218:	f3ef 8314 	mrs	r3, CONTROL
  40021c:	f043 0301 	orr.w	r3, r3, #1
  400220:	f383 8814 	msr	CONTROL, r3
  400224:	f3bf 8f6f 	isb	sy
  400228:	4770      	bx	lr

0040022a <hal_cpu_set_psp_active>:
  40022a:	f3ef 8314 	mrs	r3, CONTROL
  40022e:	f043 0302 	orr.w	r3, r3, #2
  400232:	f383 8814 	msr	CONTROL, r3
  400236:	f3bf 8f6f 	isb	sy
  40023a:	4770      	bx	lr

0040023c <hal_cpu_set_psp>:
  40023c:	f380 8809 	msr	PSP, r0
  400240:	4770      	bx	lr
  400242:	0000      	.short	0x0000
  400244:	20000ba0 	.word	0x20000ba0

00400248 <button_handler>:
	pio_handler_set_priority(PIN_PUSHBUTTON_3_PIO, (IRQn_Type) PIN_PUSHBUTTON_3_ID, buttons_irq_priority);
	pio_enable_interrupt(PIN_PUSHBUTTON_3_PIO, PIN_PUSHBUTTON_3_MASK);
}

//The Button interrupt service routine (ISR)
static void button_handler(uint32_t id, uint32_t mask){
  400248:	b508      	push	{r3, lr}
	
	if((PIN_PUSHBUTTON_0_ID == id) && (PIN_PUSHBUTTON_0_MASK == mask)){
  40024a:	280b      	cmp	r0, #11
  40024c:	d002      	beq.n	400254 <button_handler+0xc>
	}
	else if ((PIN_PUSHBUTTON_1_ID == id) && (PIN_PUSHBUTTON_1_MASK == mask)){
		//Button 1 was pressed
		(*button_callback)(1);
	}
	else if((PIN_PUSHBUTTON_2_ID == id) && (PIN_PUSHBUTTON_2_MASK == mask)){
  40024e:	280d      	cmp	r0, #13
  400250:	d00e      	beq.n	400270 <button_handler+0x28>
  400252:	bd08      	pop	{r3, pc}
	if((PIN_PUSHBUTTON_0_ID == id) && (PIN_PUSHBUTTON_0_MASK == mask)){
  400254:	2904      	cmp	r1, #4
  400256:	d006      	beq.n	400266 <button_handler+0x1e>
	else if ((PIN_PUSHBUTTON_1_ID == id) && (PIN_PUSHBUTTON_1_MASK == mask)){
  400258:	2901      	cmp	r1, #1
  40025a:	d1fa      	bne.n	400252 <button_handler+0xa>
		(*button_callback)(1);
  40025c:	4b0c      	ldr	r3, [pc, #48]	; (400290 <button_handler+0x48>)
  40025e:	681b      	ldr	r3, [r3, #0]
  400260:	2001      	movs	r0, #1
  400262:	4798      	blx	r3
  400264:	bd08      	pop	{r3, pc}
		(*button_callback)(0);	
  400266:	4b0a      	ldr	r3, [pc, #40]	; (400290 <button_handler+0x48>)
  400268:	681b      	ldr	r3, [r3, #0]
  40026a:	2000      	movs	r0, #0
  40026c:	4798      	blx	r3
  40026e:	bd08      	pop	{r3, pc}
	else if((PIN_PUSHBUTTON_2_ID == id) && (PIN_PUSHBUTTON_2_MASK == mask)){
  400270:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400274:	d007      	beq.n	400286 <button_handler+0x3e>
		//Button 2 was pressed
		(*button_callback)(2);
	}
	else if((PIN_PUSHBUTTON_3_ID == id) && (PIN_PUSHBUTTON_3_MASK == mask)){
  400276:	f1b1 4f80 	cmp.w	r1, #1073741824	; 0x40000000
  40027a:	d1ea      	bne.n	400252 <button_handler+0xa>
		//Button 3 was pressed
		(*button_callback)(3);
  40027c:	4b04      	ldr	r3, [pc, #16]	; (400290 <button_handler+0x48>)
  40027e:	681b      	ldr	r3, [r3, #0]
  400280:	2003      	movs	r0, #3
  400282:	4798      	blx	r3
	}
	else{
		//Error
	}
}
  400284:	e7e5      	b.n	400252 <button_handler+0xa>
		(*button_callback)(2);
  400286:	4b02      	ldr	r3, [pc, #8]	; (400290 <button_handler+0x48>)
  400288:	681b      	ldr	r3, [r3, #0]
  40028a:	2002      	movs	r0, #2
  40028c:	4798      	blx	r3
  40028e:	bd08      	pop	{r3, pc}
  400290:	200008a4 	.word	0x200008a4

00400294 <ssd1306_write_command>:
 * data write function is called based on the selected interface.
 *
 * \param command the command to write
 */
static void ssd1306_write_command(uint8_t command)
{
  400294:	b570      	push	{r4, r5, r6, lr}
  400296:	b082      	sub	sp, #8
  400298:	4606      	mov	r6, r0
	usart_spi_select_device(SSD1306_USART_SPI, &device);
	ssd1306_sel_cmd();
	usart_spi_transmit(SSD1306_USART_SPI, command);
	usart_spi_deselect_device(SSD1306_USART_SPI, &device);
#elif defined(SSD1306_SPI_INTERFACE)
	struct spi_device device = {.id = SSD1306_CS_PIN};
  40029a:	ac02      	add	r4, sp, #8
  40029c:	2302      	movs	r3, #2
  40029e:	f844 3d04 	str.w	r3, [r4, #-4]!
	spi_select_device(SSD1306_SPI, &device);
  4002a2:	4d09      	ldr	r5, [pc, #36]	; (4002c8 <ssd1306_write_command+0x34>)
  4002a4:	4621      	mov	r1, r4
  4002a6:	4628      	mov	r0, r5
  4002a8:	4b08      	ldr	r3, [pc, #32]	; (4002cc <ssd1306_write_command+0x38>)
  4002aa:	4798      	blx	r3
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  4002ac:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  4002b0:	4b07      	ldr	r3, [pc, #28]	; (4002d0 <ssd1306_write_command+0x3c>)
  4002b2:	635a      	str	r2, [r3, #52]	; 0x34
 * \param data The data byte to be loaded
 *
 */
static inline void spi_put(Spi *p_spi, uint16_t data)
{
	p_spi->SPI_TDR = SPI_TDR_TD(data);
  4002b4:	60ee      	str	r6, [r5, #12]
	ssd1306_sel_cmd();
	spi_write_single(SSD1306_SPI, command);
	delay_us(SSD1306_LATENCY); // At least 3us
  4002b6:	2056      	movs	r0, #86	; 0x56
  4002b8:	4b06      	ldr	r3, [pc, #24]	; (4002d4 <ssd1306_write_command+0x40>)
  4002ba:	4798      	blx	r3
	spi_deselect_device(SSD1306_SPI, &device);
  4002bc:	4621      	mov	r1, r4
  4002be:	4628      	mov	r0, r5
  4002c0:	4b05      	ldr	r3, [pc, #20]	; (4002d8 <ssd1306_write_command+0x44>)
  4002c2:	4798      	blx	r3
#endif
}
  4002c4:	b002      	add	sp, #8
  4002c6:	bd70      	pop	{r4, r5, r6, pc}
  4002c8:	40008000 	.word	0x40008000
  4002cc:	00401c71 	.word	0x00401c71
  4002d0:	400e1200 	.word	0x400e1200
  4002d4:	20000001 	.word	0x20000001
  4002d8:	00401ca1 	.word	0x00401ca1

004002dc <configure_uart1>:
	usart_enable_interrupt(USART_SERIAL, US_IER_RXRDY);
	NVIC_EnableIRQ(USART1_IRQn);
}


void configure_uart1(uint32_t baudrate){
  4002dc:	b530      	push	{r4, r5, lr}
  4002de:	b085      	sub	sp, #20
  4002e0:	4604      	mov	r4, r0
	pio_configure(PINS_UART1_PIO, PINS_UART1_TYPE, PINS_UART1_MASK, PINS_UART1_ATTR);
  4002e2:	2300      	movs	r3, #0
  4002e4:	220c      	movs	r2, #12
  4002e6:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4002ea:	480c      	ldr	r0, [pc, #48]	; (40031c <configure_uart1+0x40>)
  4002ec:	4d0c      	ldr	r5, [pc, #48]	; (400320 <configure_uart1+0x44>)
  4002ee:	47a8      	blx	r5
	pmc_enable_periph_clk(ID_UART1);
  4002f0:	2009      	movs	r0, #9
  4002f2:	4b0c      	ldr	r3, [pc, #48]	; (400324 <configure_uart1+0x48>)
  4002f4:	4798      	blx	r3
	
	const sam_uart_opt_t uart1_sett = { sysclk_get_cpu_hz(), baudrate, UART_SERIAL_MODE };
  4002f6:	4b0c      	ldr	r3, [pc, #48]	; (400328 <configure_uart1+0x4c>)
  4002f8:	9301      	str	r3, [sp, #4]
  4002fa:	9402      	str	r4, [sp, #8]
  4002fc:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400300:	9303      	str	r3, [sp, #12]
	uart_init(UART1,&uart1_sett);
  400302:	4c0a      	ldr	r4, [pc, #40]	; (40032c <configure_uart1+0x50>)
  400304:	a901      	add	r1, sp, #4
  400306:	4620      	mov	r0, r4
  400308:	4b09      	ldr	r3, [pc, #36]	; (400330 <configure_uart1+0x54>)
  40030a:	4798      	blx	r3
	uart_enable_tx(UART1);
  40030c:	4620      	mov	r0, r4
  40030e:	4b09      	ldr	r3, [pc, #36]	; (400334 <configure_uart1+0x58>)
  400310:	4798      	blx	r3
	uart_enable_rx(UART1);
  400312:	4620      	mov	r0, r4
  400314:	4b08      	ldr	r3, [pc, #32]	; (400338 <configure_uart1+0x5c>)
  400316:	4798      	blx	r3
}
  400318:	b005      	add	sp, #20
  40031a:	bd30      	pop	{r4, r5, pc}
  40031c:	400e1000 	.word	0x400e1000
  400320:	00401fbd 	.word	0x00401fbd
  400324:	0040255d 	.word	0x0040255d
  400328:	07270e00 	.word	0x07270e00
  40032c:	400e0800 	.word	0x400e0800
  400330:	00402ae5 	.word	0x00402ae5
  400334:	00402b1b 	.word	0x00402b1b
  400338:	00402b21 	.word	0x00402b21

0040033c <configure_usart1>:

void configure_usart1(uint32_t baudrate){
  40033c:	b530      	push	{r4, r5, lr}
  40033e:	b087      	sub	sp, #28
  400340:	4605      	mov	r5, r0
	pio_configure(PINS_USART1_PIO, PINS_USART1_TYPE, PINS_USART1_MASK, PINS_USART1_ATTR);
  400342:	2300      	movs	r3, #0
  400344:	f44f 02c0 	mov.w	r2, #6291456	; 0x600000
  400348:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40034c:	480f      	ldr	r0, [pc, #60]	; (40038c <configure_usart1+0x50>)
  40034e:	4c10      	ldr	r4, [pc, #64]	; (400390 <configure_usart1+0x54>)
  400350:	47a0      	blx	r4
	pmc_enable_periph_clk(ID_USART1);
  400352:	200f      	movs	r0, #15
  400354:	4c0f      	ldr	r4, [pc, #60]	; (400394 <configure_usart1+0x58>)
  400356:	47a0      	blx	r4

	const sam_usart_opt_t usart_console_settings = {
  400358:	2300      	movs	r3, #0
  40035a:	9303      	str	r3, [sp, #12]
  40035c:	9304      	str	r3, [sp, #16]
  40035e:	9305      	str	r3, [sp, #20]
  400360:	9500      	str	r5, [sp, #0]
  400362:	23c0      	movs	r3, #192	; 0xc0
  400364:	9301      	str	r3, [sp, #4]
  400366:	f44f 6300 	mov.w	r3, #2048	; 0x800
  40036a:	9302      	str	r3, [sp, #8]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  40036c:	200f      	movs	r0, #15
  40036e:	47a0      	blx	r4
		USART_SERIAL_STOP_BIT,
		US_MR_CHMODE_NORMAL
	};

	sysclk_enable_peripheral_clock(USART_SERIAL_ID);
	usart_init_rs232(USART_SERIAL, &usart_console_settings, sysclk_get_peripheral_hz());
  400370:	4c09      	ldr	r4, [pc, #36]	; (400398 <configure_usart1+0x5c>)
  400372:	4a0a      	ldr	r2, [pc, #40]	; (40039c <configure_usart1+0x60>)
  400374:	4669      	mov	r1, sp
  400376:	4620      	mov	r0, r4
  400378:	4b09      	ldr	r3, [pc, #36]	; (4003a0 <configure_usart1+0x64>)
  40037a:	4798      	blx	r3
	usart_enable_tx(USART_SERIAL);
  40037c:	4620      	mov	r0, r4
  40037e:	4b09      	ldr	r3, [pc, #36]	; (4003a4 <configure_usart1+0x68>)
  400380:	4798      	blx	r3
	usart_enable_rx(USART_SERIAL);
  400382:	4620      	mov	r0, r4
  400384:	4b08      	ldr	r3, [pc, #32]	; (4003a8 <configure_usart1+0x6c>)
  400386:	4798      	blx	r3
}
  400388:	b007      	add	sp, #28
  40038a:	bd30      	pop	{r4, r5, pc}
  40038c:	400e0e00 	.word	0x400e0e00
  400390:	00401fbd 	.word	0x00401fbd
  400394:	0040255d 	.word	0x0040255d
  400398:	40028000 	.word	0x40028000
  40039c:	07270e00 	.word	0x07270e00
  4003a0:	00402bd5 	.word	0x00402bd5
  4003a4:	00402c29 	.word	0x00402c29
  4003a8:	00402c2f 	.word	0x00402c2f

004003ac <hal_io_init>:
void hal_io_init(void){
  4003ac:	b510      	push	{r4, lr}
	board_init();		//initialize board pins
  4003ae:	4b05      	ldr	r3, [pc, #20]	; (4003c4 <hal_io_init+0x18>)
  4003b0:	4798      	blx	r3
  4003b2:	200b      	movs	r0, #11
  4003b4:	4c04      	ldr	r4, [pc, #16]	; (4003c8 <hal_io_init+0x1c>)
  4003b6:	47a0      	blx	r4
  4003b8:	200c      	movs	r0, #12
  4003ba:	47a0      	blx	r4
  4003bc:	200d      	movs	r0, #13
  4003be:	47a0      	blx	r4
  4003c0:	bd10      	pop	{r4, pc}
  4003c2:	bf00      	nop
  4003c4:	00401d49 	.word	0x00401d49
  4003c8:	0040255d 	.word	0x0040255d

004003cc <hal_mtimer_start>:
void hal_mtimer_start( uint32_t ms_steps ){
  4003cc:	b538      	push	{r3, r4, r5, lr}
  4003ce:	4604      	mov	r4, r0
	rtt_sel_source(RTT, false);
  4003d0:	4d08      	ldr	r5, [pc, #32]	; (4003f4 <hal_mtimer_start+0x28>)
  4003d2:	2100      	movs	r1, #0
  4003d4:	4628      	mov	r0, r5
  4003d6:	4b08      	ldr	r3, [pc, #32]	; (4003f8 <hal_mtimer_start+0x2c>)
  4003d8:	4798      	blx	r3
	uint32_t steps = ms_steps*33 > RTT_MAX_VAL ? RTT_MAX_VAL : ms_steps*33; 
  4003da:	eb04 1444 	add.w	r4, r4, r4, lsl #5
  4003de:	f5b4 4f00 	cmp.w	r4, #32768	; 0x8000
  4003e2:	bf28      	it	cs
  4003e4:	f44f 4400 	movcs.w	r4, #32768	; 0x8000
	rtt_init(RTT, steps ); 
  4003e8:	b2a1      	uxth	r1, r4
  4003ea:	4628      	mov	r0, r5
  4003ec:	4b03      	ldr	r3, [pc, #12]	; (4003fc <hal_mtimer_start+0x30>)
  4003ee:	4798      	blx	r3
  4003f0:	bd38      	pop	{r3, r4, r5, pc}
  4003f2:	bf00      	nop
  4003f4:	400e1430 	.word	0x400e1430
  4003f8:	0040014d 	.word	0x0040014d
  4003fc:	00400139 	.word	0x00400139

00400400 <RTT_Handler>:
void RTT_Handler(void){
  400400:	b508      	push	{r3, lr}
	uint32_t ul_status = rtt_get_status(RTT);
  400402:	4805      	ldr	r0, [pc, #20]	; (400418 <RTT_Handler+0x18>)
  400404:	4b05      	ldr	r3, [pc, #20]	; (40041c <RTT_Handler+0x1c>)
  400406:	4798      	blx	r3
	if ((ul_status & RTT_SR_RTTINC) == RTT_SR_RTTINC)
  400408:	f010 0f02 	tst.w	r0, #2
  40040c:	d100      	bne.n	400410 <RTT_Handler+0x10>
  40040e:	bd08      	pop	{r3, pc}
		(*timer_callback)(); //call registered callback
  400410:	4b03      	ldr	r3, [pc, #12]	; (400420 <RTT_Handler+0x20>)
  400412:	681b      	ldr	r3, [r3, #0]
  400414:	4798      	blx	r3
}
  400416:	e7fa      	b.n	40040e <RTT_Handler+0xe>
  400418:	400e1430 	.word	0x400e1430
  40041c:	004001a1 	.word	0x004001a1
  400420:	200008a8 	.word	0x200008a8

00400424 <hal_mtimer_stop>:
void hal_mtimer_stop(void){
  400424:	b508      	push	{r3, lr}

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  400426:	4b06      	ldr	r3, [pc, #24]	; (400440 <hal_mtimer_stop+0x1c>)
  400428:	2208      	movs	r2, #8
  40042a:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  40042e:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
	rtt_disable_interrupt(RTT, RTT_MR_RTTINCIEN);
  400432:	f44f 3100 	mov.w	r1, #131072	; 0x20000
  400436:	4803      	ldr	r0, [pc, #12]	; (400444 <hal_mtimer_stop+0x20>)
  400438:	4b03      	ldr	r3, [pc, #12]	; (400448 <hal_mtimer_stop+0x24>)
  40043a:	4798      	blx	r3
  40043c:	bd08      	pop	{r3, pc}
  40043e:	bf00      	nop
  400440:	e000e100 	.word	0xe000e100
  400444:	400e1430 	.word	0x400e1430
  400448:	00400179 	.word	0x00400179

0040044c <hal_mtimer_read>:
uint32_t hal_mtimer_read( void ){
  40044c:	b508      	push	{r3, lr}
	return rtt_read_timer_value (RTT);
  40044e:	4802      	ldr	r0, [pc, #8]	; (400458 <hal_mtimer_read+0xc>)
  400450:	4b02      	ldr	r3, [pc, #8]	; (40045c <hal_mtimer_read+0x10>)
  400452:	4798      	blx	r3
}
  400454:	bd08      	pop	{r3, pc}
  400456:	bf00      	nop
  400458:	400e1430 	.word	0x400e1430
  40045c:	0040018d 	.word	0x0040018d

00400460 <hal_led_start>:
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400460:	4b0f      	ldr	r3, [pc, #60]	; (4004a0 <hal_led_start+0x40>)
  400462:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
  400466:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400468:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  40046c:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
  400470:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400472:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400476:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
  40047a:	f5a2 32f9 	sub.w	r2, r2, #127488	; 0x1f200
  40047e:	f44f 3180 	mov.w	r1, #65536	; 0x10000
  400482:	6111      	str	r1, [r2, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400484:	f8c2 10a0 	str.w	r1, [r2, #160]	; 0xa0
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400488:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  40048c:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  40048e:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400492:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  400496:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400498:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  40049c:	4770      	bx	lr
  40049e:	bf00      	nop
  4004a0:	400e1200 	.word	0x400e1200

004004a4 <hal_led_write>:
	switch(lednum){
  4004a4:	2804      	cmp	r0, #4
  4004a6:	d81b      	bhi.n	4004e0 <hal_led_write+0x3c>
  4004a8:	e8df f000 	tbb	[pc, r0]
  4004ac:	16141203 	.word	0x16141203
  4004b0:	18          	.byte	0x18
  4004b1:	00          	.byte	0x00
		case Led0: IOLine = IOPORT_CREATE_PIN(PIOC, 23); break;
  4004b2:	2257      	movs	r2, #87	; 0x57
	return pin >> 5;
  4004b4:	0953      	lsrs	r3, r2, #5
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
  4004b6:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  4004ba:	f203 7307 	addw	r3, r3, #1799	; 0x707
  4004be:	025b      	lsls	r3, r3, #9
	if (level) {
  4004c0:	b181      	cbz	r1, 4004e4 <hal_led_write+0x40>
	return 1U << (pin & 0x1F);
  4004c2:	f002 021f 	and.w	r2, r2, #31
  4004c6:	2101      	movs	r1, #1
  4004c8:	fa01 f202 	lsl.w	r2, r1, r2
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  4004cc:	635a      	str	r2, [r3, #52]	; 0x34
  4004ce:	4770      	bx	lr
		case Led1: IOLine = IOPORT_CREATE_PIN(PIOC, 20); break;
  4004d0:	2254      	movs	r2, #84	; 0x54
  4004d2:	e7ef      	b.n	4004b4 <hal_led_write+0x10>
		case Led2: IOLine = IOPORT_CREATE_PIN(PIOA, 16); break;
  4004d4:	2210      	movs	r2, #16
  4004d6:	e7ed      	b.n	4004b4 <hal_led_write+0x10>
		case Led3: IOLine = IOPORT_CREATE_PIN(PIOC, 22); break;
  4004d8:	2256      	movs	r2, #86	; 0x56
  4004da:	e7eb      	b.n	4004b4 <hal_led_write+0x10>
		case Led4: IOLine = IOPORT_CREATE_PIN(PIOC, 19); break;
  4004dc:	2253      	movs	r2, #83	; 0x53
  4004de:	e7e9      	b.n	4004b4 <hal_led_write+0x10>
	uint32_t IOLine = 0;
  4004e0:	2200      	movs	r2, #0
  4004e2:	e7e7      	b.n	4004b4 <hal_led_write+0x10>
	return 1U << (pin & 0x1F);
  4004e4:	f002 021f 	and.w	r2, r2, #31
  4004e8:	2101      	movs	r1, #1
  4004ea:	fa01 f202 	lsl.w	r2, r1, r2
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  4004ee:	631a      	str	r2, [r3, #48]	; 0x30
  4004f0:	4770      	bx	lr

004004f2 <hal_led_read>:
	switch(lednum){
  4004f2:	2804      	cmp	r0, #4
  4004f4:	d81e      	bhi.n	400534 <hal_led_read+0x42>
  4004f6:	e8df f000 	tbb	[pc, r0]
  4004fa:	1503      	.short	0x1503
  4004fc:	1917      	.short	0x1917
  4004fe:	1b          	.byte	0x1b
  4004ff:	00          	.byte	0x00
		case Led0: IOLine = IOPORT_CREATE_PIN(PIOC, 23); break;
  400500:	2257      	movs	r2, #87	; 0x57
	return pin >> 5;
  400502:	0953      	lsrs	r3, r2, #5
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
  400504:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  400508:	f203 7307 	addw	r3, r3, #1799	; 0x707
  40050c:	025b      	lsls	r3, r3, #9
	}
}

__always_inline static bool arch_ioport_get_pin_level(ioport_pin_t pin)
{
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
  40050e:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
	return 1U << (pin & 0x1F);
  400510:	f002 021f 	and.w	r2, r2, #31
  400514:	2301      	movs	r3, #1
  400516:	fa03 f202 	lsl.w	r2, r3, r2
	return !ioport_get_pin_level(IOLine); //negated since pin levels and LEDs state are opposite
  40051a:	420a      	tst	r2, r1
}
  40051c:	bf0c      	ite	eq
  40051e:	4618      	moveq	r0, r3
  400520:	2000      	movne	r0, #0
  400522:	4770      	bx	lr
		case Led1: IOLine = IOPORT_CREATE_PIN(PIOC, 20); break;
  400524:	2254      	movs	r2, #84	; 0x54
  400526:	e7ec      	b.n	400502 <hal_led_read+0x10>
		case Led2: IOLine = IOPORT_CREATE_PIN(PIOA, 16); break;
  400528:	2210      	movs	r2, #16
  40052a:	e7ea      	b.n	400502 <hal_led_read+0x10>
		case Led3: IOLine = IOPORT_CREATE_PIN(PIOC, 22); break;
  40052c:	2256      	movs	r2, #86	; 0x56
  40052e:	e7e8      	b.n	400502 <hal_led_read+0x10>
		case Led4: IOLine = IOPORT_CREATE_PIN(PIOC, 19); break;
  400530:	2253      	movs	r2, #83	; 0x53
  400532:	e7e6      	b.n	400502 <hal_led_read+0x10>
	uint32_t IOLine = 0;
  400534:	2200      	movs	r2, #0
  400536:	e7e4      	b.n	400502 <hal_led_read+0x10>

00400538 <hal_clock_start>:
void hal_clock_start( void ){
  400538:	b510      	push	{r4, lr}
	pmc_switch_sclk_to_32kxtal(PMC_OSC_XTAL);
  40053a:	2000      	movs	r0, #0
  40053c:	4b05      	ldr	r3, [pc, #20]	; (400554 <hal_clock_start+0x1c>)
  40053e:	4798      	blx	r3
	while (!pmc_osc_is_ready_32kxtal());
  400540:	4c05      	ldr	r4, [pc, #20]	; (400558 <hal_clock_start+0x20>)
  400542:	47a0      	blx	r4
  400544:	2800      	cmp	r0, #0
  400546:	d0fc      	beq.n	400542 <hal_clock_start+0xa>
	rtc_set_hour_mode(RTC, 0); //24-hrs mode by default
  400548:	2100      	movs	r1, #0
  40054a:	4804      	ldr	r0, [pc, #16]	; (40055c <hal_clock_start+0x24>)
  40054c:	4b04      	ldr	r3, [pc, #16]	; (400560 <hal_clock_start+0x28>)
  40054e:	4798      	blx	r3
  400550:	bd10      	pop	{r4, pc}
  400552:	bf00      	nop
  400554:	00402495 	.word	0x00402495
  400558:	004024b9 	.word	0x004024b9
  40055c:	400e1460 	.word	0x400e1460
  400560:	004025b1 	.word	0x004025b1

00400564 <hal_clock_write>:
void hal_clock_write( tTime* t ){
  400564:	b570      	push	{r4, r5, r6, lr}
  400566:	b082      	sub	sp, #8
  400568:	4604      	mov	r4, r0
	rtc_set_date( RTC, t->year, t->month, t->day, 1 );	//not too sure how week works, but if week is
  40056a:	4d08      	ldr	r5, [pc, #32]	; (40058c <hal_clock_write+0x28>)
  40056c:	2301      	movs	r3, #1
  40056e:	9300      	str	r3, [sp, #0]
  400570:	68c3      	ldr	r3, [r0, #12]
  400572:	6902      	ldr	r2, [r0, #16]
  400574:	6941      	ldr	r1, [r0, #20]
  400576:	4628      	mov	r0, r5
  400578:	4e05      	ldr	r6, [pc, #20]	; (400590 <hal_clock_write+0x2c>)
  40057a:	47b0      	blx	r6
	rtc_set_time( RTC, t->hours, t->minutes, t->seconds );
  40057c:	6823      	ldr	r3, [r4, #0]
  40057e:	6862      	ldr	r2, [r4, #4]
  400580:	68a1      	ldr	r1, [r4, #8]
  400582:	4628      	mov	r0, r5
  400584:	4c03      	ldr	r4, [pc, #12]	; (400594 <hal_clock_write+0x30>)
  400586:	47a0      	blx	r4
}
  400588:	b002      	add	sp, #8
  40058a:	bd70      	pop	{r4, r5, r6, pc}
  40058c:	400e1460 	.word	0x400e1460
  400590:	00402729 	.word	0x00402729
  400594:	00402621 	.word	0x00402621

00400598 <hal_clock_read>:
void hal_clock_read( tTime* t ){
  400598:	b5f0      	push	{r4, r5, r6, r7, lr}
  40059a:	b085      	sub	sp, #20
  40059c:	4604      	mov	r4, r0
	uint32_t dummy_week = 0;
  40059e:	ad04      	add	r5, sp, #16
  4005a0:	2300      	movs	r3, #0
  4005a2:	f845 3d04 	str.w	r3, [r5, #-4]!
	rtc_get_time(RTC, &(t->hours), &(t->minutes), &(t->seconds));
  4005a6:	4e0a      	ldr	r6, [pc, #40]	; (4005d0 <hal_clock_read+0x38>)
  4005a8:	4603      	mov	r3, r0
  4005aa:	1d02      	adds	r2, r0, #4
  4005ac:	f100 0108 	add.w	r1, r0, #8
  4005b0:	4630      	mov	r0, r6
  4005b2:	4f08      	ldr	r7, [pc, #32]	; (4005d4 <hal_clock_read+0x3c>)
  4005b4:	47b8      	blx	r7
	rtc_get_date(RTC, &(t->year), &(t->month), &(t->day), &dummy_week);
  4005b6:	9500      	str	r5, [sp, #0]
  4005b8:	f104 030c 	add.w	r3, r4, #12
  4005bc:	f104 0210 	add.w	r2, r4, #16
  4005c0:	f104 0114 	add.w	r1, r4, #20
  4005c4:	4630      	mov	r0, r6
  4005c6:	4c04      	ldr	r4, [pc, #16]	; (4005d8 <hal_clock_read+0x40>)
  4005c8:	47a0      	blx	r4
}
  4005ca:	b005      	add	sp, #20
  4005cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4005ce:	bf00      	nop
  4005d0:	400e1460 	.word	0x400e1460
  4005d4:	004025c7 	.word	0x004025c7
  4005d8:	004026b5 	.word	0x004026b5

004005dc <hal_display_start>:
void hal_display_start(void){
  4005dc:	b508      	push	{r3, lr}
	ssd1306_init();	//on-board OLED
  4005de:	4b01      	ldr	r3, [pc, #4]	; (4005e4 <hal_display_start+0x8>)
  4005e0:	4798      	blx	r3
  4005e2:	bd08      	pop	{r3, pc}
  4005e4:	00400e8d 	.word	0x00400e8d

004005e8 <hal_display_putc>:
void hal_display_putc( uint8_t character ){
  4005e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4005ec:	b082      	sub	sp, #8
	char_ptr = font_table[character - 32];
  4005ee:	3820      	subs	r0, #32
  4005f0:	4b1f      	ldr	r3, [pc, #124]	; (400670 <hal_display_putc+0x88>)
  4005f2:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
	for (i = 1; i <= char_ptr[0]; i++) {
  4005f6:	783b      	ldrb	r3, [r7, #0]
  4005f8:	b303      	cbz	r3, 40063c <hal_display_putc+0x54>
  4005fa:	2401      	movs	r4, #1
	usart_spi_transmit(SSD1306_USART_SPI, data);
	ssd1306_sel_cmd();
	usart_spi_deselect_device(SSD1306_USART_SPI, &device);
#elif defined(SSD1306_SPI_INTERFACE)
	struct spi_device device = {.id = SSD1306_CS_PIN};
	spi_select_device(SSD1306_SPI, &device);
  4005fc:	4e1d      	ldr	r6, [pc, #116]	; (400674 <hal_display_putc+0x8c>)
  4005fe:	f8df 9080 	ldr.w	r9, [pc, #128]	; 400680 <hal_display_putc+0x98>
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400602:	f8df 8080 	ldr.w	r8, [pc, #128]	; 400684 <hal_display_putc+0x9c>
		ssd1306_write_data(char_ptr[i]);
  400606:	f817 a004 	ldrb.w	sl, [r7, r4]
	struct spi_device device = {.id = SSD1306_CS_PIN};
  40060a:	ad02      	add	r5, sp, #8
  40060c:	2302      	movs	r3, #2
  40060e:	f845 3d04 	str.w	r3, [r5, #-4]!
	spi_select_device(SSD1306_SPI, &device);
  400612:	4629      	mov	r1, r5
  400614:	4630      	mov	r0, r6
  400616:	47c8      	blx	r9
  400618:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
  40061c:	f8c8 3030 	str.w	r3, [r8, #48]	; 0x30
  400620:	f8c6 a00c 	str.w	sl, [r6, #12]
	ssd1306_sel_data();
	spi_write_single(SSD1306_SPI, data);
	delay_us(SSD1306_LATENCY); // At least 3us
  400624:	2056      	movs	r0, #86	; 0x56
  400626:	4b14      	ldr	r3, [pc, #80]	; (400678 <hal_display_putc+0x90>)
  400628:	4798      	blx	r3
	spi_deselect_device(SSD1306_SPI, &device);
  40062a:	4629      	mov	r1, r5
  40062c:	4630      	mov	r0, r6
  40062e:	4b13      	ldr	r3, [pc, #76]	; (40067c <hal_display_putc+0x94>)
  400630:	4798      	blx	r3
	for (i = 1; i <= char_ptr[0]; i++) {
  400632:	3401      	adds	r4, #1
  400634:	b2e4      	uxtb	r4, r4
  400636:	783b      	ldrb	r3, [r7, #0]
  400638:	42a3      	cmp	r3, r4
  40063a:	d2e4      	bcs.n	400606 <hal_display_putc+0x1e>
	struct spi_device device = {.id = SSD1306_CS_PIN};
  40063c:	ac02      	add	r4, sp, #8
  40063e:	2302      	movs	r3, #2
  400640:	f844 3d04 	str.w	r3, [r4, #-4]!
	spi_select_device(SSD1306_SPI, &device);
  400644:	4d0b      	ldr	r5, [pc, #44]	; (400674 <hal_display_putc+0x8c>)
  400646:	4621      	mov	r1, r4
  400648:	4628      	mov	r0, r5
  40064a:	4b0d      	ldr	r3, [pc, #52]	; (400680 <hal_display_putc+0x98>)
  40064c:	4798      	blx	r3
  40064e:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  400652:	4b0c      	ldr	r3, [pc, #48]	; (400684 <hal_display_putc+0x9c>)
  400654:	631a      	str	r2, [r3, #48]	; 0x30
  400656:	2300      	movs	r3, #0
  400658:	60eb      	str	r3, [r5, #12]
	delay_us(SSD1306_LATENCY); // At least 3us
  40065a:	2056      	movs	r0, #86	; 0x56
  40065c:	4b06      	ldr	r3, [pc, #24]	; (400678 <hal_display_putc+0x90>)
  40065e:	4798      	blx	r3
	spi_deselect_device(SSD1306_SPI, &device);
  400660:	4621      	mov	r1, r4
  400662:	4628      	mov	r0, r5
  400664:	4b05      	ldr	r3, [pc, #20]	; (40067c <hal_display_putc+0x94>)
  400666:	4798      	blx	r3
}
  400668:	b002      	add	sp, #8
  40066a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40066e:	bf00      	nop
  400670:	200002ac 	.word	0x200002ac
  400674:	40008000 	.word	0x40008000
  400678:	20000001 	.word	0x20000001
  40067c:	00401ca1 	.word	0x00401ca1
  400680:	00401c71 	.word	0x00401c71
  400684:	400e1200 	.word	0x400e1200

00400688 <hal_display_cls>:
void hal_display_cls(void){
  400688:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40068c:	b083      	sub	sp, #12
  40068e:	f04f 0a00 	mov.w	sl, #0
 */
static inline void ssd1306_set_page_address(uint8_t address)
{
	// Make sure that the address is 4 bits (only 8 pages)
	address &= 0x0F;
	ssd1306_write_command(SSD1306_CMD_SET_PAGE_START_ADDRESS(address));
  400692:	f8df b078 	ldr.w	fp, [pc, #120]	; 40070c <hal_display_cls+0x84>
static inline void ssd1306_set_column_address(uint8_t address)
{
	// Make sure the address is 7 bits
	address &= 0x7F;
	ssd1306_write_command(SSD1306_CMD_SET_HIGH_COL(address >> 4));
	ssd1306_write_command(SSD1306_CMD_SET_LOW_COL(address & 0x0F));
  400696:	4657      	mov	r7, sl
  400698:	f8df 9074 	ldr.w	r9, [pc, #116]	; 400710 <hal_display_cls+0x88>
	ssd1306_write_command(SSD1306_CMD_SET_PAGE_START_ADDRESS(address));
  40069c:	f00a 0007 	and.w	r0, sl, #7
  4006a0:	f040 00b0 	orr.w	r0, r0, #176	; 0xb0
  4006a4:	47d8      	blx	fp
	ssd1306_write_command(SSD1306_CMD_SET_HIGH_COL(address >> 4));
  4006a6:	2010      	movs	r0, #16
  4006a8:	47d8      	blx	fp
	ssd1306_write_command(SSD1306_CMD_SET_LOW_COL(address & 0x0F));
  4006aa:	4638      	mov	r0, r7
  4006ac:	47d8      	blx	fp
  4006ae:	2680      	movs	r6, #128	; 0x80
	spi_select_device(SSD1306_SPI, &device);
  4006b0:	4d13      	ldr	r5, [pc, #76]	; (400700 <hal_display_cls+0x78>)
  4006b2:	f8df 8060 	ldr.w	r8, [pc, #96]	; 400714 <hal_display_cls+0x8c>
	struct spi_device device = {.id = SSD1306_CS_PIN};
  4006b6:	ac02      	add	r4, sp, #8
  4006b8:	2302      	movs	r3, #2
  4006ba:	f844 3d04 	str.w	r3, [r4, #-4]!
	spi_select_device(SSD1306_SPI, &device);
  4006be:	4621      	mov	r1, r4
  4006c0:	4628      	mov	r0, r5
  4006c2:	47c0      	blx	r8
  4006c4:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
  4006c8:	f8c9 3030 	str.w	r3, [r9, #48]	; 0x30
  4006cc:	60ef      	str	r7, [r5, #12]
	delay_us(SSD1306_LATENCY); // At least 3us
  4006ce:	2056      	movs	r0, #86	; 0x56
  4006d0:	4b0c      	ldr	r3, [pc, #48]	; (400704 <hal_display_cls+0x7c>)
  4006d2:	4798      	blx	r3
	spi_deselect_device(SSD1306_SPI, &device);
  4006d4:	4621      	mov	r1, r4
  4006d6:	4628      	mov	r0, r5
  4006d8:	4b0b      	ldr	r3, [pc, #44]	; (400708 <hal_display_cls+0x80>)
  4006da:	4798      	blx	r3

	for (page = 0; page < 4; ++page)
	{
		ssd1306_set_page_address(page);
		ssd1306_set_column_address(0);
		for (col = 0; col < 128; ++col)
  4006dc:	3e01      	subs	r6, #1
  4006de:	d1ea      	bne.n	4006b6 <hal_display_cls+0x2e>
  4006e0:	f10a 0a01 	add.w	sl, sl, #1
	for (page = 0; page < 4; ++page)
  4006e4:	f1ba 0f04 	cmp.w	sl, #4
  4006e8:	d1d8      	bne.n	40069c <hal_display_cls+0x14>
	ssd1306_write_command(SSD1306_CMD_SET_PAGE_START_ADDRESS(address));
  4006ea:	20b0      	movs	r0, #176	; 0xb0
  4006ec:	4c07      	ldr	r4, [pc, #28]	; (40070c <hal_display_cls+0x84>)
  4006ee:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_HIGH_COL(address >> 4));
  4006f0:	2010      	movs	r0, #16
  4006f2:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_LOW_COL(address & 0x0F));
  4006f4:	2000      	movs	r0, #0
  4006f6:	47a0      	blx	r4
}
  4006f8:	b003      	add	sp, #12
  4006fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4006fe:	bf00      	nop
  400700:	40008000 	.word	0x40008000
  400704:	20000001 	.word	0x20000001
  400708:	00401ca1 	.word	0x00401ca1
  40070c:	00400295 	.word	0x00400295
  400710:	400e1200 	.word	0x400e1200
  400714:	00401c71 	.word	0x00401c71

00400718 <hal_display_gotoxy>:
void hal_display_gotoxy( uint32_t x, uint32_t y ){
  400718:	b570      	push	{r4, r5, r6, lr}
  40071a:	460d      	mov	r5, r1
	ssd1306_set_column_address(x);
  40071c:	b2c6      	uxtb	r6, r0
	ssd1306_write_command(SSD1306_CMD_SET_HIGH_COL(address >> 4));
  40071e:	f3c6 1002 	ubfx	r0, r6, #4, #3
  400722:	f040 0010 	orr.w	r0, r0, #16
  400726:	4c05      	ldr	r4, [pc, #20]	; (40073c <hal_display_gotoxy+0x24>)
  400728:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_LOW_COL(address & 0x0F));
  40072a:	f006 000f 	and.w	r0, r6, #15
  40072e:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_PAGE_START_ADDRESS(address));
  400730:	f005 0007 	and.w	r0, r5, #7
  400734:	f040 00b0 	orr.w	r0, r0, #176	; 0xb0
  400738:	47a0      	blx	r4
  40073a:	bd70      	pop	{r4, r5, r6, pc}
  40073c:	00400295 	.word	0x00400295

00400740 <hal_display_numlines>:
}
  400740:	2004      	movs	r0, #4
  400742:	4770      	bx	lr

00400744 <hal_sensor_start>:
void hal_sensor_start( tSensorId sensor_id ){
  400744:	b538      	push	{r3, r4, r5, lr}
	switch( sensor_id ){
  400746:	b110      	cbz	r0, 40074e <hal_sensor_start+0xa>
  400748:	2801      	cmp	r0, #1
  40074a:	d01c      	beq.n	400786 <hal_sensor_start+0x42>
  40074c:	bd38      	pop	{r3, r4, r5, pc}
	gpio_configure_pin(LIGHT_SENSOR_GPIO, LIGHT_SENSOR_FLAGS);
  40074e:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  400752:	2020      	movs	r0, #32
  400754:	4b0d      	ldr	r3, [pc, #52]	; (40078c <hal_sensor_start+0x48>)
  400756:	4798      	blx	r3
	pmc_enable_periph_clk(ID_ADC);
  400758:	201d      	movs	r0, #29
  40075a:	4b0d      	ldr	r3, [pc, #52]	; (400790 <hal_sensor_start+0x4c>)
  40075c:	4798      	blx	r3
	adc_init(ADC, sysclk_get_cpu_hz(), 1000000, ADC_MR_STARTUP_SUT0);
  40075e:	4c0d      	ldr	r4, [pc, #52]	; (400794 <hal_sensor_start+0x50>)
  400760:	2300      	movs	r3, #0
  400762:	4a0d      	ldr	r2, [pc, #52]	; (400798 <hal_sensor_start+0x54>)
  400764:	490d      	ldr	r1, [pc, #52]	; (40079c <hal_sensor_start+0x58>)
  400766:	4620      	mov	r0, r4
  400768:	4d0d      	ldr	r5, [pc, #52]	; (4007a0 <hal_sensor_start+0x5c>)
  40076a:	47a8      	blx	r5
	adc_enable_channel(ADC, ADC_CHANNEL_4);		//ADC channel 4
  40076c:	2104      	movs	r1, #4
  40076e:	4620      	mov	r0, r4
  400770:	4b0c      	ldr	r3, [pc, #48]	; (4007a4 <hal_sensor_start+0x60>)
  400772:	4798      	blx	r3
	adc_configure_trigger(ADC, ADC_TRIG_SW, 1);	
  400774:	2201      	movs	r2, #1
  400776:	2100      	movs	r1, #0
  400778:	4620      	mov	r0, r4
  40077a:	4b0b      	ldr	r3, [pc, #44]	; (4007a8 <hal_sensor_start+0x64>)
  40077c:	4798      	blx	r3
	adc_start(ADC);		
  40077e:	4620      	mov	r0, r4
  400780:	4b0a      	ldr	r3, [pc, #40]	; (4007ac <hal_sensor_start+0x68>)
  400782:	4798      	blx	r3
  400784:	bd38      	pop	{r3, r4, r5, pc}
	at30tse_init();	
  400786:	4b0a      	ldr	r3, [pc, #40]	; (4007b0 <hal_sensor_start+0x6c>)
  400788:	4798      	blx	r3
  40078a:	bd38      	pop	{r3, r4, r5, pc}
  40078c:	004020a5 	.word	0x004020a5
  400790:	0040255d 	.word	0x0040255d
  400794:	40038000 	.word	0x40038000
  400798:	000f4240 	.word	0x000f4240
  40079c:	07270e00 	.word	0x07270e00
  4007a0:	00401e59 	.word	0x00401e59
  4007a4:	00401ea1 	.word	0x00401ea1
  4007a8:	00401e8d 	.word	0x00401e8d
  4007ac:	00401e9b 	.word	0x00401e9b
  4007b0:	00400f45 	.word	0x00400f45
  4007b4:	00000000 	.word	0x00000000

004007b8 <hal_sensor_read>:
uint32_t hal_sensor_read( tSensorId sensor_id ){
  4007b8:	b510      	push	{r4, lr}
  4007ba:	b084      	sub	sp, #16
	switch( sensor_id ){
  4007bc:	b118      	cbz	r0, 4007c6 <hal_sensor_read+0xe>
  4007be:	2801      	cmp	r0, #1
  4007c0:	d01a      	beq.n	4007f8 <hal_sensor_read+0x40>
	uint32_t val = 0;
  4007c2:	2000      	movs	r0, #0
	return val;
  4007c4:	e016      	b.n	4007f4 <hal_sensor_read+0x3c>
	return adc_get_channel_value(ADC, ADC_CHANNEL_4);
  4007c6:	2104      	movs	r1, #4
  4007c8:	481b      	ldr	r0, [pc, #108]	; (400838 <hal_sensor_read+0x80>)
  4007ca:	4b1c      	ldr	r3, [pc, #112]	; (40083c <hal_sensor_read+0x84>)
  4007cc:	4798      	blx	r3
			val = 100 - ( val/4095.0 * 100 ); //normalize to 100, 0 being darkest
  4007ce:	4b1c      	ldr	r3, [pc, #112]	; (400840 <hal_sensor_read+0x88>)
  4007d0:	4798      	blx	r3
  4007d2:	a317      	add	r3, pc, #92	; (adr r3, 400830 <hal_sensor_read+0x78>)
  4007d4:	e9d3 2300 	ldrd	r2, r3, [r3]
  4007d8:	4c1a      	ldr	r4, [pc, #104]	; (400844 <hal_sensor_read+0x8c>)
  4007da:	47a0      	blx	r4
  4007dc:	2200      	movs	r2, #0
  4007de:	4b1a      	ldr	r3, [pc, #104]	; (400848 <hal_sensor_read+0x90>)
  4007e0:	4c1a      	ldr	r4, [pc, #104]	; (40084c <hal_sensor_read+0x94>)
  4007e2:	47a0      	blx	r4
  4007e4:	4602      	mov	r2, r0
  4007e6:	460b      	mov	r3, r1
  4007e8:	2000      	movs	r0, #0
  4007ea:	4917      	ldr	r1, [pc, #92]	; (400848 <hal_sensor_read+0x90>)
  4007ec:	4c18      	ldr	r4, [pc, #96]	; (400850 <hal_sensor_read+0x98>)
  4007ee:	47a0      	blx	r4
  4007f0:	4b18      	ldr	r3, [pc, #96]	; (400854 <hal_sensor_read+0x9c>)
  4007f2:	4798      	blx	r3
}
  4007f4:	b004      	add	sp, #16
  4007f6:	bd10      	pop	{r4, pc}
	volatile double ret_val = 0;
  4007f8:	2200      	movs	r2, #0
  4007fa:	2300      	movs	r3, #0
  4007fc:	e9cd 2300 	strd	r2, r3, [sp]
	volatile uint64_t tries = 3;
  400800:	2203      	movs	r2, #3
  400802:	2300      	movs	r3, #0
  400804:	e9cd 2302 	strd	r2, r3, [sp, #8]
	while( at30tse_read_temperature(&ret_val) != TWI_SUCCESS && tries++ <= 3);
  400808:	4c13      	ldr	r4, [pc, #76]	; (400858 <hal_sensor_read+0xa0>)
  40080a:	4668      	mov	r0, sp
  40080c:	47a0      	blx	r4
  40080e:	b150      	cbz	r0, 400826 <hal_sensor_read+0x6e>
  400810:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  400814:	1c50      	adds	r0, r2, #1
  400816:	f143 0100 	adc.w	r1, r3, #0
  40081a:	e9cd 0102 	strd	r0, r1, [sp, #8]
  40081e:	2b00      	cmp	r3, #0
  400820:	bf08      	it	eq
  400822:	2a04      	cmpeq	r2, #4
  400824:	d3f1      	bcc.n	40080a <hal_sensor_read+0x52>
	return (uint32_t)ret_val; //return truncated temperature
  400826:	e9dd 0100 	ldrd	r0, r1, [sp]
  40082a:	4b0a      	ldr	r3, [pc, #40]	; (400854 <hal_sensor_read+0x9c>)
  40082c:	4798      	blx	r3
			break;
  40082e:	e7e1      	b.n	4007f4 <hal_sensor_read+0x3c>
  400830:	00000000 	.word	0x00000000
  400834:	40affe00 	.word	0x40affe00
  400838:	40038000 	.word	0x40038000
  40083c:	00401eab 	.word	0x00401eab
  400840:	004033e1 	.word	0x004033e1
  400844:	00403721 	.word	0x00403721
  400848:	40590000 	.word	0x40590000
  40084c:	004034cd 	.word	0x004034cd
  400850:	00403165 	.word	0x00403165
  400854:	004038f1 	.word	0x004038f1
  400858:	00400fb1 	.word	0x00400fb1

0040085c <hal_button_start_int>:
void hal_button_start_int( void (*callback) (tButtonNum) ){
  40085c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400860:	b083      	sub	sp, #12
	button_callback = callback; 
  400862:	4b38      	ldr	r3, [pc, #224]	; (400944 <hal_button_start_int+0xe8>)
  400864:	6018      	str	r0, [r3, #0]
	pmc_enable_periph_clk(PIN_PUSHBUTTON_0_ID);
  400866:	200b      	movs	r0, #11
  400868:	f8df a0f4 	ldr.w	sl, [pc, #244]	; 400960 <hal_button_start_int+0x104>
  40086c:	47d0      	blx	sl
	pio_set_debounce_filter(PIN_PUSHBUTTON_0_PIO, PIN_PUSHBUTTON_0_MASK, 10);
  40086e:	220a      	movs	r2, #10
  400870:	2104      	movs	r1, #4
  400872:	4835      	ldr	r0, [pc, #212]	; (400948 <hal_button_start_int+0xec>)
  400874:	f8df 90ec 	ldr.w	r9, [pc, #236]	; 400964 <hal_button_start_int+0x108>
  400878:	47c8      	blx	r9
	pio_handler_set(PIN_PUSHBUTTON_0_PIO, PIN_PUSHBUTTON_0_ID,
  40087a:	f8df 80ec 	ldr.w	r8, [pc, #236]	; 400968 <hal_button_start_int+0x10c>
  40087e:	f8cd 8000 	str.w	r8, [sp]
  400882:	2379      	movs	r3, #121	; 0x79
  400884:	2204      	movs	r2, #4
  400886:	210b      	movs	r1, #11
  400888:	482f      	ldr	r0, [pc, #188]	; (400948 <hal_button_start_int+0xec>)
  40088a:	4f30      	ldr	r7, [pc, #192]	; (40094c <hal_button_start_int+0xf0>)
  40088c:	47b8      	blx	r7
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  40088e:	4e30      	ldr	r6, [pc, #192]	; (400950 <hal_button_start_int+0xf4>)
  400890:	f44f 6b00 	mov.w	fp, #2048	; 0x800
  400894:	f8c6 b000 	str.w	fp, [r6]
	pio_handler_set_priority(PIN_PUSHBUTTON_0_PIO, (IRQn_Type) PIN_PUSHBUTTON_0_ID, buttons_irq_priority);
  400898:	2205      	movs	r2, #5
  40089a:	210b      	movs	r1, #11
  40089c:	482a      	ldr	r0, [pc, #168]	; (400948 <hal_button_start_int+0xec>)
  40089e:	4d2d      	ldr	r5, [pc, #180]	; (400954 <hal_button_start_int+0xf8>)
  4008a0:	47a8      	blx	r5
	pio_enable_interrupt(PIN_PUSHBUTTON_0_PIO, PIN_PUSHBUTTON_0_MASK);
  4008a2:	2104      	movs	r1, #4
  4008a4:	4828      	ldr	r0, [pc, #160]	; (400948 <hal_button_start_int+0xec>)
  4008a6:	4c2c      	ldr	r4, [pc, #176]	; (400958 <hal_button_start_int+0xfc>)
  4008a8:	47a0      	blx	r4
	pmc_enable_periph_clk(PIN_PUSHBUTTON_1_ID);
  4008aa:	200b      	movs	r0, #11
  4008ac:	47d0      	blx	sl
	pio_set_debounce_filter(PIN_PUSHBUTTON_1_PIO, PIN_PUSHBUTTON_1_MASK, 10);
  4008ae:	220a      	movs	r2, #10
  4008b0:	2101      	movs	r1, #1
  4008b2:	4825      	ldr	r0, [pc, #148]	; (400948 <hal_button_start_int+0xec>)
  4008b4:	47c8      	blx	r9
	pio_handler_set(PIN_PUSHBUTTON_1_PIO, PIN_PUSHBUTTON_1_ID,
  4008b6:	f8cd 8000 	str.w	r8, [sp]
  4008ba:	2379      	movs	r3, #121	; 0x79
  4008bc:	2201      	movs	r2, #1
  4008be:	210b      	movs	r1, #11
  4008c0:	4821      	ldr	r0, [pc, #132]	; (400948 <hal_button_start_int+0xec>)
  4008c2:	47b8      	blx	r7
  4008c4:	f8c6 b000 	str.w	fp, [r6]
	pio_handler_set_priority(PIN_PUSHBUTTON_1_PIO, (IRQn_Type) PIN_PUSHBUTTON_1_ID, buttons_irq_priority);
  4008c8:	2205      	movs	r2, #5
  4008ca:	210b      	movs	r1, #11
  4008cc:	481e      	ldr	r0, [pc, #120]	; (400948 <hal_button_start_int+0xec>)
  4008ce:	47a8      	blx	r5
	pio_enable_interrupt(PIN_PUSHBUTTON_1_PIO, PIN_PUSHBUTTON_1_MASK);
  4008d0:	2101      	movs	r1, #1
  4008d2:	481d      	ldr	r0, [pc, #116]	; (400948 <hal_button_start_int+0xec>)
  4008d4:	47a0      	blx	r4
	pmc_enable_periph_clk(PIN_PUSHBUTTON_2_ID);
  4008d6:	200d      	movs	r0, #13
  4008d8:	47d0      	blx	sl
	pio_set_debounce_filter(PIN_PUSHBUTTON_2_PIO, PIN_PUSHBUTTON_2_MASK, 10);
  4008da:	220a      	movs	r2, #10
  4008dc:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  4008e0:	481e      	ldr	r0, [pc, #120]	; (40095c <hal_button_start_int+0x100>)
  4008e2:	47c8      	blx	r9
	pio_handler_set(PIN_PUSHBUTTON_2_PIO, PIN_PUSHBUTTON_2_ID,
  4008e4:	f8cd 8000 	str.w	r8, [sp]
  4008e8:	2379      	movs	r3, #121	; 0x79
  4008ea:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  4008ee:	210d      	movs	r1, #13
  4008f0:	481a      	ldr	r0, [pc, #104]	; (40095c <hal_button_start_int+0x100>)
  4008f2:	47b8      	blx	r7
  4008f4:	f44f 5b00 	mov.w	fp, #8192	; 0x2000
  4008f8:	f8c6 b000 	str.w	fp, [r6]
	pio_handler_set_priority(PIN_PUSHBUTTON_2_PIO, (IRQn_Type) PIN_PUSHBUTTON_2_ID, buttons_irq_priority);
  4008fc:	2205      	movs	r2, #5
  4008fe:	210d      	movs	r1, #13
  400900:	4816      	ldr	r0, [pc, #88]	; (40095c <hal_button_start_int+0x100>)
  400902:	47a8      	blx	r5
	pio_enable_interrupt(PIN_PUSHBUTTON_2_PIO, PIN_PUSHBUTTON_2_MASK);
  400904:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  400908:	4814      	ldr	r0, [pc, #80]	; (40095c <hal_button_start_int+0x100>)
  40090a:	47a0      	blx	r4
	pmc_enable_periph_clk(PIN_PUSHBUTTON_3_ID);
  40090c:	200d      	movs	r0, #13
  40090e:	47d0      	blx	sl
	pio_set_debounce_filter(PIN_PUSHBUTTON_3_PIO, PIN_PUSHBUTTON_3_MASK, 10);
  400910:	220a      	movs	r2, #10
  400912:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  400916:	4811      	ldr	r0, [pc, #68]	; (40095c <hal_button_start_int+0x100>)
  400918:	47c8      	blx	r9
	pio_handler_set(PIN_PUSHBUTTON_3_PIO, PIN_PUSHBUTTON_3_ID,
  40091a:	f8cd 8000 	str.w	r8, [sp]
  40091e:	2379      	movs	r3, #121	; 0x79
  400920:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  400924:	210d      	movs	r1, #13
  400926:	480d      	ldr	r0, [pc, #52]	; (40095c <hal_button_start_int+0x100>)
  400928:	47b8      	blx	r7
  40092a:	f8c6 b000 	str.w	fp, [r6]
	pio_handler_set_priority(PIN_PUSHBUTTON_3_PIO, (IRQn_Type) PIN_PUSHBUTTON_3_ID, buttons_irq_priority);
  40092e:	2205      	movs	r2, #5
  400930:	210d      	movs	r1, #13
  400932:	480a      	ldr	r0, [pc, #40]	; (40095c <hal_button_start_int+0x100>)
  400934:	47a8      	blx	r5
	pio_enable_interrupt(PIN_PUSHBUTTON_3_PIO, PIN_PUSHBUTTON_3_MASK);
  400936:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  40093a:	4808      	ldr	r0, [pc, #32]	; (40095c <hal_button_start_int+0x100>)
  40093c:	47a0      	blx	r4
}
  40093e:	b003      	add	sp, #12
  400940:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  400944:	200008a4 	.word	0x200008a4
  400948:	400e0e00 	.word	0x400e0e00
  40094c:	00402305 	.word	0x00402305
  400950:	e000e100 	.word	0xe000e100
  400954:	004023b1 	.word	0x004023b1
  400958:	00402077 	.word	0x00402077
  40095c:	400e1200 	.word	0x400e1200
  400960:	0040255d 	.word	0x0040255d
  400964:	00401eb9 	.word	0x00401eb9
  400968:	00400249 	.word	0x00400249

0040096c <hal_serial_start>:
void hal_serial_start( tSerialId serial_id, uint32_t baudrate ){
  40096c:	b508      	push	{r3, lr}
	switch( serial_id ){
  40096e:	b110      	cbz	r0, 400976 <hal_serial_start+0xa>
  400970:	2801      	cmp	r0, #1
  400972:	d004      	beq.n	40097e <hal_serial_start+0x12>
  400974:	bd08      	pop	{r3, pc}
		case SerialA:	configure_uart1(baudrate);	break;	//SerialA is UART1
  400976:	4608      	mov	r0, r1
  400978:	4b03      	ldr	r3, [pc, #12]	; (400988 <hal_serial_start+0x1c>)
  40097a:	4798      	blx	r3
  40097c:	bd08      	pop	{r3, pc}
		case SerialB:	configure_usart1(baudrate);	break;	//SerialB is USART1
  40097e:	4608      	mov	r0, r1
  400980:	4b02      	ldr	r3, [pc, #8]	; (40098c <hal_serial_start+0x20>)
  400982:	4798      	blx	r3
  400984:	bd08      	pop	{r3, pc}
  400986:	bf00      	nop
  400988:	004002dd 	.word	0x004002dd
  40098c:	0040033d 	.word	0x0040033d

00400990 <hal_serial_putc>:
void hal_serial_putc( tSerialId serial_id, uint8_t c ){
  400990:	b508      	push	{r3, lr}
	switch( serial_id ){
  400992:	b110      	cbz	r0, 40099a <hal_serial_putc+0xa>
  400994:	2801      	cmp	r0, #1
  400996:	d009      	beq.n	4009ac <hal_serial_putc+0x1c>
  400998:	bd08      	pop	{r3, pc}

static void uart1_putc( uint8_t c ){
	while ( !(UART1->UART_SR & UART_SR_TXRDY) ); //wait for Tx to be available
  40099a:	4a09      	ldr	r2, [pc, #36]	; (4009c0 <hal_serial_putc+0x30>)
  40099c:	6953      	ldr	r3, [r2, #20]
  40099e:	f013 0f02 	tst.w	r3, #2
  4009a2:	d0fb      	beq.n	40099c <hal_serial_putc+0xc>
	uart_write( UART1, c );						 //transmit
  4009a4:	4806      	ldr	r0, [pc, #24]	; (4009c0 <hal_serial_putc+0x30>)
  4009a6:	4b07      	ldr	r3, [pc, #28]	; (4009c4 <hal_serial_putc+0x34>)
  4009a8:	4798      	blx	r3
  4009aa:	bd08      	pop	{r3, pc}
}

static void usart1_putc( uint8_t c ){
	while( !(USART_SERIAL->US_CSR & US_CSR_TXRDY) ); //wait until TX is ready
  4009ac:	4a06      	ldr	r2, [pc, #24]	; (4009c8 <hal_serial_putc+0x38>)
  4009ae:	6953      	ldr	r3, [r2, #20]
  4009b0:	f013 0f02 	tst.w	r3, #2
  4009b4:	d0fb      	beq.n	4009ae <hal_serial_putc+0x1e>
	usart_write( USART_SERIAL, c );					 //write
  4009b6:	4804      	ldr	r0, [pc, #16]	; (4009c8 <hal_serial_putc+0x38>)
  4009b8:	4b04      	ldr	r3, [pc, #16]	; (4009cc <hal_serial_putc+0x3c>)
  4009ba:	4798      	blx	r3
  4009bc:	bd08      	pop	{r3, pc}
  4009be:	bf00      	nop
  4009c0:	400e0800 	.word	0x400e0800
  4009c4:	00402b2b 	.word	0x00402b2b
  4009c8:	40028000 	.word	0x40028000
  4009cc:	00402c39 	.word	0x00402c39

004009d0 <hal_serial_getc>:
uint8_t hal_serial_getc( tSerialId serial_id ){
  4009d0:	b530      	push	{r4, r5, lr}
  4009d2:	b083      	sub	sp, #12
	uint8_t buf = 0;
  4009d4:	2300      	movs	r3, #0
  4009d6:	f88d 3007 	strb.w	r3, [sp, #7]
	switch( serial_id ){
  4009da:	b128      	cbz	r0, 4009e8 <hal_serial_getc+0x18>
  4009dc:	2801      	cmp	r0, #1
  4009de:	d010      	beq.n	400a02 <hal_serial_getc+0x32>
}
  4009e0:	f89d 0007 	ldrb.w	r0, [sp, #7]
  4009e4:	b003      	add	sp, #12
  4009e6:	bd30      	pop	{r4, r5, pc}
}

static void uart1_getc( uint8_t* buf ){
	while( !(uart_get_status(UART1) & UART_SR_RXRDY) ); //wait until a character is ready
  4009e8:	4d0c      	ldr	r5, [pc, #48]	; (400a1c <hal_serial_getc+0x4c>)
  4009ea:	4c0d      	ldr	r4, [pc, #52]	; (400a20 <hal_serial_getc+0x50>)
  4009ec:	4628      	mov	r0, r5
  4009ee:	47a0      	blx	r4
  4009f0:	f010 0f01 	tst.w	r0, #1
  4009f4:	d0fa      	beq.n	4009ec <hal_serial_getc+0x1c>
	uart_read( UART1, buf );							//read
  4009f6:	f10d 0107 	add.w	r1, sp, #7
  4009fa:	4808      	ldr	r0, [pc, #32]	; (400a1c <hal_serial_getc+0x4c>)
  4009fc:	4b09      	ldr	r3, [pc, #36]	; (400a24 <hal_serial_getc+0x54>)
  4009fe:	4798      	blx	r3
  400a00:	e7ee      	b.n	4009e0 <hal_serial_getc+0x10>
}

static void usart1_getc( uint8_t* buf ){
	while( !(usart_get_status(USART1) & US_CSR_RXRDY) ); //wait until a character is available
  400a02:	4d09      	ldr	r5, [pc, #36]	; (400a28 <hal_serial_getc+0x58>)
  400a04:	4c09      	ldr	r4, [pc, #36]	; (400a2c <hal_serial_getc+0x5c>)
  400a06:	4628      	mov	r0, r5
  400a08:	47a0      	blx	r4
  400a0a:	f010 0f01 	tst.w	r0, #1
  400a0e:	d0fa      	beq.n	400a06 <hal_serial_getc+0x36>
	usart_read(USART1, buf);							 //read
  400a10:	f10d 0107 	add.w	r1, sp, #7
  400a14:	4804      	ldr	r0, [pc, #16]	; (400a28 <hal_serial_getc+0x58>)
  400a16:	4b06      	ldr	r3, [pc, #24]	; (400a30 <hal_serial_getc+0x60>)
  400a18:	4798      	blx	r3
  400a1a:	e7e1      	b.n	4009e0 <hal_serial_getc+0x10>
  400a1c:	400e0800 	.word	0x400e0800
  400a20:	00402b27 	.word	0x00402b27
  400a24:	00402b3b 	.word	0x00402b3b
  400a28:	40028000 	.word	0x40028000
  400a2c:	00402c35 	.word	0x00402c35
  400a30:	00402c4d 	.word	0x00402c4d

00400a34 <UART1_Handler>:
}


//UART1 ISR
void UART1_Handler(){
  400a34:	b500      	push	{lr}
  400a36:	b083      	sub	sp, #12
	uint8_t rx_data;
	uint32_t status = uart_get_status(UART1);
  400a38:	4809      	ldr	r0, [pc, #36]	; (400a60 <UART1_Handler+0x2c>)
  400a3a:	4b0a      	ldr	r3, [pc, #40]	; (400a64 <UART1_Handler+0x30>)
  400a3c:	4798      	blx	r3
	
	if(status & UART_SR_RXRDY){
  400a3e:	f010 0f01 	tst.w	r0, #1
  400a42:	d102      	bne.n	400a4a <UART1_Handler+0x16>
		uart_read(UART1, &rx_data);
		
		//pass to upper layer
		uart1_callback(rx_data);
	}
}
  400a44:	b003      	add	sp, #12
  400a46:	f85d fb04 	ldr.w	pc, [sp], #4
		uart_read(UART1, &rx_data);
  400a4a:	f10d 0107 	add.w	r1, sp, #7
  400a4e:	4804      	ldr	r0, [pc, #16]	; (400a60 <UART1_Handler+0x2c>)
  400a50:	4b05      	ldr	r3, [pc, #20]	; (400a68 <UART1_Handler+0x34>)
  400a52:	4798      	blx	r3
		uart1_callback(rx_data);
  400a54:	4b05      	ldr	r3, [pc, #20]	; (400a6c <UART1_Handler+0x38>)
  400a56:	681b      	ldr	r3, [r3, #0]
  400a58:	f89d 0007 	ldrb.w	r0, [sp, #7]
  400a5c:	4798      	blx	r3
}
  400a5e:	e7f1      	b.n	400a44 <UART1_Handler+0x10>
  400a60:	400e0800 	.word	0x400e0800
  400a64:	00402b27 	.word	0x00402b27
  400a68:	00402b3b 	.word	0x00402b3b
  400a6c:	200008ac 	.word	0x200008ac

00400a70 <USART1_Handler>:

//USART1 ISR
void USART1_Handler(){
  400a70:	b500      	push	{lr}
  400a72:	b083      	sub	sp, #12
	uint8_t received_byte;
	uint32_t dw_status = usart_get_status(USART1);
  400a74:	4809      	ldr	r0, [pc, #36]	; (400a9c <USART1_Handler+0x2c>)
  400a76:	4b0a      	ldr	r3, [pc, #40]	; (400aa0 <USART1_Handler+0x30>)
  400a78:	4798      	blx	r3
	
	if (dw_status & US_CSR_RXRDY) {
  400a7a:	f010 0f01 	tst.w	r0, #1
  400a7e:	d102      	bne.n	400a86 <USART1_Handler+0x16>
		usart_read(USART1, &received_byte);
		
		//pass to upper layer
		usart1_callback(received_byte);
	}
}
  400a80:	b003      	add	sp, #12
  400a82:	f85d fb04 	ldr.w	pc, [sp], #4
		usart_read(USART1, &received_byte);
  400a86:	f10d 0107 	add.w	r1, sp, #7
  400a8a:	4804      	ldr	r0, [pc, #16]	; (400a9c <USART1_Handler+0x2c>)
  400a8c:	4b05      	ldr	r3, [pc, #20]	; (400aa4 <USART1_Handler+0x34>)
  400a8e:	4798      	blx	r3
		usart1_callback(received_byte);
  400a90:	4b05      	ldr	r3, [pc, #20]	; (400aa8 <USART1_Handler+0x38>)
  400a92:	681b      	ldr	r3, [r3, #0]
  400a94:	f89d 0007 	ldrb.w	r0, [sp, #7]
  400a98:	4798      	blx	r3
}
  400a9a:	e7f1      	b.n	400a80 <USART1_Handler+0x10>
  400a9c:	40028000 	.word	0x40028000
  400aa0:	00402c35 	.word	0x00402c35
  400aa4:	00402c4d 	.word	0x00402c4d
  400aa8:	200008b0 	.word	0x200008b0

00400aac <hal_memreg_init>:
  400aac:	4770      	bx	lr

00400aae <hal_nvmem_init>:
*
*	Initializes Non-volatile memory. This function must be called after
*	HAL CPU Init. That is: hal_cpu_init(); hal_nvmem_init();...
*
*/
void hal_nvmem_init(void){
  400aae:	4770      	bx	lr

00400ab0 <hal_nvmem_start>:
*	@param mem_id id of the memory to be initialized
*
*	@return true if the memory was initialized correctly, false otherwise.
*/
bool hal_nvmem_start( tNVMemId mem_id ){
	switch(mem_id){
  400ab0:	2801      	cmp	r0, #1
  400ab2:	d117      	bne.n	400ae4 <hal_nvmem_start+0x34>
bool hal_nvmem_start( tNVMemId mem_id ){
  400ab4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		case NVMemSDCardFAT:				//SD Card + FAT
			sdcard_fat_init = true;
  400ab6:	2201      	movs	r2, #1
  400ab8:	4b13      	ldr	r3, [pc, #76]	; (400b08 <hal_nvmem_start+0x58>)
  400aba:	701a      	strb	r2, [r3, #0]
	return f_mount(LUN_ID_SD_MMC_0_MEM, &fs) == FR_OK;
}

static bool sdcard_init( uint32_t num_attempts ){
	//check for SD Card to be inserted
	if( !gpio_pin_is_low(SD_MMC_0_CD_GPIO) ){
  400abc:	204c      	movs	r0, #76	; 0x4c
  400abe:	4b13      	ldr	r3, [pc, #76]	; (400b0c <hal_nvmem_start+0x5c>)
  400ac0:	4798      	blx	r3
  400ac2:	b108      	cbz	r0, 400ac8 <hal_nvmem_start+0x18>
			return sdcard_init(10) && fs_mount();	
  400ac4:	2000      	movs	r0, #0
}
  400ac6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		return false;
	}
	
	//Init SD/MMC Stack
	sd_mmc_init();
  400ac8:	4b11      	ldr	r3, [pc, #68]	; (400b10 <hal_nvmem_start+0x60>)
  400aca:	4798      	blx	r3
  400acc:	240b      	movs	r4, #11
	
	//Initializes Card
	while (	sd_mmc_check(0) != SD_MMC_OK ){
  400ace:	4d11      	ldr	r5, [pc, #68]	; (400b14 <hal_nvmem_start+0x64>)
		if( num_attempts-- <= 0 ) return false;
		delay_ms(200);
  400ad0:	4f11      	ldr	r7, [pc, #68]	; (400b18 <hal_nvmem_start+0x68>)
  400ad2:	4e12      	ldr	r6, [pc, #72]	; (400b1c <hal_nvmem_start+0x6c>)
	while (	sd_mmc_check(0) != SD_MMC_OK ){
  400ad4:	2000      	movs	r0, #0
  400ad6:	47a8      	blx	r5
  400ad8:	b130      	cbz	r0, 400ae8 <hal_nvmem_start+0x38>
		if( num_attempts-- <= 0 ) return false;
  400ada:	3c01      	subs	r4, #1
  400adc:	d0f2      	beq.n	400ac4 <hal_nvmem_start+0x14>
		delay_ms(200);
  400ade:	4638      	mov	r0, r7
  400ae0:	47b0      	blx	r6
  400ae2:	e7f7      	b.n	400ad4 <hal_nvmem_start+0x24>
		case NVMemSDCard:		return false;							//unimplemented (raw access to sd card)
  400ae4:	2000      	movs	r0, #0
  400ae6:	4770      	bx	lr
	memset(&fs, 0, sizeof(FATFS));
  400ae8:	4c0d      	ldr	r4, [pc, #52]	; (400b20 <hal_nvmem_start+0x70>)
  400aea:	f44f 720c 	mov.w	r2, #560	; 0x230
  400aee:	2100      	movs	r1, #0
  400af0:	4620      	mov	r0, r4
  400af2:	4b0c      	ldr	r3, [pc, #48]	; (400b24 <hal_nvmem_start+0x74>)
  400af4:	4798      	blx	r3
	return f_mount(LUN_ID_SD_MMC_0_MEM, &fs) == FR_OK;
  400af6:	4621      	mov	r1, r4
  400af8:	2000      	movs	r0, #0
  400afa:	4b0b      	ldr	r3, [pc, #44]	; (400b28 <hal_nvmem_start+0x78>)
  400afc:	4798      	blx	r3
			return sdcard_init(10) && fs_mount();	
  400afe:	fab0 f080 	clz	r0, r0
  400b02:	0940      	lsrs	r0, r0, #5
  400b04:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400b06:	bf00      	nop
  400b08:	20000ae4 	.word	0x20000ae4
  400b0c:	00402087 	.word	0x00402087
  400b10:	0040124d 	.word	0x0040124d
  400b14:	00401279 	.word	0x00401279
  400b18:	001a286e 	.word	0x001a286e
  400b1c:	20000001 	.word	0x20000001
  400b20:	200008b4 	.word	0x200008b4
  400b24:	00403c91 	.word	0x00403c91
  400b28:	00402ec1 	.word	0x00402ec1

00400b2c <syscalls_entry_point>:
*	   2. Based on that extract the right SP (PSP or MSP)
*	   3. The rest is the same...
*
*	There' no reason to make a syscall from the kernel though, so it's all good.
*/
void syscalls_entry_point(void){
  400b2c:	b538      	push	{r3, r4, r5, lr}
	
	uint32_t sp = hal_cpu_get_psp();
  400b2e:	4b2c      	ldr	r3, [pc, #176]	; (400be0 <syscalls_entry_point+0xb4>)
  400b30:	4798      	blx	r3
	
	//extract the number from the read instruction
	svc_number &= 0x00FF;
	
	//get arguments
	void* arg0 = ((uint32_t*)sp)[0];
  400b32:	6804      	ldr	r4, [r0, #0]
	void* arg1 = ((uint32_t*)sp)[1];
  400b34:	6845      	ldr	r5, [r0, #4]
	uint32_t svc_number = ((uint16_t*) ((uint32_t*)sp)[6])[-1];
  400b36:	6983      	ldr	r3, [r0, #24]
	void* arg2 = ((uint32_t*)sp)[2];
	void* arg3 = ((uint32_t*)sp)[3];
	
	//attend syscall
	switch(svc_number){
  400b38:	f813 3c02 	ldrb.w	r3, [r3, #-2]
  400b3c:	2b10      	cmp	r3, #16
  400b3e:	d84e      	bhi.n	400bde <syscalls_entry_point+0xb2>
  400b40:	e8df f003 	tbb	[pc, r3]
  400b44:	19151009 	.word	0x19151009
  400b48:	2a26211d 	.word	0x2a26211d
  400b4c:	3a36332e 	.word	0x3a36332e
  400b50:	474d433f 	.word	0x474d433f
  400b54:	4a          	.byte	0x4a
  400b55:	00          	.byte	0x00
		//LED
		case SVCLedWrite:
			hal_led_write( (tLedNum)arg0, (tLedState)arg1 );
  400b56:	1c29      	adds	r1, r5, #0
  400b58:	bf18      	it	ne
  400b5a:	2101      	movne	r1, #1
  400b5c:	4620      	mov	r0, r4
  400b5e:	4b21      	ldr	r3, [pc, #132]	; (400be4 <syscalls_entry_point+0xb8>)
  400b60:	4798      	blx	r3
			break;
  400b62:	bd38      	pop	{r3, r4, r5, pc}
		case SVCLedRead:
			*((tLedState*)arg1) = hal_led_read((tLedNum)arg0);
  400b64:	4620      	mov	r0, r4
  400b66:	4b20      	ldr	r3, [pc, #128]	; (400be8 <syscalls_entry_point+0xbc>)
  400b68:	4798      	blx	r3
  400b6a:	7028      	strb	r0, [r5, #0]
			break;
  400b6c:	bd38      	pop	{r3, r4, r5, pc}
		//Button
		case SVCButtonStartEv:
			hal_button_start_int((void(*)(tButtonNum)) arg0);
  400b6e:	4620      	mov	r0, r4
  400b70:	4b1e      	ldr	r3, [pc, #120]	; (400bec <syscalls_entry_point+0xc0>)
  400b72:	4798      	blx	r3
			break;
  400b74:	bd38      	pop	{r3, r4, r5, pc}
		//Clock
		case SVCClockRead:
			hal_clock_read((tTime*)arg0);
  400b76:	4620      	mov	r0, r4
  400b78:	4b1d      	ldr	r3, [pc, #116]	; (400bf0 <syscalls_entry_point+0xc4>)
  400b7a:	4798      	blx	r3
			break;
  400b7c:	bd38      	pop	{r3, r4, r5, pc}
		case SVCClockWrite:
			hal_clock_write((tTime*)arg0);
  400b7e:	4620      	mov	r0, r4
  400b80:	4b1c      	ldr	r3, [pc, #112]	; (400bf4 <syscalls_entry_point+0xc8>)
  400b82:	4798      	blx	r3
			break;
  400b84:	bd38      	pop	{r3, r4, r5, pc}
		//Serial
		case SVCSerialPutc:
			hal_serial_putc((tSerialId)arg0, (uint8_t)arg1);
  400b86:	b2e9      	uxtb	r1, r5
  400b88:	4620      	mov	r0, r4
  400b8a:	4b1b      	ldr	r3, [pc, #108]	; (400bf8 <syscalls_entry_point+0xcc>)
  400b8c:	4798      	blx	r3
			break;
  400b8e:	bd38      	pop	{r3, r4, r5, pc}
		case SVCSerialGetc:
			hal_serial_getc((tSerialId)arg0);
  400b90:	4620      	mov	r0, r4
  400b92:	4b1a      	ldr	r3, [pc, #104]	; (400bfc <syscalls_entry_point+0xd0>)
  400b94:	4798      	blx	r3
			break;
  400b96:	bd38      	pop	{r3, r4, r5, pc}
		//Sensor
		case SVCSensorStartEv:
			hal_sensor_start((tSensorId)arg0);
  400b98:	4620      	mov	r0, r4
  400b9a:	4b19      	ldr	r3, [pc, #100]	; (400c00 <syscalls_entry_point+0xd4>)
  400b9c:	4798      	blx	r3
			break;
  400b9e:	bd38      	pop	{r3, r4, r5, pc}
		case SVCSensorRead:
			*((uint32_t*)arg1) = hal_sensor_read((tSensorId)arg0);
  400ba0:	4620      	mov	r0, r4
  400ba2:	4b18      	ldr	r3, [pc, #96]	; (400c04 <syscalls_entry_point+0xd8>)
  400ba4:	4798      	blx	r3
  400ba6:	6028      	str	r0, [r5, #0]
			break;
  400ba8:	bd38      	pop	{r3, r4, r5, pc}
		//Display
		case SVCDisplayCls:
			hal_display_cls();
  400baa:	4b17      	ldr	r3, [pc, #92]	; (400c08 <syscalls_entry_point+0xdc>)
  400bac:	4798      	blx	r3
			break;
  400bae:	bd38      	pop	{r3, r4, r5, pc}
		case SVCDisplayPutc:
			hal_display_putc((uint8_t)arg0);
  400bb0:	b2e0      	uxtb	r0, r4
  400bb2:	4b16      	ldr	r3, [pc, #88]	; (400c0c <syscalls_entry_point+0xe0>)
  400bb4:	4798      	blx	r3
			break;
  400bb6:	bd38      	pop	{r3, r4, r5, pc}
		case SVCDisplayGotoxy:
			hal_display_gotoxy((uint32_t)arg0, (uint32_t)arg1);
  400bb8:	4629      	mov	r1, r5
  400bba:	4620      	mov	r0, r4
  400bbc:	4b14      	ldr	r3, [pc, #80]	; (400c10 <syscalls_entry_point+0xe4>)
  400bbe:	4798      	blx	r3
			break;
  400bc0:	bd38      	pop	{r3, r4, r5, pc}
		case SVCDisplayNumLines:
			*((uint32_t*)arg0) = hal_display_numlines();
  400bc2:	4b14      	ldr	r3, [pc, #80]	; (400c14 <syscalls_entry_point+0xe8>)
  400bc4:	4798      	blx	r3
  400bc6:	6020      	str	r0, [r4, #0]
			break;
  400bc8:	bd38      	pop	{r3, r4, r5, pc}
		//Millisecond Timer
		case SVCMtimerStartEv:
			hal_mtimer_start((uint32_t)arg0);
  400bca:	4620      	mov	r0, r4
  400bcc:	4b12      	ldr	r3, [pc, #72]	; (400c18 <syscalls_entry_point+0xec>)
  400bce:	4798      	blx	r3
			break;
  400bd0:	bd38      	pop	{r3, r4, r5, pc}
		//case SVCMtimerStartPoll:
		//	hal_mtimer_start_int((uint32_t)arg0, ((void)*(void))arg1);
		//	break;
		case SVCMtimerStop:
			hal_mtimer_stop();
  400bd2:	4b12      	ldr	r3, [pc, #72]	; (400c1c <syscalls_entry_point+0xf0>)
  400bd4:	4798      	blx	r3
			break;
  400bd6:	bd38      	pop	{r3, r4, r5, pc}
		case SVCMtimerRead:
			*((uint32_t*)arg0) = hal_mtimer_read();
  400bd8:	4b11      	ldr	r3, [pc, #68]	; (400c20 <syscalls_entry_point+0xf4>)
  400bda:	4798      	blx	r3
  400bdc:	6020      	str	r0, [r4, #0]
  400bde:	bd38      	pop	{r3, r4, r5, pc}
  400be0:	00400213 	.word	0x00400213
  400be4:	004004a5 	.word	0x004004a5
  400be8:	004004f3 	.word	0x004004f3
  400bec:	0040085d 	.word	0x0040085d
  400bf0:	00400599 	.word	0x00400599
  400bf4:	00400565 	.word	0x00400565
  400bf8:	00400991 	.word	0x00400991
  400bfc:	004009d1 	.word	0x004009d1
  400c00:	00400745 	.word	0x00400745
  400c04:	004007b9 	.word	0x004007b9
  400c08:	00400689 	.word	0x00400689
  400c0c:	004005e9 	.word	0x004005e9
  400c10:	00400719 	.word	0x00400719
  400c14:	00400741 	.word	0x00400741
  400c18:	004003cd 	.word	0x004003cd
  400c1c:	00400425 	.word	0x00400425
  400c20:	0040044d 	.word	0x0040044d

00400c24 <syscalls_init>:
void syscalls_init(void){
  400c24:	b508      	push	{r3, lr}
	hal_svc_start( syscalls_entry_point );
  400c26:	4802      	ldr	r0, [pc, #8]	; (400c30 <syscalls_init+0xc>)
  400c28:	4b02      	ldr	r3, [pc, #8]	; (400c34 <syscalls_init+0x10>)
  400c2a:	4798      	blx	r3
  400c2c:	bd08      	pop	{r3, pc}
  400c2e:	bf00      	nop
  400c30:	00400b2d 	.word	0x00400b2d
  400c34:	004001b5 	.word	0x004001b5

00400c38 <init_sequence>:
  400c38:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400c3c:	2101      	movs	r1, #1
  400c3e:	2000      	movs	r0, #0
  400c40:	4c1a      	ldr	r4, [pc, #104]	; (400cac <init_sequence+0x74>)
  400c42:	47a0      	blx	r4
  400c44:	2101      	movs	r1, #1
  400c46:	4608      	mov	r0, r1
  400c48:	47a0      	blx	r4
  400c4a:	2101      	movs	r1, #1
  400c4c:	2002      	movs	r0, #2
  400c4e:	47a0      	blx	r4
  400c50:	2101      	movs	r1, #1
  400c52:	2003      	movs	r0, #3
  400c54:	47a0      	blx	r4
  400c56:	2101      	movs	r1, #1
  400c58:	2004      	movs	r0, #4
  400c5a:	47a0      	blx	r4
  400c5c:	2700      	movs	r7, #0
  400c5e:	46b9      	mov	r9, r7
  400c60:	f8df 8058 	ldr.w	r8, [pc, #88]	; 400cbc <init_sequence+0x84>
  400c64:	4e12      	ldr	r6, [pc, #72]	; (400cb0 <init_sequence+0x78>)
  400c66:	4639      	mov	r1, r7
  400c68:	4648      	mov	r0, r9
  400c6a:	47c0      	blx	r8
  400c6c:	245f      	movs	r4, #95	; 0x5f
  400c6e:	257c      	movs	r5, #124	; 0x7c
  400c70:	4628      	mov	r0, r5
  400c72:	47b0      	blx	r6
  400c74:	3c01      	subs	r4, #1
  400c76:	d1fb      	bne.n	400c70 <init_sequence+0x38>
  400c78:	3701      	adds	r7, #1
  400c7a:	2f04      	cmp	r7, #4
  400c7c:	d1f3      	bne.n	400c66 <init_sequence+0x2e>
  400c7e:	20c8      	movs	r0, #200	; 0xc8
  400c80:	4b0c      	ldr	r3, [pc, #48]	; (400cb4 <init_sequence+0x7c>)
  400c82:	4798      	blx	r3
  400c84:	2100      	movs	r1, #0
  400c86:	4608      	mov	r0, r1
  400c88:	4c08      	ldr	r4, [pc, #32]	; (400cac <init_sequence+0x74>)
  400c8a:	47a0      	blx	r4
  400c8c:	2100      	movs	r1, #0
  400c8e:	2001      	movs	r0, #1
  400c90:	47a0      	blx	r4
  400c92:	2100      	movs	r1, #0
  400c94:	2002      	movs	r0, #2
  400c96:	47a0      	blx	r4
  400c98:	2100      	movs	r1, #0
  400c9a:	2003      	movs	r0, #3
  400c9c:	47a0      	blx	r4
  400c9e:	2100      	movs	r1, #0
  400ca0:	2004      	movs	r0, #4
  400ca2:	47a0      	blx	r4
  400ca4:	4b04      	ldr	r3, [pc, #16]	; (400cb8 <init_sequence+0x80>)
  400ca6:	4798      	blx	r3
  400ca8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400cac:	004004a5 	.word	0x004004a5
  400cb0:	004005e9 	.word	0x004005e9
  400cb4:	004001d1 	.word	0x004001d1
  400cb8:	00400689 	.word	0x00400689
  400cbc:	00400719 	.word	0x00400719

00400cc0 <io_init>:
  400cc0:	b530      	push	{r4, r5, lr}
  400cc2:	b087      	sub	sp, #28
  400cc4:	2000      	movs	r0, #0
  400cc6:	4c12      	ldr	r4, [pc, #72]	; (400d10 <io_init+0x50>)
  400cc8:	47a0      	blx	r4
  400cca:	2001      	movs	r0, #1
  400ccc:	47a0      	blx	r4
  400cce:	4b11      	ldr	r3, [pc, #68]	; (400d14 <io_init+0x54>)
  400cd0:	4798      	blx	r3
  400cd2:	4b11      	ldr	r3, [pc, #68]	; (400d18 <io_init+0x58>)
  400cd4:	4798      	blx	r3
  400cd6:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
  400cda:	2000      	movs	r0, #0
  400cdc:	4c0f      	ldr	r4, [pc, #60]	; (400d1c <io_init+0x5c>)
  400cde:	47a0      	blx	r4
  400ce0:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
  400ce4:	2001      	movs	r0, #1
  400ce6:	47a0      	blx	r4
  400ce8:	4b0d      	ldr	r3, [pc, #52]	; (400d20 <io_init+0x60>)
  400cea:	4798      	blx	r3
  400cec:	2001      	movs	r0, #1
  400cee:	4b0d      	ldr	r3, [pc, #52]	; (400d24 <io_init+0x64>)
  400cf0:	4798      	blx	r3
  400cf2:	466c      	mov	r4, sp
  400cf4:	4d0c      	ldr	r5, [pc, #48]	; (400d28 <io_init+0x68>)
  400cf6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  400cf8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
  400cfa:	e895 0003 	ldmia.w	r5, {r0, r1}
  400cfe:	e884 0003 	stmia.w	r4, {r0, r1}
  400d02:	4668      	mov	r0, sp
  400d04:	4b09      	ldr	r3, [pc, #36]	; (400d2c <io_init+0x6c>)
  400d06:	4798      	blx	r3
  400d08:	4b09      	ldr	r3, [pc, #36]	; (400d30 <io_init+0x70>)
  400d0a:	4798      	blx	r3
  400d0c:	b007      	add	sp, #28
  400d0e:	bd30      	pop	{r4, r5, pc}
  400d10:	00400745 	.word	0x00400745
  400d14:	00400539 	.word	0x00400539
  400d18:	004005dd 	.word	0x004005dd
  400d1c:	0040096d 	.word	0x0040096d
  400d20:	00400461 	.word	0x00400461
  400d24:	00400ab1 	.word	0x00400ab1
  400d28:	00403e4c 	.word	0x00403e4c
  400d2c:	00400565 	.word	0x00400565
  400d30:	00400c39 	.word	0x00400c39

00400d34 <system_init>:
  400d34:	b508      	push	{r3, lr}
  400d36:	4b07      	ldr	r3, [pc, #28]	; (400d54 <system_init+0x20>)
  400d38:	4798      	blx	r3
  400d3a:	4b07      	ldr	r3, [pc, #28]	; (400d58 <system_init+0x24>)
  400d3c:	4798      	blx	r3
  400d3e:	4b07      	ldr	r3, [pc, #28]	; (400d5c <system_init+0x28>)
  400d40:	4798      	blx	r3
  400d42:	4b07      	ldr	r3, [pc, #28]	; (400d60 <system_init+0x2c>)
  400d44:	4798      	blx	r3
  400d46:	4b07      	ldr	r3, [pc, #28]	; (400d64 <system_init+0x30>)
  400d48:	4798      	blx	r3
  400d4a:	4b07      	ldr	r3, [pc, #28]	; (400d68 <system_init+0x34>)
  400d4c:	4798      	blx	r3
  400d4e:	4b07      	ldr	r3, [pc, #28]	; (400d6c <system_init+0x38>)
  400d50:	4798      	blx	r3
  400d52:	bd08      	pop	{r3, pc}
  400d54:	004001a9 	.word	0x004001a9
  400d58:	004003ad 	.word	0x004003ad
  400d5c:	00400aaf 	.word	0x00400aaf
  400d60:	00400aad 	.word	0x00400aad
  400d64:	00400cc1 	.word	0x00400cc1
  400d68:	004001a5 	.word	0x004001a5
  400d6c:	00400c25 	.word	0x00400c25

00400d70 <ssd1306_write_command>:
{
  400d70:	b570      	push	{r4, r5, r6, lr}
  400d72:	b082      	sub	sp, #8
  400d74:	4606      	mov	r6, r0
	struct spi_device device = {.id = SSD1306_CS_PIN};
  400d76:	ac02      	add	r4, sp, #8
  400d78:	2302      	movs	r3, #2
  400d7a:	f844 3d04 	str.w	r3, [r4, #-4]!
	spi_select_device(SSD1306_SPI, &device);
  400d7e:	4d09      	ldr	r5, [pc, #36]	; (400da4 <ssd1306_write_command+0x34>)
  400d80:	4621      	mov	r1, r4
  400d82:	4628      	mov	r0, r5
  400d84:	4b08      	ldr	r3, [pc, #32]	; (400da8 <ssd1306_write_command+0x38>)
  400d86:	4798      	blx	r3
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  400d88:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  400d8c:	4b07      	ldr	r3, [pc, #28]	; (400dac <ssd1306_write_command+0x3c>)
  400d8e:	635a      	str	r2, [r3, #52]	; 0x34
  400d90:	60ee      	str	r6, [r5, #12]
	delay_us(SSD1306_LATENCY); // At least 3us
  400d92:	2056      	movs	r0, #86	; 0x56
  400d94:	4b06      	ldr	r3, [pc, #24]	; (400db0 <ssd1306_write_command+0x40>)
  400d96:	4798      	blx	r3
	spi_deselect_device(SSD1306_SPI, &device);
  400d98:	4621      	mov	r1, r4
  400d9a:	4628      	mov	r0, r5
  400d9c:	4b05      	ldr	r3, [pc, #20]	; (400db4 <ssd1306_write_command+0x44>)
  400d9e:	4798      	blx	r3
}
  400da0:	b002      	add	sp, #8
  400da2:	bd70      	pop	{r4, r5, r6, pc}
  400da4:	40008000 	.word	0x40008000
  400da8:	00401c71 	.word	0x00401c71
  400dac:	400e1200 	.word	0x400e1200
  400db0:	20000001 	.word	0x20000001
  400db4:	00401ca1 	.word	0x00401ca1

00400db8 <make_shape>:
// test: try making shape
Shape make_shape(gfx_shape shp, uint16_t x, uint16_t y) {	
	Shape chshape;
	chshape.x = x;
	chshape.y = y;
	switch (shp) {
  400db8:	2901      	cmp	r1, #1
  400dba:	d00c      	beq.n	400dd6 <make_shape+0x1e>
  400dbc:	b149      	cbz	r1, 400dd2 <make_shape+0x1a>
		break;
		case ship:
		chshape.body = '!';
		break;
		case bullet:
		chshape.body = '$';
  400dbe:	2902      	cmp	r1, #2
  400dc0:	bf0c      	ite	eq
  400dc2:	2124      	moveq	r1, #36	; 0x24
  400dc4:	2100      	movne	r1, #0
		break;
		default:
		break;
	}
	chshape.exists = true;
	return chshape;
  400dc6:	7001      	strb	r1, [r0, #0]
  400dc8:	8042      	strh	r2, [r0, #2]
  400dca:	8083      	strh	r3, [r0, #4]
  400dcc:	2301      	movs	r3, #1
  400dce:	7183      	strb	r3, [r0, #6]
}
  400dd0:	4770      	bx	lr
		chshape.body = '"';
  400dd2:	2122      	movs	r1, #34	; 0x22
  400dd4:	e7f7      	b.n	400dc6 <make_shape+0xe>
		chshape.body = '!';
  400dd6:	2121      	movs	r1, #33	; 0x21
		break;
  400dd8:	e7f5      	b.n	400dc6 <make_shape+0xe>
	...

00400ddc <draw_shape>:
void draw_shape(Shape* shp) {
	if (shp->exists)
  400ddc:	7983      	ldrb	r3, [r0, #6]
  400dde:	b903      	cbnz	r3, 400de2 <draw_shape+0x6>
  400de0:	4770      	bx	lr
void draw_shape(Shape* shp) {
  400de2:	b570      	push	{r4, r5, r6, lr}
  400de4:	4604      	mov	r4, r0
	address &= 0x0F;
  400de6:	7900      	ldrb	r0, [r0, #4]
	ssd1306_write_command(SSD1306_CMD_SET_PAGE_START_ADDRESS(address));
  400de8:	f000 0007 	and.w	r0, r0, #7
  400dec:	f040 00b0 	orr.w	r0, r0, #176	; 0xb0
  400df0:	4e08      	ldr	r6, [pc, #32]	; (400e14 <draw_shape+0x38>)
  400df2:	47b0      	blx	r6
	{
		ssd1306_set_page_address(shp->y);
		ssd1306_set_column_address(shp->x * 8);
  400df4:	78a5      	ldrb	r5, [r4, #2]
  400df6:	00ed      	lsls	r5, r5, #3
  400df8:	b2ed      	uxtb	r5, r5
	ssd1306_write_command(SSD1306_CMD_SET_HIGH_COL(address >> 4));
  400dfa:	f3c5 1002 	ubfx	r0, r5, #4, #3
  400dfe:	f040 0010 	orr.w	r0, r0, #16
  400e02:	47b0      	blx	r6
	ssd1306_write_command(SSD1306_CMD_SET_LOW_COL(address & 0x0F));
  400e04:	f005 0008 	and.w	r0, r5, #8
  400e08:	47b0      	blx	r6
		hal_display_putc(shp->body);
  400e0a:	7820      	ldrb	r0, [r4, #0]
  400e0c:	4b02      	ldr	r3, [pc, #8]	; (400e18 <draw_shape+0x3c>)
  400e0e:	4798      	blx	r3
  400e10:	bd70      	pop	{r4, r5, r6, pc}
  400e12:	bf00      	nop
  400e14:	00400d71 	.word	0x00400d71
  400e18:	004005e9 	.word	0x004005e9

00400e1c <move_shape_down>:
	}
}

void move_shape_down(Shape* shp) {
	uint16_t y = shp->y;
  400e1c:	8883      	ldrh	r3, [r0, #4]
	// add one to the y axis
	y++;
  400e1e:	3301      	adds	r3, #1
  400e20:	b29b      	uxth	r3, r3
	// check if it is still in bounds
	if (y <= 3) 
  400e22:	2b03      	cmp	r3, #3
		shp->y = y;
  400e24:	bf98      	it	ls
  400e26:	8083      	strhls	r3, [r0, #4]
  400e28:	4770      	bx	lr

00400e2a <move_shape_up>:
}

void move_shape_up(Shape* shp) {
	uint16_t y = shp->y;
  400e2a:	8883      	ldrh	r3, [r0, #4]
	// check if it is still in bounds
	if (y == 0)
  400e2c:	b10b      	cbz	r3, 400e32 <move_shape_up+0x8>
		return;
	// subtract one to the y axis
	y --;
  400e2e:	3b01      	subs	r3, #1
	shp->y = y;
  400e30:	8083      	strh	r3, [r0, #4]
  400e32:	4770      	bx	lr

00400e34 <move_shape_right>:
		shp->x = x;
}

void move_shape_right(Shape* shp)
{
	uint16_t x = shp->x;
  400e34:	8843      	ldrh	r3, [r0, #2]
	// add one to the x axis
	x ++;
  400e36:	3301      	adds	r3, #1
  400e38:	b29b      	uxth	r3, r3
	// check if it is still in bounds
	if (x <= 15) 
  400e3a:	2b0f      	cmp	r3, #15
		shp->x = x;
  400e3c:	bf98      	it	ls
  400e3e:	8043      	strhls	r3, [r0, #2]
  400e40:	4770      	bx	lr
	...

00400e44 <ssd1306_write_command>:
{
  400e44:	b570      	push	{r4, r5, r6, lr}
  400e46:	b082      	sub	sp, #8
  400e48:	4606      	mov	r6, r0
	struct spi_device device = {.id = SSD1306_CS_PIN};
  400e4a:	ac02      	add	r4, sp, #8
  400e4c:	2302      	movs	r3, #2
  400e4e:	f844 3d04 	str.w	r3, [r4, #-4]!
	spi_select_device(SSD1306_SPI, &device);
  400e52:	4d09      	ldr	r5, [pc, #36]	; (400e78 <ssd1306_write_command+0x34>)
  400e54:	4621      	mov	r1, r4
  400e56:	4628      	mov	r0, r5
  400e58:	4b08      	ldr	r3, [pc, #32]	; (400e7c <ssd1306_write_command+0x38>)
  400e5a:	4798      	blx	r3
  400e5c:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  400e60:	4b07      	ldr	r3, [pc, #28]	; (400e80 <ssd1306_write_command+0x3c>)
  400e62:	635a      	str	r2, [r3, #52]	; 0x34
  400e64:	60ee      	str	r6, [r5, #12]
	delay_us(SSD1306_LATENCY); // At least 3us
  400e66:	2056      	movs	r0, #86	; 0x56
  400e68:	4b06      	ldr	r3, [pc, #24]	; (400e84 <ssd1306_write_command+0x40>)
  400e6a:	4798      	blx	r3
	spi_deselect_device(SSD1306_SPI, &device);
  400e6c:	4621      	mov	r1, r4
  400e6e:	4628      	mov	r0, r5
  400e70:	4b05      	ldr	r3, [pc, #20]	; (400e88 <ssd1306_write_command+0x44>)
  400e72:	4798      	blx	r3
}
  400e74:	b002      	add	sp, #8
  400e76:	bd70      	pop	{r4, r5, r6, pc}
  400e78:	40008000 	.word	0x40008000
  400e7c:	00401c71 	.word	0x00401c71
  400e80:	400e1200 	.word	0x400e1200
  400e84:	20000001 	.word	0x20000001
  400e88:	00401ca1 	.word	0x00401ca1

00400e8c <ssd1306_init>:
 * Call this function to initialize the hardware interface and the OLED
 * controller. When initialization is done the display is turned on and ready
 * to receive data.
 */
void ssd1306_init(void)
{
  400e8c:	b5f0      	push	{r4, r5, r6, r7, lr}
  400e8e:	b085      	sub	sp, #20
  400e90:	4d25      	ldr	r5, [pc, #148]	; (400f28 <ssd1306_init+0x9c>)
  400e92:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
  400e96:	636e      	str	r6, [r5, #52]	; 0x34
	delay_us(SSD1306_LATENCY); // At least 3us
  400e98:	2056      	movs	r0, #86	; 0x56
  400e9a:	4c24      	ldr	r4, [pc, #144]	; (400f2c <ssd1306_init+0xa0>)
  400e9c:	47a0      	blx	r4
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400e9e:	632e      	str	r6, [r5, #48]	; 0x30
	delay_us(SSD1306_LATENCY); // At least 3us
  400ea0:	2056      	movs	r0, #86	; 0x56
  400ea2:	47a0      	blx	r4
	struct spi_device device = {
  400ea4:	2702      	movs	r7, #2
  400ea6:	ae04      	add	r6, sp, #16
  400ea8:	f846 7d04 	str.w	r7, [r6, #-4]!
	spi_master_init(SSD1306_SPI);
  400eac:	4c20      	ldr	r4, [pc, #128]	; (400f30 <ssd1306_init+0xa4>)
  400eae:	4620      	mov	r0, r4
  400eb0:	4b20      	ldr	r3, [pc, #128]	; (400f34 <ssd1306_init+0xa8>)
  400eb2:	4798      	blx	r3
	spi_master_setup_device(SSD1306_SPI, &device, spi_flags,
  400eb4:	2500      	movs	r5, #0
  400eb6:	9500      	str	r5, [sp, #0]
  400eb8:	4b1f      	ldr	r3, [pc, #124]	; (400f38 <ssd1306_init+0xac>)
  400eba:	462a      	mov	r2, r5
  400ebc:	4631      	mov	r1, r6
  400ebe:	4620      	mov	r0, r4
  400ec0:	4e1e      	ldr	r6, [pc, #120]	; (400f3c <ssd1306_init+0xb0>)
  400ec2:	47b0      	blx	r6
	p_spi->SPI_CR = SPI_CR_SPIEN;
  400ec4:	2301      	movs	r3, #1
  400ec6:	6023      	str	r3, [r4, #0]

	// Initialize the interface
	ssd1306_interface_init();

	// 1/32 Duty (0x0F~0x3F)
	ssd1306_write_command(SSD1306_CMD_SET_MULTIPLEX_RATIO);
  400ec8:	20a8      	movs	r0, #168	; 0xa8
  400eca:	4c1d      	ldr	r4, [pc, #116]	; (400f40 <ssd1306_init+0xb4>)
  400ecc:	47a0      	blx	r4
	ssd1306_write_command(0x1F);
  400ece:	201f      	movs	r0, #31
  400ed0:	47a0      	blx	r4

	// Shift Mapping RAM Counter (0x00~0x3F)
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_OFFSET);
  400ed2:	20d3      	movs	r0, #211	; 0xd3
  400ed4:	47a0      	blx	r4
	ssd1306_write_command(0x00);
  400ed6:	4628      	mov	r0, r5
  400ed8:	47a0      	blx	r4

	// Set Mapping RAM Display Start Line (0x00~0x3F)
	ssd1306_write_command(SSD1306_CMD_SET_START_LINE(0x00));
  400eda:	2040      	movs	r0, #64	; 0x40
  400edc:	47a0      	blx	r4

	// Set Column Address 0 Mapped to SEG0
	ssd1306_write_command(SSD1306_CMD_SET_SEGMENT_RE_MAP_COL127_SEG0);
  400ede:	20a1      	movs	r0, #161	; 0xa1
  400ee0:	47a0      	blx	r4

	// Set COM/Row Scan Scan from COM63 to 0
	ssd1306_write_command(SSD1306_CMD_SET_COM_OUTPUT_SCAN_DOWN);
  400ee2:	20c8      	movs	r0, #200	; 0xc8
  400ee4:	47a0      	blx	r4

	// Set COM Pins hardware configuration
	ssd1306_write_command(SSD1306_CMD_SET_COM_PINS);
  400ee6:	20da      	movs	r0, #218	; 0xda
  400ee8:	47a0      	blx	r4
	ssd1306_write_command(0x02);
  400eea:	4638      	mov	r0, r7
  400eec:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_CONTRAST_CONTROL_FOR_BANK0);
  400eee:	2081      	movs	r0, #129	; 0x81
  400ef0:	47a0      	blx	r4
	ssd1306_write_command(contrast);
  400ef2:	208f      	movs	r0, #143	; 0x8f
  400ef4:	47a0      	blx	r4

	ssd1306_set_contrast(0x8F);

	// Disable Entire display On
	ssd1306_write_command(SSD1306_CMD_ENTIRE_DISPLAY_AND_GDDRAM_ON);
  400ef6:	20a4      	movs	r0, #164	; 0xa4
  400ef8:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_NORMAL_DISPLAY);
  400efa:	20a6      	movs	r0, #166	; 0xa6
  400efc:	47a0      	blx	r4

	ssd1306_display_invert_disable();

	// Set Display Clock Divide Ratio / Oscillator Frequency (Default => 0x80)
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_CLOCK_DIVIDE_RATIO);
  400efe:	20d5      	movs	r0, #213	; 0xd5
  400f00:	47a0      	blx	r4
	ssd1306_write_command(0x80);
  400f02:	2080      	movs	r0, #128	; 0x80
  400f04:	47a0      	blx	r4

	// Enable charge pump regulator
	ssd1306_write_command(SSD1306_CMD_SET_CHARGE_PUMP_SETTING);
  400f06:	208d      	movs	r0, #141	; 0x8d
  400f08:	47a0      	blx	r4
	ssd1306_write_command(0x14);
  400f0a:	2014      	movs	r0, #20
  400f0c:	47a0      	blx	r4

	// Set VCOMH Deselect Level
	ssd1306_write_command(SSD1306_CMD_SET_VCOMH_DESELECT_LEVEL);
  400f0e:	20db      	movs	r0, #219	; 0xdb
  400f10:	47a0      	blx	r4
	ssd1306_write_command(0x40); // Default => 0x20 (0.77*VCC)
  400f12:	2040      	movs	r0, #64	; 0x40
  400f14:	47a0      	blx	r4

	// Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
	ssd1306_write_command(SSD1306_CMD_SET_PRE_CHARGE_PERIOD);
  400f16:	20d9      	movs	r0, #217	; 0xd9
  400f18:	47a0      	blx	r4
	ssd1306_write_command(0xF1);
  400f1a:	20f1      	movs	r0, #241	; 0xf1
  400f1c:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_ON);
  400f1e:	20af      	movs	r0, #175	; 0xaf
  400f20:	47a0      	blx	r4

	ssd1306_display_on();
}
  400f22:	b005      	add	sp, #20
  400f24:	bdf0      	pop	{r4, r5, r6, r7, pc}
  400f26:	bf00      	nop
  400f28:	400e1200 	.word	0x400e1200
  400f2c:	20000001 	.word	0x20000001
  400f30:	40008000 	.word	0x40008000
  400f34:	00401b9d 	.word	0x00401b9d
  400f38:	004c4b40 	.word	0x004c4b40
  400f3c:	00401bf1 	.word	0x00401bf1
  400f40:	00400e45 	.word	0x00400e45

00400f44 <at30tse_init>:

/**
 * \brief Initialize the TWI instance used for AT30TSE75x.
 */
void at30tse_init(void)
{
  400f44:	b500      	push	{lr}
  400f46:	b085      	sub	sp, #20
	twi_options_t opts = {
  400f48:	2300      	movs	r3, #0
  400f4a:	9303      	str	r3, [sp, #12]
  400f4c:	4b07      	ldr	r3, [pc, #28]	; (400f6c <at30tse_init+0x28>)
  400f4e:	9301      	str	r3, [sp, #4]
  400f50:	f242 7310 	movw	r3, #10000	; 0x2710
  400f54:	9302      	str	r3, [sp, #8]
  400f56:	2013      	movs	r0, #19
  400f58:	4b05      	ldr	r3, [pc, #20]	; (400f70 <at30tse_init+0x2c>)
  400f5a:	4798      	blx	r3
	flexcom_enable(BOARD_FLEXCOM_TWI);
	flexcom_set_opmode(BOARD_FLEXCOM_TWI, FLEXCOM_TWI);
#else
	sysclk_enable_peripheral_clock(BOARD_AT30TSE_TWI_ID);
#endif
	twi_master_init(BOARD_AT30TSE_TWI, &opts);
  400f5c:	a901      	add	r1, sp, #4
  400f5e:	4805      	ldr	r0, [pc, #20]	; (400f74 <at30tse_init+0x30>)
  400f60:	4b05      	ldr	r3, [pc, #20]	; (400f78 <at30tse_init+0x34>)
  400f62:	4798      	blx	r3

}
  400f64:	b005      	add	sp, #20
  400f66:	f85d fb04 	ldr.w	pc, [sp], #4
  400f6a:	bf00      	nop
  400f6c:	07270e00 	.word	0x07270e00
  400f70:	0040255d 	.word	0x0040255d
  400f74:	40018000 	.word	0x40018000
  400f78:	004029c1 	.word	0x004029c1

00400f7c <at30tse_read_register>:
 *
 * \return TWI_SUCCESS if success, otherwise false
 */
uint8_t at30tse_read_register(uint8_t reg, uint8_t reg_type,
		uint8_t reg_size, uint8_t* buffer)
{
  400f7c:	b510      	push	{r4, lr}
  400f7e:	b086      	sub	sp, #24
	twi_packet_t packet = {
  400f80:	2400      	movs	r4, #0
  400f82:	9401      	str	r4, [sp, #4]
  400f84:	9405      	str	r4, [sp, #20]
  400f86:	4301      	orrs	r1, r0
  400f88:	f88d 1004 	strb.w	r1, [sp, #4]
  400f8c:	2101      	movs	r1, #1
  400f8e:	9102      	str	r1, [sp, #8]
  400f90:	9303      	str	r3, [sp, #12]
  400f92:	9204      	str	r2, [sp, #16]
  400f94:	234f      	movs	r3, #79	; 0x4f
  400f96:	f88d 3014 	strb.w	r3, [sp, #20]
		.length = reg_size,
		/* Chip addr */
		.chip = AT30TSE_TEMPERATURE_TWI_ADDR
	};

	return twi_master_read(BOARD_AT30TSE_TWI, &packet);
  400f9a:	a901      	add	r1, sp, #4
  400f9c:	4802      	ldr	r0, [pc, #8]	; (400fa8 <at30tse_read_register+0x2c>)
  400f9e:	4b03      	ldr	r3, [pc, #12]	; (400fac <at30tse_read_register+0x30>)
  400fa0:	4798      	blx	r3
}
  400fa2:	b2c0      	uxtb	r0, r0
  400fa4:	b006      	add	sp, #24
  400fa6:	bd10      	pop	{r4, pc}
  400fa8:	40018000 	.word	0x40018000
  400fac:	00402a25 	.word	0x00402a25

00400fb0 <at30tse_read_temperature>:
 * stored
 *
 * \return TWI_SUCCESS if success, otherwise false
 */
uint8_t at30tse_read_temperature(double *temperature)
{
  400fb0:	b570      	push	{r4, r5, r6, lr}
  400fb2:	b082      	sub	sp, #8
  400fb4:	4604      	mov	r4, r0
	/* Placeholder buffer to put temperature data in. */
	uint8_t buffer[2];
	uint8_t error_code = 0;
	buffer[0] = 0;
  400fb6:	2000      	movs	r0, #0
  400fb8:	f88d 0004 	strb.w	r0, [sp, #4]
	buffer[1] = 0;
  400fbc:	f88d 0005 	strb.w	r0, [sp, #5]

	/* Read the 16-bit temperature register. */
	error_code = at30tse_read_register(AT30TSE_TEMPERATURE_REG,
  400fc0:	ab01      	add	r3, sp, #4
  400fc2:	2202      	movs	r2, #2
  400fc4:	4601      	mov	r1, r0
  400fc6:	4d27      	ldr	r5, [pc, #156]	; (401064 <at30tse_read_temperature+0xb4>)
  400fc8:	47a8      	blx	r5
			AT30TSE_NON_VOLATILE_REG, AT30TSE_TEMPERATURE_REG_SIZE, buffer);

	/* Only convert temperature data if read success. */
	if (error_code == TWI_SUCCESS) {
  400fca:	4605      	mov	r5, r0
  400fcc:	bb10      	cbnz	r0, 401014 <at30tse_read_temperature+0x64>
		uint16_t data = (buffer[0] << 8) | buffer[1];
  400fce:	f89d 2004 	ldrb.w	r2, [sp, #4]
  400fd2:	f89d 3005 	ldrb.w	r3, [sp, #5]
  400fd6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
  400fda:	b21b      	sxth	r3, r3
  400fdc:	b29a      	uxth	r2, r3
		int8_t sign = 1;

		/* Check if negative and clear sign bit. */
		if (data & (1 << 15)) {
  400fde:	2b00      	cmp	r3, #0
			sign *= -1;
			data &= ~(1 << 15);
  400fe0:	bfba      	itte	lt
  400fe2:	f3c2 020e 	ubfxlt	r2, r2, #0, #15
			sign *= -1;
  400fe6:	f04f 30ff 	movlt.w	r0, #4294967295
		int8_t sign = 1;
  400fea:	2001      	movge	r0, #1
		}

		/* Convert to temperature. */
		switch (resolution) {
  400fec:	4b1e      	ldr	r3, [pc, #120]	; (401068 <at30tse_read_temperature+0xb8>)
  400fee:	781b      	ldrb	r3, [r3, #0]
  400ff0:	b2db      	uxtb	r3, r3
  400ff2:	2b03      	cmp	r3, #3
  400ff4:	d80e      	bhi.n	401014 <at30tse_read_temperature+0x64>
  400ff6:	e8df f003 	tbb	[pc, r3]
  400ffa:	1002      	.short	0x1002
  400ffc:	291c      	.short	0x291c
		case AT30TSE_CONFIG_RES_9_bit:
			data = (data >> 7);
			*(temperature) = data * sign * 0.5;
  400ffe:	09d2      	lsrs	r2, r2, #7
  401000:	fb00 f002 	mul.w	r0, r0, r2
  401004:	4b19      	ldr	r3, [pc, #100]	; (40106c <at30tse_read_temperature+0xbc>)
  401006:	4798      	blx	r3
  401008:	2200      	movs	r2, #0
  40100a:	4b19      	ldr	r3, [pc, #100]	; (401070 <at30tse_read_temperature+0xc0>)
  40100c:	4e19      	ldr	r6, [pc, #100]	; (401074 <at30tse_read_temperature+0xc4>)
  40100e:	47b0      	blx	r6
  401010:	e9c4 0100 	strd	r0, r1, [r4]
			break;
		}
	}

	return error_code;
}
  401014:	4628      	mov	r0, r5
  401016:	b002      	add	sp, #8
  401018:	bd70      	pop	{r4, r5, r6, pc}
			*(temperature) = data * sign * 0.25;
  40101a:	0992      	lsrs	r2, r2, #6
  40101c:	fb00 f002 	mul.w	r0, r0, r2
  401020:	4b12      	ldr	r3, [pc, #72]	; (40106c <at30tse_read_temperature+0xbc>)
  401022:	4798      	blx	r3
  401024:	2200      	movs	r2, #0
  401026:	4b14      	ldr	r3, [pc, #80]	; (401078 <at30tse_read_temperature+0xc8>)
  401028:	4e12      	ldr	r6, [pc, #72]	; (401074 <at30tse_read_temperature+0xc4>)
  40102a:	47b0      	blx	r6
  40102c:	e9c4 0100 	strd	r0, r1, [r4]
			break;
  401030:	e7f0      	b.n	401014 <at30tse_read_temperature+0x64>
			*(temperature) = data * sign * 0.125;
  401032:	0952      	lsrs	r2, r2, #5
  401034:	fb00 f002 	mul.w	r0, r0, r2
  401038:	4b0c      	ldr	r3, [pc, #48]	; (40106c <at30tse_read_temperature+0xbc>)
  40103a:	4798      	blx	r3
  40103c:	2200      	movs	r2, #0
  40103e:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
  401042:	4e0c      	ldr	r6, [pc, #48]	; (401074 <at30tse_read_temperature+0xc4>)
  401044:	47b0      	blx	r6
  401046:	e9c4 0100 	strd	r0, r1, [r4]
			break;
  40104a:	e7e3      	b.n	401014 <at30tse_read_temperature+0x64>
			*(temperature) = data * sign * 0.0625;
  40104c:	0912      	lsrs	r2, r2, #4
  40104e:	fb00 f002 	mul.w	r0, r0, r2
  401052:	4b06      	ldr	r3, [pc, #24]	; (40106c <at30tse_read_temperature+0xbc>)
  401054:	4798      	blx	r3
  401056:	2200      	movs	r2, #0
  401058:	4b08      	ldr	r3, [pc, #32]	; (40107c <at30tse_read_temperature+0xcc>)
  40105a:	4e06      	ldr	r6, [pc, #24]	; (401074 <at30tse_read_temperature+0xc4>)
  40105c:	47b0      	blx	r6
  40105e:	e9c4 0100 	strd	r0, r1, [r4]
			break;
  401062:	e7d7      	b.n	401014 <at30tse_read_temperature+0x64>
  401064:	00400f7d 	.word	0x00400f7d
  401068:	20000ae5 	.word	0x20000ae5
  40106c:	00403401 	.word	0x00403401
  401070:	3fe00000 	.word	0x3fe00000
  401074:	004034cd 	.word	0x004034cd
  401078:	3fd00000 	.word	0x3fd00000
  40107c:	3fb00000 	.word	0x3fb00000

00401080 <sd_mmc_configure_slot>:
  401080:	b510      	push	{r4, lr}
  401082:	4b07      	ldr	r3, [pc, #28]	; (4010a0 <sd_mmc_configure_slot+0x20>)
  401084:	6819      	ldr	r1, [r3, #0]
  401086:	f891 3022 	ldrb.w	r3, [r1, #34]	; 0x22
  40108a:	3300      	adds	r3, #0
  40108c:	bf18      	it	ne
  40108e:	2301      	movne	r3, #1
  401090:	7c4a      	ldrb	r2, [r1, #17]
  401092:	6809      	ldr	r1, [r1, #0]
  401094:	4803      	ldr	r0, [pc, #12]	; (4010a4 <sd_mmc_configure_slot+0x24>)
  401096:	7800      	ldrb	r0, [r0, #0]
  401098:	4c03      	ldr	r4, [pc, #12]	; (4010a8 <sd_mmc_configure_slot+0x28>)
  40109a:	47a0      	blx	r4
  40109c:	bd10      	pop	{r4, pc}
  40109e:	bf00      	nop
  4010a0:	20000ae8 	.word	0x20000ae8
  4010a4:	20000aed 	.word	0x20000aed
  4010a8:	004017f9 	.word	0x004017f9

004010ac <sd_mmc_select_slot>:
  4010ac:	b108      	cbz	r0, 4010b2 <sd_mmc_select_slot+0x6>
  4010ae:	2004      	movs	r0, #4
  4010b0:	4770      	bx	lr
  4010b2:	4b33      	ldr	r3, [pc, #204]	; (401180 <sd_mmc_select_slot+0xd4>)
  4010b4:	689a      	ldr	r2, [r3, #8]
  4010b6:	0953      	lsrs	r3, r2, #5
  4010b8:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  4010bc:	f203 7307 	addw	r3, r3, #1799	; 0x707
  4010c0:	025b      	lsls	r3, r3, #9
  4010c2:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
  4010c4:	f002 021f 	and.w	r2, r2, #31
  4010c8:	2301      	movs	r3, #1
  4010ca:	fa03 f202 	lsl.w	r2, r3, r2
  4010ce:	420a      	tst	r2, r1
  4010d0:	d010      	beq.n	4010f4 <sd_mmc_select_slot+0x48>
  4010d2:	4b2b      	ldr	r3, [pc, #172]	; (401180 <sd_mmc_select_slot+0xd4>)
  4010d4:	7b9b      	ldrb	r3, [r3, #14]
  4010d6:	2b01      	cmp	r3, #1
  4010d8:	d004      	beq.n	4010e4 <sd_mmc_select_slot+0x38>
  4010da:	2204      	movs	r2, #4
  4010dc:	4b28      	ldr	r3, [pc, #160]	; (401180 <sd_mmc_select_slot+0xd4>)
  4010de:	739a      	strb	r2, [r3, #14]
  4010e0:	2002      	movs	r0, #2
  4010e2:	4770      	bx	lr
  4010e4:	4b27      	ldr	r3, [pc, #156]	; (401184 <sd_mmc_select_slot+0xd8>)
  4010e6:	781b      	ldrb	r3, [r3, #0]
  4010e8:	2b00      	cmp	r3, #0
  4010ea:	d0f6      	beq.n	4010da <sd_mmc_select_slot+0x2e>
  4010ec:	2200      	movs	r2, #0
  4010ee:	4b26      	ldr	r3, [pc, #152]	; (401188 <sd_mmc_select_slot+0xdc>)
  4010f0:	601a      	str	r2, [r3, #0]
  4010f2:	e7f2      	b.n	4010da <sd_mmc_select_slot+0x2e>
  4010f4:	b510      	push	{r4, lr}
  4010f6:	4b22      	ldr	r3, [pc, #136]	; (401180 <sd_mmc_select_slot+0xd4>)
  4010f8:	7b9b      	ldrb	r3, [r3, #14]
  4010fa:	2b04      	cmp	r3, #4
  4010fc:	d005      	beq.n	40110a <sd_mmc_select_slot+0x5e>
  4010fe:	2b01      	cmp	r3, #1
  401100:	d019      	beq.n	401136 <sd_mmc_select_slot+0x8a>
  401102:	2b03      	cmp	r3, #3
  401104:	d12c      	bne.n	401160 <sd_mmc_select_slot+0xb4>
  401106:	2003      	movs	r0, #3
  401108:	bd10      	pop	{r4, pc}
  40110a:	2201      	movs	r2, #1
  40110c:	4b1c      	ldr	r3, [pc, #112]	; (401180 <sd_mmc_select_slot+0xd4>)
  40110e:	739a      	strb	r2, [r3, #14]
  401110:	4b1d      	ldr	r3, [pc, #116]	; (401188 <sd_mmc_select_slot+0xdc>)
  401112:	681b      	ldr	r3, [r3, #0]
  401114:	b93b      	cbnz	r3, 401126 <sd_mmc_select_slot+0x7a>
  401116:	4b1b      	ldr	r3, [pc, #108]	; (401184 <sd_mmc_select_slot+0xd8>)
  401118:	701a      	strb	r2, [r3, #0]
  40111a:	4b1b      	ldr	r3, [pc, #108]	; (401188 <sd_mmc_select_slot+0xdc>)
  40111c:	491b      	ldr	r1, [pc, #108]	; (40118c <sd_mmc_select_slot+0xe0>)
  40111e:	6059      	str	r1, [r3, #4]
  401120:	601a      	str	r2, [r3, #0]
  401122:	2002      	movs	r0, #2
  401124:	bd10      	pop	{r4, pc}
  401126:	2200      	movs	r2, #0
  401128:	4b16      	ldr	r3, [pc, #88]	; (401184 <sd_mmc_select_slot+0xd8>)
  40112a:	701a      	strb	r2, [r3, #0]
  40112c:	4818      	ldr	r0, [pc, #96]	; (401190 <sd_mmc_select_slot+0xe4>)
  40112e:	4b19      	ldr	r3, [pc, #100]	; (401194 <sd_mmc_select_slot+0xe8>)
  401130:	4798      	blx	r3
  401132:	2002      	movs	r0, #2
  401134:	bd10      	pop	{r4, pc}
  401136:	4b13      	ldr	r3, [pc, #76]	; (401184 <sd_mmc_select_slot+0xd8>)
  401138:	781b      	ldrb	r3, [r3, #0]
  40113a:	b13b      	cbz	r3, 40114c <sd_mmc_select_slot+0xa0>
  40113c:	4b12      	ldr	r3, [pc, #72]	; (401188 <sd_mmc_select_slot+0xdc>)
  40113e:	681b      	ldr	r3, [r3, #0]
  401140:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  401144:	d01a      	beq.n	40117c <sd_mmc_select_slot+0xd0>
  401146:	2200      	movs	r2, #0
  401148:	4b0f      	ldr	r3, [pc, #60]	; (401188 <sd_mmc_select_slot+0xdc>)
  40114a:	601a      	str	r2, [r3, #0]
  40114c:	4b0c      	ldr	r3, [pc, #48]	; (401180 <sd_mmc_select_slot+0xd4>)
  40114e:	2202      	movs	r2, #2
  401150:	739a      	strb	r2, [r3, #14]
  401152:	4a11      	ldr	r2, [pc, #68]	; (401198 <sd_mmc_select_slot+0xec>)
  401154:	601a      	str	r2, [r3, #0]
  401156:	2201      	movs	r2, #1
  401158:	745a      	strb	r2, [r3, #17]
  40115a:	2200      	movs	r2, #0
  40115c:	f883 2022 	strb.w	r2, [r3, #34]	; 0x22
  401160:	2200      	movs	r2, #0
  401162:	4b0e      	ldr	r3, [pc, #56]	; (40119c <sd_mmc_select_slot+0xf0>)
  401164:	701a      	strb	r2, [r3, #0]
  401166:	4c06      	ldr	r4, [pc, #24]	; (401180 <sd_mmc_select_slot+0xd4>)
  401168:	4b0d      	ldr	r3, [pc, #52]	; (4011a0 <sd_mmc_select_slot+0xf4>)
  40116a:	601c      	str	r4, [r3, #0]
  40116c:	4b0d      	ldr	r3, [pc, #52]	; (4011a4 <sd_mmc_select_slot+0xf8>)
  40116e:	4798      	blx	r3
  401170:	7ba0      	ldrb	r0, [r4, #14]
  401172:	2802      	cmp	r0, #2
  401174:	bf14      	ite	ne
  401176:	2000      	movne	r0, #0
  401178:	2001      	moveq	r0, #1
  40117a:	bd10      	pop	{r4, pc}
  40117c:	2002      	movs	r0, #2
  40117e:	bd10      	pop	{r4, pc}
  401180:	20000428 	.word	0x20000428
  401184:	20000aec 	.word	0x20000aec
  401188:	e000e010 	.word	0xe000e010
  40118c:	00e4e1c0 	.word	0x00e4e1c0
  401190:	0082ca25 	.word	0x0082ca25
  401194:	20000001 	.word	0x20000001
  401198:	00061a80 	.word	0x00061a80
  40119c:	20000aed 	.word	0x20000aed
  4011a0:	20000ae8 	.word	0x20000ae8
  4011a4:	00401081 	.word	0x00401081

004011a8 <sd_mmc_cmd13>:
  4011a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4011ac:	4c09      	ldr	r4, [pc, #36]	; (4011d4 <sd_mmc_cmd13+0x2c>)
  4011ae:	2700      	movs	r7, #0
  4011b0:	4e09      	ldr	r6, [pc, #36]	; (4011d8 <sd_mmc_cmd13+0x30>)
  4011b2:	4d0a      	ldr	r5, [pc, #40]	; (4011dc <sd_mmc_cmd13+0x34>)
  4011b4:	4639      	mov	r1, r7
  4011b6:	f641 300d 	movw	r0, #6925	; 0x1b0d
  4011ba:	47b0      	blx	r6
  4011bc:	4680      	mov	r8, r0
  4011be:	b130      	cbz	r0, 4011ce <sd_mmc_cmd13+0x26>
  4011c0:	47a8      	blx	r5
  4011c2:	b2c0      	uxtb	r0, r0
  4011c4:	b118      	cbz	r0, 4011ce <sd_mmc_cmd13+0x26>
  4011c6:	3c01      	subs	r4, #1
  4011c8:	d1f4      	bne.n	4011b4 <sd_mmc_cmd13+0xc>
  4011ca:	f04f 0800 	mov.w	r8, #0
  4011ce:	4640      	mov	r0, r8
  4011d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4011d4:	00030d41 	.word	0x00030d41
  4011d8:	00401a21 	.word	0x00401a21
  4011dc:	00401a39 	.word	0x00401a39

004011e0 <sd_mmc_cmd9_spi>:
  4011e0:	b510      	push	{r4, lr}
  4011e2:	b082      	sub	sp, #8
  4011e4:	4b0d      	ldr	r3, [pc, #52]	; (40121c <sd_mmc_cmd9_spi+0x3c>)
  4011e6:	681b      	ldr	r3, [r3, #0]
  4011e8:	8999      	ldrh	r1, [r3, #12]
  4011ea:	2301      	movs	r3, #1
  4011ec:	9300      	str	r3, [sp, #0]
  4011ee:	2210      	movs	r2, #16
  4011f0:	4091      	lsls	r1, r2
  4011f2:	480b      	ldr	r0, [pc, #44]	; (401220 <sd_mmc_cmd9_spi+0x40>)
  4011f4:	4c0b      	ldr	r4, [pc, #44]	; (401224 <sd_mmc_cmd9_spi+0x44>)
  4011f6:	47a0      	blx	r4
  4011f8:	4603      	mov	r3, r0
  4011fa:	b910      	cbnz	r0, 401202 <sd_mmc_cmd9_spi+0x22>
  4011fc:	4618      	mov	r0, r3
  4011fe:	b002      	add	sp, #8
  401200:	bd10      	pop	{r4, pc}
  401202:	4b06      	ldr	r3, [pc, #24]	; (40121c <sd_mmc_cmd9_spi+0x3c>)
  401204:	6818      	ldr	r0, [r3, #0]
  401206:	2101      	movs	r1, #1
  401208:	3012      	adds	r0, #18
  40120a:	4b07      	ldr	r3, [pc, #28]	; (401228 <sd_mmc_cmd9_spi+0x48>)
  40120c:	4798      	blx	r3
  40120e:	4603      	mov	r3, r0
  401210:	2800      	cmp	r0, #0
  401212:	d0f3      	beq.n	4011fc <sd_mmc_cmd9_spi+0x1c>
  401214:	4b05      	ldr	r3, [pc, #20]	; (40122c <sd_mmc_cmd9_spi+0x4c>)
  401216:	4798      	blx	r3
  401218:	4603      	mov	r3, r0
  40121a:	e7ef      	b.n	4011fc <sd_mmc_cmd9_spi+0x1c>
  40121c:	20000ae8 	.word	0x20000ae8
  401220:	00081109 	.word	0x00081109
  401224:	00401899 	.word	0x00401899
  401228:	00401ab9 	.word	0x00401ab9
  40122c:	00401b35 	.word	0x00401b35

00401230 <sd_mmc_deselect_slot>:
  401230:	b508      	push	{r3, lr}
  401232:	4b04      	ldr	r3, [pc, #16]	; (401244 <sd_mmc_deselect_slot+0x14>)
  401234:	781b      	ldrb	r3, [r3, #0]
  401236:	b103      	cbz	r3, 40123a <sd_mmc_deselect_slot+0xa>
  401238:	bd08      	pop	{r3, pc}
  40123a:	2000      	movs	r0, #0
  40123c:	4b02      	ldr	r3, [pc, #8]	; (401248 <sd_mmc_deselect_slot+0x18>)
  40123e:	4798      	blx	r3
  401240:	e7fa      	b.n	401238 <sd_mmc_deselect_slot+0x8>
  401242:	bf00      	nop
  401244:	20000aed 	.word	0x20000aed
  401248:	00401839 	.word	0x00401839

0040124c <sd_mmc_init>:
  40124c:	b508      	push	{r3, lr}
  40124e:	200d      	movs	r0, #13
  401250:	4b05      	ldr	r3, [pc, #20]	; (401268 <sd_mmc_init+0x1c>)
  401252:	4798      	blx	r3
  401254:	2204      	movs	r2, #4
  401256:	4b05      	ldr	r3, [pc, #20]	; (40126c <sd_mmc_init+0x20>)
  401258:	739a      	strb	r2, [r3, #14]
  40125a:	22ff      	movs	r2, #255	; 0xff
  40125c:	4b04      	ldr	r3, [pc, #16]	; (401270 <sd_mmc_init+0x24>)
  40125e:	701a      	strb	r2, [r3, #0]
  401260:	4b04      	ldr	r3, [pc, #16]	; (401274 <sd_mmc_init+0x28>)
  401262:	4798      	blx	r3
  401264:	bd08      	pop	{r3, pc}
  401266:	bf00      	nop
  401268:	0040255d 	.word	0x0040255d
  40126c:	20000428 	.word	0x20000428
  401270:	20000aed 	.word	0x20000aed
  401274:	004017c9 	.word	0x004017c9

00401278 <sd_mmc_check>:
  401278:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  40127c:	b087      	sub	sp, #28
  40127e:	4b9a      	ldr	r3, [pc, #616]	; (4014e8 <sd_mmc_check+0x270>)
  401280:	4798      	blx	r3
  401282:	4604      	mov	r4, r0
  401284:	2801      	cmp	r0, #1
  401286:	d005      	beq.n	401294 <sd_mmc_check+0x1c>
  401288:	4b98      	ldr	r3, [pc, #608]	; (4014ec <sd_mmc_check+0x274>)
  40128a:	4798      	blx	r3
  40128c:	4620      	mov	r0, r4
  40128e:	b007      	add	sp, #28
  401290:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  401294:	4b96      	ldr	r3, [pc, #600]	; (4014f0 <sd_mmc_check+0x278>)
  401296:	681b      	ldr	r3, [r3, #0]
  401298:	2201      	movs	r2, #1
  40129a:	73da      	strb	r2, [r3, #15]
  40129c:	2500      	movs	r5, #0
  40129e:	741d      	strb	r5, [r3, #16]
  4012a0:	819d      	strh	r5, [r3, #12]
  4012a2:	4b94      	ldr	r3, [pc, #592]	; (4014f4 <sd_mmc_check+0x27c>)
  4012a4:	4798      	blx	r3
  4012a6:	4629      	mov	r1, r5
  4012a8:	f44f 5088 	mov.w	r0, #4352	; 0x1100
  4012ac:	4b92      	ldr	r3, [pc, #584]	; (4014f8 <sd_mmc_check+0x280>)
  4012ae:	4798      	blx	r3
  4012b0:	b930      	cbnz	r0, 4012c0 <sd_mmc_check+0x48>
  4012b2:	4b8f      	ldr	r3, [pc, #572]	; (4014f0 <sd_mmc_check+0x278>)
  4012b4:	681b      	ldr	r3, [r3, #0]
  4012b6:	2403      	movs	r4, #3
  4012b8:	739c      	strb	r4, [r3, #14]
  4012ba:	4b8c      	ldr	r3, [pc, #560]	; (4014ec <sd_mmc_check+0x274>)
  4012bc:	4798      	blx	r3
  4012be:	e7e5      	b.n	40128c <sd_mmc_check+0x14>
  4012c0:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
  4012c4:	f245 5008 	movw	r0, #21768	; 0x5508
  4012c8:	4b8b      	ldr	r3, [pc, #556]	; (4014f8 <sd_mmc_check+0x280>)
  4012ca:	4798      	blx	r3
  4012cc:	2800      	cmp	r0, #0
  4012ce:	d129      	bne.n	401324 <sd_mmc_check+0xac>
  4012d0:	2700      	movs	r7, #0
  4012d2:	4b87      	ldr	r3, [pc, #540]	; (4014f0 <sd_mmc_check+0x278>)
  4012d4:	681b      	ldr	r3, [r3, #0]
  4012d6:	7bdb      	ldrb	r3, [r3, #15]
  4012d8:	f013 0f01 	tst.w	r3, #1
  4012dc:	f040 81df 	bne.w	40169e <sd_mmc_check+0x426>
  4012e0:	4b83      	ldr	r3, [pc, #524]	; (4014f0 <sd_mmc_check+0x278>)
  4012e2:	681b      	ldr	r3, [r3, #0]
  4012e4:	7bdb      	ldrb	r3, [r3, #15]
  4012e6:	f003 0309 	and.w	r3, r3, #9
  4012ea:	2b01      	cmp	r3, #1
  4012ec:	d111      	bne.n	401312 <sd_mmc_check+0x9a>
  4012ee:	f44f 7100 	mov.w	r1, #512	; 0x200
  4012f2:	f241 1010 	movw	r0, #4368	; 0x1110
  4012f6:	4b80      	ldr	r3, [pc, #512]	; (4014f8 <sd_mmc_check+0x280>)
  4012f8:	4798      	blx	r3
  4012fa:	2800      	cmp	r0, #0
  4012fc:	d0d9      	beq.n	4012b2 <sd_mmc_check+0x3a>
  4012fe:	4b7c      	ldr	r3, [pc, #496]	; (4014f0 <sd_mmc_check+0x278>)
  401300:	681b      	ldr	r3, [r3, #0]
  401302:	7bdb      	ldrb	r3, [r3, #15]
  401304:	f013 0f01 	tst.w	r3, #1
  401308:	d003      	beq.n	401312 <sd_mmc_check+0x9a>
  40130a:	4b7c      	ldr	r3, [pc, #496]	; (4014fc <sd_mmc_check+0x284>)
  40130c:	4798      	blx	r3
  40130e:	2800      	cmp	r0, #0
  401310:	d0cf      	beq.n	4012b2 <sd_mmc_check+0x3a>
  401312:	4b7b      	ldr	r3, [pc, #492]	; (401500 <sd_mmc_check+0x288>)
  401314:	4798      	blx	r3
  401316:	4b76      	ldr	r3, [pc, #472]	; (4014f0 <sd_mmc_check+0x278>)
  401318:	681b      	ldr	r3, [r3, #0]
  40131a:	2200      	movs	r2, #0
  40131c:	739a      	strb	r2, [r3, #14]
  40131e:	4b73      	ldr	r3, [pc, #460]	; (4014ec <sd_mmc_check+0x274>)
  401320:	4798      	blx	r3
  401322:	e7b3      	b.n	40128c <sd_mmc_check+0x14>
  401324:	4b77      	ldr	r3, [pc, #476]	; (401504 <sd_mmc_check+0x28c>)
  401326:	4798      	blx	r3
  401328:	f1b0 3fff 	cmp.w	r0, #4294967295
  40132c:	f000 81b5 	beq.w	40169a <sd_mmc_check+0x422>
  401330:	f3c0 000b 	ubfx	r0, r0, #0, #12
  401334:	f5b0 7fd5 	cmp.w	r0, #426	; 0x1aa
  401338:	d1bb      	bne.n	4012b2 <sd_mmc_check+0x3a>
  40133a:	2701      	movs	r7, #1
  40133c:	e7c9      	b.n	4012d2 <sd_mmc_check+0x5a>
  40133e:	2100      	movs	r1, #0
  401340:	f240 503a 	movw	r0, #1338	; 0x53a
  401344:	4b6c      	ldr	r3, [pc, #432]	; (4014f8 <sd_mmc_check+0x280>)
  401346:	4798      	blx	r3
  401348:	b9f0      	cbnz	r0, 401388 <sd_mmc_check+0x110>
  40134a:	4b69      	ldr	r3, [pc, #420]	; (4014f0 <sd_mmc_check+0x278>)
  40134c:	681b      	ldr	r3, [r3, #0]
  40134e:	2202      	movs	r2, #2
  401350:	73da      	strb	r2, [r3, #15]
  401352:	2100      	movs	r1, #0
  401354:	f44f 5088 	mov.w	r0, #4352	; 0x1100
  401358:	4b67      	ldr	r3, [pc, #412]	; (4014f8 <sd_mmc_check+0x280>)
  40135a:	4798      	blx	r3
  40135c:	2800      	cmp	r0, #0
  40135e:	d0a8      	beq.n	4012b2 <sd_mmc_check+0x3a>
  401360:	f641 35ef 	movw	r5, #7151	; 0x1bef
  401364:	f04f 0800 	mov.w	r8, #0
  401368:	4e63      	ldr	r6, [pc, #396]	; (4014f8 <sd_mmc_check+0x280>)
  40136a:	4f66      	ldr	r7, [pc, #408]	; (401504 <sd_mmc_check+0x28c>)
  40136c:	4641      	mov	r1, r8
  40136e:	f241 1001 	movw	r0, #4353	; 0x1101
  401372:	47b0      	blx	r6
  401374:	2800      	cmp	r0, #0
  401376:	d09c      	beq.n	4012b2 <sd_mmc_check+0x3a>
  401378:	47b8      	blx	r7
  40137a:	f010 0f01 	tst.w	r0, #1
  40137e:	f000 8084 	beq.w	40148a <sd_mmc_check+0x212>
  401382:	3d01      	subs	r5, #1
  401384:	d1f2      	bne.n	40136c <sd_mmc_check+0xf4>
  401386:	e794      	b.n	4012b2 <sd_mmc_check+0x3a>
  401388:	4b5e      	ldr	r3, [pc, #376]	; (401504 <sd_mmc_check+0x28c>)
  40138a:	4798      	blx	r3
  40138c:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
  401390:	d005      	beq.n	40139e <sd_mmc_check+0x126>
  401392:	4b57      	ldr	r3, [pc, #348]	; (4014f0 <sd_mmc_check+0x278>)
  401394:	681a      	ldr	r2, [r3, #0]
  401396:	7bd3      	ldrb	r3, [r2, #15]
  401398:	f043 0308 	orr.w	r3, r3, #8
  40139c:	73d3      	strb	r3, [r2, #15]
  40139e:	2100      	movs	r1, #0
  4013a0:	f241 103b 	movw	r0, #4411	; 0x113b
  4013a4:	4b54      	ldr	r3, [pc, #336]	; (4014f8 <sd_mmc_check+0x280>)
  4013a6:	4798      	blx	r3
  4013a8:	2800      	cmp	r0, #0
  4013aa:	d082      	beq.n	4012b2 <sd_mmc_check+0x3a>
  4013ac:	4b50      	ldr	r3, [pc, #320]	; (4014f0 <sd_mmc_check+0x278>)
  4013ae:	681b      	ldr	r3, [r3, #0]
  4013b0:	7bdb      	ldrb	r3, [r3, #15]
  4013b2:	f013 0f01 	tst.w	r3, #1
  4013b6:	f000 8190 	beq.w	4016da <sd_mmc_check+0x462>
  4013ba:	4b53      	ldr	r3, [pc, #332]	; (401508 <sd_mmc_check+0x290>)
  4013bc:	4798      	blx	r3
  4013be:	2800      	cmp	r0, #0
  4013c0:	f43f af77 	beq.w	4012b2 <sd_mmc_check+0x3a>
  4013c4:	4b4a      	ldr	r3, [pc, #296]	; (4014f0 <sd_mmc_check+0x278>)
  4013c6:	681b      	ldr	r3, [r3, #0]
  4013c8:	7d5a      	ldrb	r2, [r3, #21]
  4013ca:	f002 0007 	and.w	r0, r2, #7
  4013ce:	494f      	ldr	r1, [pc, #316]	; (40150c <sd_mmc_check+0x294>)
  4013d0:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
  4013d4:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
  4013d8:	fb01 f100 	mul.w	r1, r1, r0
  4013dc:	f3c2 02c3 	ubfx	r2, r2, #3, #4
  4013e0:	484b      	ldr	r0, [pc, #300]	; (401510 <sd_mmc_check+0x298>)
  4013e2:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
  4013e6:	fb02 f201 	mul.w	r2, r2, r1
  4013ea:	601a      	str	r2, [r3, #0]
  4013ec:	7c9a      	ldrb	r2, [r3, #18]
  4013ee:	0992      	lsrs	r2, r2, #6
  4013f0:	f040 812a 	bne.w	401648 <sd_mmc_check+0x3d0>
  4013f4:	7e99      	ldrb	r1, [r3, #26]
  4013f6:	7e58      	ldrb	r0, [r3, #25]
  4013f8:	7e1a      	ldrb	r2, [r3, #24]
  4013fa:	0292      	lsls	r2, r2, #10
  4013fc:	ea42 0280 	orr.w	r2, r2, r0, lsl #2
  401400:	ea42 12a1 	orr.w	r2, r2, r1, asr #6
  401404:	7f18      	ldrb	r0, [r3, #28]
  401406:	7ed9      	ldrb	r1, [r3, #27]
  401408:	0049      	lsls	r1, r1, #1
  40140a:	ea41 11e0 	orr.w	r1, r1, r0, asr #7
  40140e:	f3c2 020b 	ubfx	r2, r2, #0, #12
  401412:	3201      	adds	r2, #1
  401414:	f001 0107 	and.w	r1, r1, #7
  401418:	3102      	adds	r1, #2
  40141a:	408a      	lsls	r2, r1
  40141c:	7dd9      	ldrb	r1, [r3, #23]
  40141e:	f001 010f 	and.w	r1, r1, #15
  401422:	408a      	lsls	r2, r1
  401424:	0a92      	lsrs	r2, r2, #10
  401426:	605a      	str	r2, [r3, #4]
  401428:	8999      	ldrh	r1, [r3, #12]
  40142a:	0409      	lsls	r1, r1, #16
  40142c:	f241 1037 	movw	r0, #4407	; 0x1137
  401430:	4b31      	ldr	r3, [pc, #196]	; (4014f8 <sd_mmc_check+0x280>)
  401432:	4798      	blx	r3
  401434:	2800      	cmp	r0, #0
  401436:	f43f af3c 	beq.w	4012b2 <sd_mmc_check+0x3a>
  40143a:	2301      	movs	r3, #1
  40143c:	9300      	str	r3, [sp, #0]
  40143e:	2208      	movs	r2, #8
  401440:	2100      	movs	r1, #0
  401442:	4834      	ldr	r0, [pc, #208]	; (401514 <sd_mmc_check+0x29c>)
  401444:	4d34      	ldr	r5, [pc, #208]	; (401518 <sd_mmc_check+0x2a0>)
  401446:	47a8      	blx	r5
  401448:	2800      	cmp	r0, #0
  40144a:	f43f af32 	beq.w	4012b2 <sd_mmc_check+0x3a>
  40144e:	2101      	movs	r1, #1
  401450:	a804      	add	r0, sp, #16
  401452:	4b32      	ldr	r3, [pc, #200]	; (40151c <sd_mmc_check+0x2a4>)
  401454:	4798      	blx	r3
  401456:	2800      	cmp	r0, #0
  401458:	f43f af2b 	beq.w	4012b2 <sd_mmc_check+0x3a>
  40145c:	4b30      	ldr	r3, [pc, #192]	; (401520 <sd_mmc_check+0x2a8>)
  40145e:	4798      	blx	r3
  401460:	2800      	cmp	r0, #0
  401462:	f43f af26 	beq.w	4012b2 <sd_mmc_check+0x3a>
  401466:	f89d 3010 	ldrb.w	r3, [sp, #16]
  40146a:	f003 030f 	and.w	r3, r3, #15
  40146e:	2b01      	cmp	r3, #1
  401470:	f000 8104 	beq.w	40167c <sd_mmc_check+0x404>
  401474:	2b00      	cmp	r3, #0
  401476:	f000 80f4 	beq.w	401662 <sd_mmc_check+0x3ea>
  40147a:	2b02      	cmp	r3, #2
  40147c:	f000 8103 	beq.w	401686 <sd_mmc_check+0x40e>
  401480:	4b1b      	ldr	r3, [pc, #108]	; (4014f0 <sd_mmc_check+0x278>)
  401482:	681b      	ldr	r3, [r3, #0]
  401484:	2210      	movs	r2, #16
  401486:	741a      	strb	r2, [r3, #16]
  401488:	e0ef      	b.n	40166a <sd_mmc_check+0x3f2>
  40148a:	2100      	movs	r1, #0
  40148c:	f240 503a 	movw	r0, #1338	; 0x53a
  401490:	4b19      	ldr	r3, [pc, #100]	; (4014f8 <sd_mmc_check+0x280>)
  401492:	4798      	blx	r3
  401494:	2800      	cmp	r0, #0
  401496:	f43f af0c 	beq.w	4012b2 <sd_mmc_check+0x3a>
  40149a:	4b1a      	ldr	r3, [pc, #104]	; (401504 <sd_mmc_check+0x28c>)
  40149c:	4798      	blx	r3
  40149e:	f000 40c0 	and.w	r0, r0, #1610612736	; 0x60000000
  4014a2:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
  4014a6:	d105      	bne.n	4014b4 <sd_mmc_check+0x23c>
  4014a8:	4b11      	ldr	r3, [pc, #68]	; (4014f0 <sd_mmc_check+0x278>)
  4014aa:	681a      	ldr	r2, [r3, #0]
  4014ac:	7bd3      	ldrb	r3, [r2, #15]
  4014ae:	f043 0308 	orr.w	r3, r3, #8
  4014b2:	73d3      	strb	r3, [r2, #15]
  4014b4:	2100      	movs	r1, #0
  4014b6:	f241 103b 	movw	r0, #4411	; 0x113b
  4014ba:	4b0f      	ldr	r3, [pc, #60]	; (4014f8 <sd_mmc_check+0x280>)
  4014bc:	4798      	blx	r3
  4014be:	2800      	cmp	r0, #0
  4014c0:	f43f aef7 	beq.w	4012b2 <sd_mmc_check+0x3a>
  4014c4:	4b10      	ldr	r3, [pc, #64]	; (401508 <sd_mmc_check+0x290>)
  4014c6:	4798      	blx	r3
  4014c8:	2800      	cmp	r0, #0
  4014ca:	f43f aef2 	beq.w	4012b2 <sd_mmc_check+0x3a>
  4014ce:	4b08      	ldr	r3, [pc, #32]	; (4014f0 <sd_mmc_check+0x278>)
  4014d0:	681a      	ldr	r2, [r3, #0]
  4014d2:	7c93      	ldrb	r3, [r2, #18]
  4014d4:	f3c3 0383 	ubfx	r3, r3, #2, #4
  4014d8:	3b01      	subs	r3, #1
  4014da:	2b03      	cmp	r3, #3
  4014dc:	d822      	bhi.n	401524 <sd_mmc_check+0x2ac>
  4014de:	e8df f003 	tbb	[pc, r3]
  4014e2:	908d      	.short	0x908d
  4014e4:	9693      	.short	0x9693
  4014e6:	bf00      	nop
  4014e8:	004010ad 	.word	0x004010ad
  4014ec:	00401231 	.word	0x00401231
  4014f0:	20000ae8 	.word	0x20000ae8
  4014f4:	00401861 	.word	0x00401861
  4014f8:	00401a21 	.word	0x00401a21
  4014fc:	004011a9 	.word	0x004011a9
  401500:	00401081 	.word	0x00401081
  401504:	00401a39 	.word	0x00401a39
  401508:	004011e1 	.word	0x004011e1
  40150c:	00403ea4 	.word	0x00403ea4
  401510:	00403ec0 	.word	0x00403ec0
  401514:	00081133 	.word	0x00081133
  401518:	00401899 	.word	0x00401899
  40151c:	00401ab9 	.word	0x00401ab9
  401520:	00401b35 	.word	0x00401b35
  401524:	2312      	movs	r3, #18
  401526:	7413      	strb	r3, [r2, #16]
  401528:	7d53      	ldrb	r3, [r2, #21]
  40152a:	f3c3 00c3 	ubfx	r0, r3, #3, #4
  40152e:	f003 0307 	and.w	r3, r3, #7
  401532:	496d      	ldr	r1, [pc, #436]	; (4016e8 <sd_mmc_check+0x470>)
  401534:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
  401538:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
  40153c:	fb03 f301 	mul.w	r3, r3, r1
  401540:	496a      	ldr	r1, [pc, #424]	; (4016ec <sd_mmc_check+0x474>)
  401542:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
  401546:	fb03 f301 	mul.w	r3, r3, r1
  40154a:	6013      	str	r3, [r2, #0]
  40154c:	7e91      	ldrb	r1, [r2, #26]
  40154e:	7e50      	ldrb	r0, [r2, #25]
  401550:	7e13      	ldrb	r3, [r2, #24]
  401552:	029b      	lsls	r3, r3, #10
  401554:	ea43 0380 	orr.w	r3, r3, r0, lsl #2
  401558:	ea43 13a1 	orr.w	r3, r3, r1, asr #6
  40155c:	f3c3 030b 	ubfx	r3, r3, #0, #12
  401560:	f640 71ff 	movw	r1, #4095	; 0xfff
  401564:	428b      	cmp	r3, r1
  401566:	d00f      	beq.n	401588 <sd_mmc_check+0x310>
  401568:	7f10      	ldrb	r0, [r2, #28]
  40156a:	7ed1      	ldrb	r1, [r2, #27]
  40156c:	0049      	lsls	r1, r1, #1
  40156e:	ea41 11e0 	orr.w	r1, r1, r0, asr #7
  401572:	3301      	adds	r3, #1
  401574:	f001 0107 	and.w	r1, r1, #7
  401578:	3102      	adds	r1, #2
  40157a:	408b      	lsls	r3, r1
  40157c:	7dd1      	ldrb	r1, [r2, #23]
  40157e:	f001 010f 	and.w	r1, r1, #15
  401582:	408b      	lsls	r3, r1
  401584:	0a9b      	lsrs	r3, r3, #10
  401586:	6053      	str	r3, [r2, #4]
  401588:	7c13      	ldrb	r3, [r2, #16]
  40158a:	2b3f      	cmp	r3, #63	; 0x3f
  40158c:	d94b      	bls.n	401626 <sd_mmc_check+0x3ae>
  40158e:	2100      	movs	r1, #0
  401590:	9100      	str	r1, [sp, #0]
  401592:	2301      	movs	r3, #1
  401594:	f44f 7200 	mov.w	r2, #512	; 0x200
  401598:	4855      	ldr	r0, [pc, #340]	; (4016f0 <sd_mmc_check+0x478>)
  40159a:	4d56      	ldr	r5, [pc, #344]	; (4016f4 <sd_mmc_check+0x47c>)
  40159c:	47a8      	blx	r5
  40159e:	2800      	cmp	r0, #0
  4015a0:	f43f ae87 	beq.w	4012b2 <sd_mmc_check+0x3a>
  4015a4:	2500      	movs	r5, #0
  4015a6:	4e54      	ldr	r6, [pc, #336]	; (4016f8 <sd_mmc_check+0x480>)
  4015a8:	a803      	add	r0, sp, #12
  4015aa:	47b0      	blx	r6
  4015ac:	2800      	cmp	r0, #0
  4015ae:	f43f ae80 	beq.w	4012b2 <sd_mmc_check+0x3a>
  4015b2:	3501      	adds	r5, #1
  4015b4:	b2ad      	uxth	r5, r5
  4015b6:	2d32      	cmp	r5, #50	; 0x32
  4015b8:	d1f6      	bne.n	4015a8 <sd_mmc_check+0x330>
  4015ba:	4b50      	ldr	r3, [pc, #320]	; (4016fc <sd_mmc_check+0x484>)
  4015bc:	681b      	ldr	r3, [r3, #0]
  4015be:	7e9a      	ldrb	r2, [r3, #26]
  4015c0:	7e59      	ldrb	r1, [r3, #25]
  4015c2:	7e1b      	ldrb	r3, [r3, #24]
  4015c4:	029b      	lsls	r3, r3, #10
  4015c6:	ea43 0381 	orr.w	r3, r3, r1, lsl #2
  4015ca:	ea43 13a2 	orr.w	r3, r3, r2, asr #6
  4015ce:	f3c3 030b 	ubfx	r3, r3, #0, #12
  4015d2:	f640 72ff 	movw	r2, #4095	; 0xfff
  4015d6:	4293      	cmp	r3, r2
  4015d8:	d10e      	bne.n	4015f8 <sd_mmc_check+0x380>
  4015da:	4e47      	ldr	r6, [pc, #284]	; (4016f8 <sd_mmc_check+0x480>)
  4015dc:	a804      	add	r0, sp, #16
  4015de:	47b0      	blx	r6
  4015e0:	2800      	cmp	r0, #0
  4015e2:	f43f ae66 	beq.w	4012b2 <sd_mmc_check+0x3a>
  4015e6:	3501      	adds	r5, #1
  4015e8:	b2ad      	uxth	r5, r5
  4015ea:	2d35      	cmp	r5, #53	; 0x35
  4015ec:	d9f6      	bls.n	4015dc <sd_mmc_check+0x364>
  4015ee:	4b43      	ldr	r3, [pc, #268]	; (4016fc <sd_mmc_check+0x484>)
  4015f0:	681a      	ldr	r2, [r3, #0]
  4015f2:	9b04      	ldr	r3, [sp, #16]
  4015f4:	085b      	lsrs	r3, r3, #1
  4015f6:	6053      	str	r3, [r2, #4]
  4015f8:	4e3f      	ldr	r6, [pc, #252]	; (4016f8 <sd_mmc_check+0x480>)
  4015fa:	e012      	b.n	401622 <sd_mmc_check+0x3aa>
  4015fc:	2314      	movs	r3, #20
  4015fe:	7413      	strb	r3, [r2, #16]
  401600:	e792      	b.n	401528 <sd_mmc_check+0x2b0>
  401602:	2322      	movs	r3, #34	; 0x22
  401604:	7413      	strb	r3, [r2, #16]
  401606:	e78f      	b.n	401528 <sd_mmc_check+0x2b0>
  401608:	2330      	movs	r3, #48	; 0x30
  40160a:	7413      	strb	r3, [r2, #16]
  40160c:	e78c      	b.n	401528 <sd_mmc_check+0x2b0>
  40160e:	2340      	movs	r3, #64	; 0x40
  401610:	7413      	strb	r3, [r2, #16]
  401612:	e789      	b.n	401528 <sd_mmc_check+0x2b0>
  401614:	a804      	add	r0, sp, #16
  401616:	47b0      	blx	r6
  401618:	2800      	cmp	r0, #0
  40161a:	f43f ae4a 	beq.w	4012b2 <sd_mmc_check+0x3a>
  40161e:	3501      	adds	r5, #1
  401620:	b2ad      	uxth	r5, r5
  401622:	2d7f      	cmp	r5, #127	; 0x7f
  401624:	d9f6      	bls.n	401614 <sd_mmc_check+0x39c>
  401626:	f44f 7100 	mov.w	r1, #512	; 0x200
  40162a:	f241 1010 	movw	r0, #4368	; 0x1110
  40162e:	4b34      	ldr	r3, [pc, #208]	; (401700 <sd_mmc_check+0x488>)
  401630:	4798      	blx	r3
  401632:	2800      	cmp	r0, #0
  401634:	f43f ae3d 	beq.w	4012b2 <sd_mmc_check+0x3a>
  401638:	4b32      	ldr	r3, [pc, #200]	; (401704 <sd_mmc_check+0x48c>)
  40163a:	4798      	blx	r3
  40163c:	2800      	cmp	r0, #0
  40163e:	f43f ae38 	beq.w	4012b2 <sd_mmc_check+0x3a>
  401642:	4b31      	ldr	r3, [pc, #196]	; (401708 <sd_mmc_check+0x490>)
  401644:	4798      	blx	r3
  401646:	e666      	b.n	401316 <sd_mmc_check+0x9e>
  401648:	7ed9      	ldrb	r1, [r3, #27]
  40164a:	7e98      	ldrb	r0, [r3, #26]
  40164c:	7e5a      	ldrb	r2, [r3, #25]
  40164e:	0412      	lsls	r2, r2, #16
  401650:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
  401654:	430a      	orrs	r2, r1
  401656:	f3c2 0215 	ubfx	r2, r2, #0, #22
  40165a:	3201      	adds	r2, #1
  40165c:	0252      	lsls	r2, r2, #9
  40165e:	605a      	str	r2, [r3, #4]
  401660:	e6e2      	b.n	401428 <sd_mmc_check+0x1b0>
  401662:	4b26      	ldr	r3, [pc, #152]	; (4016fc <sd_mmc_check+0x484>)
  401664:	681b      	ldr	r3, [r3, #0]
  401666:	2210      	movs	r2, #16
  401668:	741a      	strb	r2, [r3, #16]
  40166a:	4b24      	ldr	r3, [pc, #144]	; (4016fc <sd_mmc_check+0x484>)
  40166c:	681b      	ldr	r3, [r3, #0]
  40166e:	7bdb      	ldrb	r3, [r3, #15]
  401670:	f003 0309 	and.w	r3, r3, #9
  401674:	2b01      	cmp	r3, #1
  401676:	f47f ae42 	bne.w	4012fe <sd_mmc_check+0x86>
  40167a:	e638      	b.n	4012ee <sd_mmc_check+0x76>
  40167c:	4b1f      	ldr	r3, [pc, #124]	; (4016fc <sd_mmc_check+0x484>)
  40167e:	681b      	ldr	r3, [r3, #0]
  401680:	221a      	movs	r2, #26
  401682:	741a      	strb	r2, [r3, #16]
  401684:	e7f1      	b.n	40166a <sd_mmc_check+0x3f2>
  401686:	f89d 3012 	ldrb.w	r3, [sp, #18]
  40168a:	09db      	lsrs	r3, r3, #7
  40168c:	4b1b      	ldr	r3, [pc, #108]	; (4016fc <sd_mmc_check+0x484>)
  40168e:	681b      	ldr	r3, [r3, #0]
  401690:	bf14      	ite	ne
  401692:	2230      	movne	r2, #48	; 0x30
  401694:	2220      	moveq	r2, #32
  401696:	741a      	strb	r2, [r3, #16]
  401698:	e7e7      	b.n	40166a <sd_mmc_check+0x3f2>
  40169a:	2700      	movs	r7, #0
  40169c:	e619      	b.n	4012d2 <sd_mmc_check+0x5a>
  40169e:	07bf      	lsls	r7, r7, #30
  4016a0:	f641 35ef 	movw	r5, #7151	; 0x1bef
  4016a4:	f04f 0800 	mov.w	r8, #0
  4016a8:	4e15      	ldr	r6, [pc, #84]	; (401700 <sd_mmc_check+0x488>)
  4016aa:	f8df 9060 	ldr.w	r9, [pc, #96]	; 40170c <sd_mmc_check+0x494>
  4016ae:	4641      	mov	r1, r8
  4016b0:	f241 1037 	movw	r0, #4407	; 0x1137
  4016b4:	47b0      	blx	r6
  4016b6:	2800      	cmp	r0, #0
  4016b8:	f43f ae47 	beq.w	40134a <sd_mmc_check+0xd2>
  4016bc:	4639      	mov	r1, r7
  4016be:	f241 1029 	movw	r0, #4393	; 0x1129
  4016c2:	47b0      	blx	r6
  4016c4:	2800      	cmp	r0, #0
  4016c6:	f43f ae40 	beq.w	40134a <sd_mmc_check+0xd2>
  4016ca:	47c8      	blx	r9
  4016cc:	f010 0f01 	tst.w	r0, #1
  4016d0:	f43f ae35 	beq.w	40133e <sd_mmc_check+0xc6>
  4016d4:	3d01      	subs	r5, #1
  4016d6:	d1ea      	bne.n	4016ae <sd_mmc_check+0x436>
  4016d8:	e637      	b.n	40134a <sd_mmc_check+0xd2>
  4016da:	f003 0309 	and.w	r3, r3, #9
  4016de:	2b01      	cmp	r3, #1
  4016e0:	f47f ae17 	bne.w	401312 <sd_mmc_check+0x9a>
  4016e4:	e603      	b.n	4012ee <sd_mmc_check+0x76>
  4016e6:	bf00      	nop
  4016e8:	00403ea4 	.word	0x00403ea4
  4016ec:	00403e64 	.word	0x00403e64
  4016f0:	00081108 	.word	0x00081108
  4016f4:	00401899 	.word	0x00401899
  4016f8:	00401a45 	.word	0x00401a45
  4016fc:	20000ae8 	.word	0x20000ae8
  401700:	00401a21 	.word	0x00401a21
  401704:	004011a9 	.word	0x004011a9
  401708:	00401081 	.word	0x00401081
  40170c:	00401a39 	.word	0x00401a39

00401710 <sd_mmc_spi_wait_busy>:
  401710:	b570      	push	{r4, r5, r6, lr}
  401712:	b082      	sub	sp, #8
  401714:	ac02      	add	r4, sp, #8
  401716:	23ff      	movs	r3, #255	; 0xff
  401718:	f804 3d01 	strb.w	r3, [r4, #-1]!
  40171c:	4e0f      	ldr	r6, [pc, #60]	; (40175c <sd_mmc_spi_wait_busy+0x4c>)
  40171e:	2201      	movs	r2, #1
  401720:	4621      	mov	r1, r4
  401722:	4630      	mov	r0, r6
  401724:	4d0e      	ldr	r5, [pc, #56]	; (401760 <sd_mmc_spi_wait_busy+0x50>)
  401726:	47a8      	blx	r5
  401728:	2201      	movs	r2, #1
  40172a:	4621      	mov	r1, r4
  40172c:	4630      	mov	r0, r6
  40172e:	47a8      	blx	r5
  401730:	2201      	movs	r2, #1
  401732:	4621      	mov	r1, r4
  401734:	4630      	mov	r0, r6
  401736:	47a8      	blx	r5
  401738:	4c0a      	ldr	r4, [pc, #40]	; (401764 <sd_mmc_spi_wait_busy+0x54>)
  40173a:	f89d 3007 	ldrb.w	r3, [sp, #7]
  40173e:	2bff      	cmp	r3, #255	; 0xff
  401740:	d008      	beq.n	401754 <sd_mmc_spi_wait_busy+0x44>
  401742:	2201      	movs	r2, #1
  401744:	f10d 0107 	add.w	r1, sp, #7
  401748:	4630      	mov	r0, r6
  40174a:	47a8      	blx	r5
  40174c:	3c01      	subs	r4, #1
  40174e:	d1f4      	bne.n	40173a <sd_mmc_spi_wait_busy+0x2a>
  401750:	2000      	movs	r0, #0
  401752:	e000      	b.n	401756 <sd_mmc_spi_wait_busy+0x46>
  401754:	2001      	movs	r0, #1
  401756:	b002      	add	sp, #8
  401758:	bd70      	pop	{r4, r5, r6, pc}
  40175a:	bf00      	nop
  40175c:	40008000 	.word	0x40008000
  401760:	00401cf5 	.word	0x00401cf5
  401764:	00030d40 	.word	0x00030d40

00401768 <sd_mmc_spi_start_read_block>:
  401768:	b5f0      	push	{r4, r5, r6, r7, lr}
  40176a:	b083      	sub	sp, #12
  40176c:	ad02      	add	r5, sp, #8
  40176e:	2300      	movs	r3, #0
  401770:	f805 3d01 	strb.w	r3, [r5, #-1]!
  401774:	4c10      	ldr	r4, [pc, #64]	; (4017b8 <sd_mmc_spi_start_read_block+0x50>)
  401776:	4f11      	ldr	r7, [pc, #68]	; (4017bc <sd_mmc_spi_start_read_block+0x54>)
  401778:	4e11      	ldr	r6, [pc, #68]	; (4017c0 <sd_mmc_spi_start_read_block+0x58>)
  40177a:	2201      	movs	r2, #1
  40177c:	4629      	mov	r1, r5
  40177e:	4638      	mov	r0, r7
  401780:	47b0      	blx	r6
  401782:	f89d 3007 	ldrb.w	r3, [sp, #7]
  401786:	f013 0ff0 	tst.w	r3, #240	; 0xf0
  40178a:	d008      	beq.n	40179e <sd_mmc_spi_start_read_block+0x36>
  40178c:	2bfe      	cmp	r3, #254	; 0xfe
  40178e:	d010      	beq.n	4017b2 <sd_mmc_spi_start_read_block+0x4a>
  401790:	3c01      	subs	r4, #1
  401792:	d1f2      	bne.n	40177a <sd_mmc_spi_start_read_block+0x12>
  401794:	2204      	movs	r2, #4
  401796:	4b0b      	ldr	r3, [pc, #44]	; (4017c4 <sd_mmc_spi_start_read_block+0x5c>)
  401798:	701a      	strb	r2, [r3, #0]
  40179a:	2000      	movs	r0, #0
  40179c:	e007      	b.n	4017ae <sd_mmc_spi_start_read_block+0x46>
  40179e:	f013 0f07 	tst.w	r3, #7
  4017a2:	bf14      	ite	ne
  4017a4:	2207      	movne	r2, #7
  4017a6:	220b      	moveq	r2, #11
  4017a8:	4b06      	ldr	r3, [pc, #24]	; (4017c4 <sd_mmc_spi_start_read_block+0x5c>)
  4017aa:	701a      	strb	r2, [r3, #0]
  4017ac:	2000      	movs	r0, #0
  4017ae:	b003      	add	sp, #12
  4017b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4017b2:	2001      	movs	r0, #1
  4017b4:	e7fb      	b.n	4017ae <sd_mmc_spi_start_read_block+0x46>
  4017b6:	bf00      	nop
  4017b8:	0007a120 	.word	0x0007a120
  4017bc:	40008000 	.word	0x40008000
  4017c0:	00401cf5 	.word	0x00401cf5
  4017c4:	20000af0 	.word	0x20000af0

004017c8 <sd_mmc_spi_init>:
  4017c8:	2200      	movs	r2, #0
  4017ca:	4b08      	ldr	r3, [pc, #32]	; (4017ec <sd_mmc_spi_init+0x24>)
  4017cc:	701a      	strb	r2, [r3, #0]
  4017ce:	4b08      	ldr	r3, [pc, #32]	; (4017f0 <sd_mmc_spi_init+0x28>)
  4017d0:	691b      	ldr	r3, [r3, #16]
  4017d2:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  4017d6:	d000      	beq.n	4017da <sd_mmc_spi_init+0x12>
  4017d8:	4770      	bx	lr
  4017da:	b510      	push	{r4, lr}
  4017dc:	4c04      	ldr	r4, [pc, #16]	; (4017f0 <sd_mmc_spi_init+0x28>)
  4017de:	4620      	mov	r0, r4
  4017e0:	4b04      	ldr	r3, [pc, #16]	; (4017f4 <sd_mmc_spi_init+0x2c>)
  4017e2:	4798      	blx	r3
  4017e4:	2301      	movs	r3, #1
  4017e6:	6023      	str	r3, [r4, #0]
  4017e8:	bd10      	pop	{r4, pc}
  4017ea:	bf00      	nop
  4017ec:	20000af0 	.word	0x20000af0
  4017f0:	40008000 	.word	0x40008000
  4017f4:	00401b9d 	.word	0x00401b9d

004017f8 <sd_mmc_spi_select_device>:
  4017f8:	b570      	push	{r4, r5, r6, lr}
  4017fa:	b082      	sub	sp, #8
  4017fc:	2200      	movs	r2, #0
  4017fe:	4b09      	ldr	r3, [pc, #36]	; (401824 <sd_mmc_spi_select_device+0x2c>)
  401800:	701a      	strb	r2, [r3, #0]
  401802:	4c09      	ldr	r4, [pc, #36]	; (401828 <sd_mmc_spi_select_device+0x30>)
  401804:	eb04 0480 	add.w	r4, r4, r0, lsl #2
  401808:	4d08      	ldr	r5, [pc, #32]	; (40182c <sd_mmc_spi_select_device+0x34>)
  40180a:	9200      	str	r2, [sp, #0]
  40180c:	460b      	mov	r3, r1
  40180e:	4621      	mov	r1, r4
  401810:	4628      	mov	r0, r5
  401812:	4e07      	ldr	r6, [pc, #28]	; (401830 <sd_mmc_spi_select_device+0x38>)
  401814:	47b0      	blx	r6
  401816:	4621      	mov	r1, r4
  401818:	4628      	mov	r0, r5
  40181a:	4b06      	ldr	r3, [pc, #24]	; (401834 <sd_mmc_spi_select_device+0x3c>)
  40181c:	4798      	blx	r3
  40181e:	b002      	add	sp, #8
  401820:	bd70      	pop	{r4, r5, r6, pc}
  401822:	bf00      	nop
  401824:	20000af0 	.word	0x20000af0
  401828:	2000044c 	.word	0x2000044c
  40182c:	40008000 	.word	0x40008000
  401830:	00401bf1 	.word	0x00401bf1
  401834:	00401c71 	.word	0x00401c71

00401838 <sd_mmc_spi_deselect_device>:
  401838:	b508      	push	{r3, lr}
  40183a:	2200      	movs	r2, #0
  40183c:	4b04      	ldr	r3, [pc, #16]	; (401850 <sd_mmc_spi_deselect_device+0x18>)
  40183e:	701a      	strb	r2, [r3, #0]
  401840:	4904      	ldr	r1, [pc, #16]	; (401854 <sd_mmc_spi_deselect_device+0x1c>)
  401842:	eb01 0180 	add.w	r1, r1, r0, lsl #2
  401846:	4804      	ldr	r0, [pc, #16]	; (401858 <sd_mmc_spi_deselect_device+0x20>)
  401848:	4b04      	ldr	r3, [pc, #16]	; (40185c <sd_mmc_spi_deselect_device+0x24>)
  40184a:	4798      	blx	r3
  40184c:	bd08      	pop	{r3, pc}
  40184e:	bf00      	nop
  401850:	20000af0 	.word	0x20000af0
  401854:	2000044c 	.word	0x2000044c
  401858:	40008000 	.word	0x40008000
  40185c:	00401ca1 	.word	0x00401ca1

00401860 <sd_mmc_spi_send_clock>:
  401860:	b5f0      	push	{r4, r5, r6, r7, lr}
  401862:	b083      	sub	sp, #12
  401864:	ad02      	add	r5, sp, #8
  401866:	23ff      	movs	r3, #255	; 0xff
  401868:	f805 3d01 	strb.w	r3, [r5, #-1]!
  40186c:	2200      	movs	r2, #0
  40186e:	4b07      	ldr	r3, [pc, #28]	; (40188c <sd_mmc_spi_send_clock+0x2c>)
  401870:	701a      	strb	r2, [r3, #0]
  401872:	240a      	movs	r4, #10
  401874:	4f06      	ldr	r7, [pc, #24]	; (401890 <sd_mmc_spi_send_clock+0x30>)
  401876:	4e07      	ldr	r6, [pc, #28]	; (401894 <sd_mmc_spi_send_clock+0x34>)
  401878:	2201      	movs	r2, #1
  40187a:	4629      	mov	r1, r5
  40187c:	4638      	mov	r0, r7
  40187e:	47b0      	blx	r6
  401880:	1e63      	subs	r3, r4, #1
  401882:	f013 04ff 	ands.w	r4, r3, #255	; 0xff
  401886:	d1f7      	bne.n	401878 <sd_mmc_spi_send_clock+0x18>
  401888:	b003      	add	sp, #12
  40188a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40188c:	20000af0 	.word	0x20000af0
  401890:	40008000 	.word	0x40008000
  401894:	00401cc1 	.word	0x00401cc1

00401898 <sd_mmc_spi_adtc_start>:
  401898:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  40189c:	b085      	sub	sp, #20
  40189e:	4604      	mov	r4, r0
  4018a0:	4691      	mov	r9, r2
  4018a2:	4698      	mov	r8, r3
  4018a4:	23ff      	movs	r3, #255	; 0xff
  4018a6:	f88d 300f 	strb.w	r3, [sp, #15]
  4018aa:	2300      	movs	r3, #0
  4018ac:	4a53      	ldr	r2, [pc, #332]	; (4019fc <sd_mmc_spi_adtc_start+0x164>)
  4018ae:	7013      	strb	r3, [r2, #0]
  4018b0:	f000 023f 	and.w	r2, r0, #63	; 0x3f
  4018b4:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  4018b8:	f88d 2008 	strb.w	r2, [sp, #8]
  4018bc:	0e0a      	lsrs	r2, r1, #24
  4018be:	f88d 2009 	strb.w	r2, [sp, #9]
  4018c2:	0c0a      	lsrs	r2, r1, #16
  4018c4:	f88d 200a 	strb.w	r2, [sp, #10]
  4018c8:	0a0a      	lsrs	r2, r1, #8
  4018ca:	f88d 200b 	strb.w	r2, [sp, #11]
  4018ce:	f88d 100c 	strb.w	r1, [sp, #12]
  4018d2:	af02      	add	r7, sp, #8
  4018d4:	f04f 0c08 	mov.w	ip, #8
  4018d8:	f10d 0e0d 	add.w	lr, sp, #13
  4018dc:	e001      	b.n	4018e2 <sd_mmc_spi_adtc_start+0x4a>
  4018de:	4577      	cmp	r7, lr
  4018e0:	d012      	beq.n	401908 <sd_mmc_spi_adtc_start+0x70>
  4018e2:	f817 1b01 	ldrb.w	r1, [r7], #1
  4018e6:	4662      	mov	r2, ip
  4018e8:	005b      	lsls	r3, r3, #1
  4018ea:	b2db      	uxtb	r3, r3
  4018ec:	ea83 0001 	eor.w	r0, r3, r1
  4018f0:	f010 0f80 	tst.w	r0, #128	; 0x80
  4018f4:	bf18      	it	ne
  4018f6:	f083 0309 	eorne.w	r3, r3, #9
  4018fa:	0049      	lsls	r1, r1, #1
  4018fc:	b2c9      	uxtb	r1, r1
  4018fe:	3a01      	subs	r2, #1
  401900:	f012 02ff 	ands.w	r2, r2, #255	; 0xff
  401904:	d1f0      	bne.n	4018e8 <sd_mmc_spi_adtc_start+0x50>
  401906:	e7ea      	b.n	4018de <sd_mmc_spi_adtc_start+0x46>
  401908:	005b      	lsls	r3, r3, #1
  40190a:	f043 0301 	orr.w	r3, r3, #1
  40190e:	f88d 300d 	strb.w	r3, [sp, #13]
  401912:	4f3b      	ldr	r7, [pc, #236]	; (401a00 <sd_mmc_spi_adtc_start+0x168>)
  401914:	2201      	movs	r2, #1
  401916:	f10d 010f 	add.w	r1, sp, #15
  40191a:	4638      	mov	r0, r7
  40191c:	4d39      	ldr	r5, [pc, #228]	; (401a04 <sd_mmc_spi_adtc_start+0x16c>)
  40191e:	47a8      	blx	r5
  401920:	2206      	movs	r2, #6
  401922:	a902      	add	r1, sp, #8
  401924:	4638      	mov	r0, r7
  401926:	47a8      	blx	r5
  401928:	a904      	add	r1, sp, #16
  40192a:	23ff      	movs	r3, #255	; 0xff
  40192c:	f801 3d09 	strb.w	r3, [r1, #-9]!
  401930:	2201      	movs	r2, #1
  401932:	4638      	mov	r0, r7
  401934:	4b34      	ldr	r3, [pc, #208]	; (401a08 <sd_mmc_spi_adtc_start+0x170>)
  401936:	4798      	blx	r3
  401938:	2707      	movs	r7, #7
  40193a:	4e31      	ldr	r6, [pc, #196]	; (401a00 <sd_mmc_spi_adtc_start+0x168>)
  40193c:	4d32      	ldr	r5, [pc, #200]	; (401a08 <sd_mmc_spi_adtc_start+0x170>)
  40193e:	2201      	movs	r2, #1
  401940:	f10d 0107 	add.w	r1, sp, #7
  401944:	4630      	mov	r0, r6
  401946:	47a8      	blx	r5
  401948:	f89d 3007 	ldrb.w	r3, [sp, #7]
  40194c:	f013 0f80 	tst.w	r3, #128	; 0x80
  401950:	d00b      	beq.n	40196a <sd_mmc_spi_adtc_start+0xd2>
  401952:	1e7b      	subs	r3, r7, #1
  401954:	f013 07ff 	ands.w	r7, r3, #255	; 0xff
  401958:	d1f1      	bne.n	40193e <sd_mmc_spi_adtc_start+0xa6>
  40195a:	2202      	movs	r2, #2
  40195c:	4b27      	ldr	r3, [pc, #156]	; (4019fc <sd_mmc_spi_adtc_start+0x164>)
  40195e:	701a      	strb	r2, [r3, #0]
  401960:	2300      	movs	r3, #0
  401962:	4618      	mov	r0, r3
  401964:	b005      	add	sp, #20
  401966:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  40196a:	4a28      	ldr	r2, [pc, #160]	; (401a0c <sd_mmc_spi_adtc_start+0x174>)
  40196c:	6013      	str	r3, [r2, #0]
  40196e:	f013 0f08 	tst.w	r3, #8
  401972:	d119      	bne.n	4019a8 <sd_mmc_spi_adtc_start+0x110>
  401974:	f013 0f04 	tst.w	r3, #4
  401978:	d11b      	bne.n	4019b2 <sd_mmc_spi_adtc_start+0x11a>
  40197a:	f033 0301 	bics.w	r3, r3, #1
  40197e:	d11d      	bne.n	4019bc <sd_mmc_spi_adtc_start+0x124>
  401980:	f414 5f00 	tst.w	r4, #8192	; 0x2000
  401984:	d11f      	bne.n	4019c6 <sd_mmc_spi_adtc_start+0x12e>
  401986:	f414 7f00 	tst.w	r4, #512	; 0x200
  40198a:	d125      	bne.n	4019d8 <sd_mmc_spi_adtc_start+0x140>
  40198c:	f414 6f80 	tst.w	r4, #1024	; 0x400
  401990:	d12a      	bne.n	4019e8 <sd_mmc_spi_adtc_start+0x150>
  401992:	4b1f      	ldr	r3, [pc, #124]	; (401a10 <sd_mmc_spi_adtc_start+0x178>)
  401994:	f8a3 9000 	strh.w	r9, [r3]
  401998:	4b1e      	ldr	r3, [pc, #120]	; (401a14 <sd_mmc_spi_adtc_start+0x17c>)
  40199a:	f8a3 8000 	strh.w	r8, [r3]
  40199e:	2200      	movs	r2, #0
  4019a0:	4b1d      	ldr	r3, [pc, #116]	; (401a18 <sd_mmc_spi_adtc_start+0x180>)
  4019a2:	601a      	str	r2, [r3, #0]
  4019a4:	2301      	movs	r3, #1
  4019a6:	e7dc      	b.n	401962 <sd_mmc_spi_adtc_start+0xca>
  4019a8:	2206      	movs	r2, #6
  4019aa:	4b14      	ldr	r3, [pc, #80]	; (4019fc <sd_mmc_spi_adtc_start+0x164>)
  4019ac:	701a      	strb	r2, [r3, #0]
  4019ae:	2300      	movs	r3, #0
  4019b0:	e7d7      	b.n	401962 <sd_mmc_spi_adtc_start+0xca>
  4019b2:	2209      	movs	r2, #9
  4019b4:	4b11      	ldr	r3, [pc, #68]	; (4019fc <sd_mmc_spi_adtc_start+0x164>)
  4019b6:	701a      	strb	r2, [r3, #0]
  4019b8:	2300      	movs	r3, #0
  4019ba:	e7d2      	b.n	401962 <sd_mmc_spi_adtc_start+0xca>
  4019bc:	2201      	movs	r2, #1
  4019be:	4b0f      	ldr	r3, [pc, #60]	; (4019fc <sd_mmc_spi_adtc_start+0x164>)
  4019c0:	701a      	strb	r2, [r3, #0]
  4019c2:	2300      	movs	r3, #0
  4019c4:	e7cd      	b.n	401962 <sd_mmc_spi_adtc_start+0xca>
  4019c6:	4b15      	ldr	r3, [pc, #84]	; (401a1c <sd_mmc_spi_adtc_start+0x184>)
  4019c8:	4798      	blx	r3
  4019ca:	4603      	mov	r3, r0
  4019cc:	2800      	cmp	r0, #0
  4019ce:	d1da      	bne.n	401986 <sd_mmc_spi_adtc_start+0xee>
  4019d0:	2103      	movs	r1, #3
  4019d2:	4a0a      	ldr	r2, [pc, #40]	; (4019fc <sd_mmc_spi_adtc_start+0x164>)
  4019d4:	7011      	strb	r1, [r2, #0]
  4019d6:	e7c4      	b.n	401962 <sd_mmc_spi_adtc_start+0xca>
  4019d8:	490c      	ldr	r1, [pc, #48]	; (401a0c <sd_mmc_spi_adtc_start+0x174>)
  4019da:	2300      	movs	r3, #0
  4019dc:	600b      	str	r3, [r1, #0]
  4019de:	2201      	movs	r2, #1
  4019e0:	4807      	ldr	r0, [pc, #28]	; (401a00 <sd_mmc_spi_adtc_start+0x168>)
  4019e2:	4b09      	ldr	r3, [pc, #36]	; (401a08 <sd_mmc_spi_adtc_start+0x170>)
  4019e4:	4798      	blx	r3
  4019e6:	e7d1      	b.n	40198c <sd_mmc_spi_adtc_start+0xf4>
  4019e8:	4c08      	ldr	r4, [pc, #32]	; (401a0c <sd_mmc_spi_adtc_start+0x174>)
  4019ea:	2204      	movs	r2, #4
  4019ec:	4621      	mov	r1, r4
  4019ee:	4804      	ldr	r0, [pc, #16]	; (401a00 <sd_mmc_spi_adtc_start+0x168>)
  4019f0:	4b05      	ldr	r3, [pc, #20]	; (401a08 <sd_mmc_spi_adtc_start+0x170>)
  4019f2:	4798      	blx	r3
  4019f4:	6823      	ldr	r3, [r4, #0]
  4019f6:	ba1b      	rev	r3, r3
  4019f8:	6023      	str	r3, [r4, #0]
  4019fa:	e7ca      	b.n	401992 <sd_mmc_spi_adtc_start+0xfa>
  4019fc:	20000af0 	.word	0x20000af0
  401a00:	40008000 	.word	0x40008000
  401a04:	00401cc1 	.word	0x00401cc1
  401a08:	00401cf5 	.word	0x00401cf5
  401a0c:	20000af4 	.word	0x20000af4
  401a10:	20000aee 	.word	0x20000aee
  401a14:	20000af2 	.word	0x20000af2
  401a18:	20000af8 	.word	0x20000af8
  401a1c:	00401711 	.word	0x00401711

00401a20 <sd_mmc_spi_send_cmd>:
  401a20:	b510      	push	{r4, lr}
  401a22:	b082      	sub	sp, #8
  401a24:	2200      	movs	r2, #0
  401a26:	9200      	str	r2, [sp, #0]
  401a28:	4613      	mov	r3, r2
  401a2a:	4c02      	ldr	r4, [pc, #8]	; (401a34 <sd_mmc_spi_send_cmd+0x14>)
  401a2c:	47a0      	blx	r4
  401a2e:	b002      	add	sp, #8
  401a30:	bd10      	pop	{r4, pc}
  401a32:	bf00      	nop
  401a34:	00401899 	.word	0x00401899

00401a38 <sd_mmc_spi_get_response>:
  401a38:	4b01      	ldr	r3, [pc, #4]	; (401a40 <sd_mmc_spi_get_response+0x8>)
  401a3a:	6818      	ldr	r0, [r3, #0]
  401a3c:	4770      	bx	lr
  401a3e:	bf00      	nop
  401a40:	20000af4 	.word	0x20000af4

00401a44 <sd_mmc_spi_read_word>:
  401a44:	b510      	push	{r4, lr}
  401a46:	b082      	sub	sp, #8
  401a48:	4604      	mov	r4, r0
  401a4a:	2200      	movs	r2, #0
  401a4c:	4b14      	ldr	r3, [pc, #80]	; (401aa0 <sd_mmc_spi_read_word+0x5c>)
  401a4e:	701a      	strb	r2, [r3, #0]
  401a50:	4b14      	ldr	r3, [pc, #80]	; (401aa4 <sd_mmc_spi_read_word+0x60>)
  401a52:	881a      	ldrh	r2, [r3, #0]
  401a54:	4b14      	ldr	r3, [pc, #80]	; (401aa8 <sd_mmc_spi_read_word+0x64>)
  401a56:	6819      	ldr	r1, [r3, #0]
  401a58:	fbb1 f3f2 	udiv	r3, r1, r2
  401a5c:	fb02 1313 	mls	r3, r2, r3, r1
  401a60:	b91b      	cbnz	r3, 401a6a <sd_mmc_spi_read_word+0x26>
  401a62:	4b12      	ldr	r3, [pc, #72]	; (401aac <sd_mmc_spi_read_word+0x68>)
  401a64:	4798      	blx	r3
  401a66:	4603      	mov	r3, r0
  401a68:	b180      	cbz	r0, 401a8c <sd_mmc_spi_read_word+0x48>
  401a6a:	2204      	movs	r2, #4
  401a6c:	4621      	mov	r1, r4
  401a6e:	4810      	ldr	r0, [pc, #64]	; (401ab0 <sd_mmc_spi_read_word+0x6c>)
  401a70:	4b10      	ldr	r3, [pc, #64]	; (401ab4 <sd_mmc_spi_read_word+0x70>)
  401a72:	4798      	blx	r3
  401a74:	4a0c      	ldr	r2, [pc, #48]	; (401aa8 <sd_mmc_spi_read_word+0x64>)
  401a76:	6813      	ldr	r3, [r2, #0]
  401a78:	3304      	adds	r3, #4
  401a7a:	6013      	str	r3, [r2, #0]
  401a7c:	4a09      	ldr	r2, [pc, #36]	; (401aa4 <sd_mmc_spi_read_word+0x60>)
  401a7e:	8811      	ldrh	r1, [r2, #0]
  401a80:	fbb3 f2f1 	udiv	r2, r3, r1
  401a84:	fb01 3312 	mls	r3, r1, r2, r3
  401a88:	b11b      	cbz	r3, 401a92 <sd_mmc_spi_read_word+0x4e>
  401a8a:	2301      	movs	r3, #1
  401a8c:	4618      	mov	r0, r3
  401a8e:	b002      	add	sp, #8
  401a90:	bd10      	pop	{r4, pc}
  401a92:	2202      	movs	r2, #2
  401a94:	a901      	add	r1, sp, #4
  401a96:	4806      	ldr	r0, [pc, #24]	; (401ab0 <sd_mmc_spi_read_word+0x6c>)
  401a98:	4b06      	ldr	r3, [pc, #24]	; (401ab4 <sd_mmc_spi_read_word+0x70>)
  401a9a:	4798      	blx	r3
  401a9c:	2301      	movs	r3, #1
  401a9e:	e7f5      	b.n	401a8c <sd_mmc_spi_read_word+0x48>
  401aa0:	20000af0 	.word	0x20000af0
  401aa4:	20000aee 	.word	0x20000aee
  401aa8:	20000af8 	.word	0x20000af8
  401aac:	00401769 	.word	0x00401769
  401ab0:	40008000 	.word	0x40008000
  401ab4:	00401cf5 	.word	0x00401cf5

00401ab8 <sd_mmc_spi_start_read_blocks>:
  401ab8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401abc:	b083      	sub	sp, #12
  401abe:	2200      	movs	r2, #0
  401ac0:	4b16      	ldr	r3, [pc, #88]	; (401b1c <sd_mmc_spi_start_read_blocks+0x64>)
  401ac2:	701a      	strb	r2, [r3, #0]
  401ac4:	b339      	cbz	r1, 401b16 <sd_mmc_spi_start_read_blocks+0x5e>
  401ac6:	1e4c      	subs	r4, r1, #1
  401ac8:	b2a4      	uxth	r4, r4
  401aca:	4681      	mov	r9, r0
  401acc:	4615      	mov	r5, r2
  401ace:	f8df b05c 	ldr.w	fp, [pc, #92]	; 401b2c <sd_mmc_spi_start_read_blocks+0x74>
  401ad2:	f8df 805c 	ldr.w	r8, [pc, #92]	; 401b30 <sd_mmc_spi_start_read_blocks+0x78>
  401ad6:	4f12      	ldr	r7, [pc, #72]	; (401b20 <sd_mmc_spi_start_read_blocks+0x68>)
  401ad8:	47d8      	blx	fp
  401ada:	4682      	mov	sl, r0
  401adc:	b1b8      	cbz	r0, 401b0e <sd_mmc_spi_start_read_blocks+0x56>
  401ade:	f8b8 2000 	ldrh.w	r2, [r8]
  401ae2:	eb09 0105 	add.w	r1, r9, r5
  401ae6:	4638      	mov	r0, r7
  401ae8:	4e0e      	ldr	r6, [pc, #56]	; (401b24 <sd_mmc_spi_start_read_blocks+0x6c>)
  401aea:	47b0      	blx	r6
  401aec:	f8b8 1000 	ldrh.w	r1, [r8]
  401af0:	440d      	add	r5, r1
  401af2:	4a0d      	ldr	r2, [pc, #52]	; (401b28 <sd_mmc_spi_start_read_blocks+0x70>)
  401af4:	6813      	ldr	r3, [r2, #0]
  401af6:	440b      	add	r3, r1
  401af8:	6013      	str	r3, [r2, #0]
  401afa:	2202      	movs	r2, #2
  401afc:	a901      	add	r1, sp, #4
  401afe:	4638      	mov	r0, r7
  401b00:	47b0      	blx	r6
  401b02:	3c01      	subs	r4, #1
  401b04:	b2a4      	uxth	r4, r4
  401b06:	f64f 73ff 	movw	r3, #65535	; 0xffff
  401b0a:	429c      	cmp	r4, r3
  401b0c:	d1e4      	bne.n	401ad8 <sd_mmc_spi_start_read_blocks+0x20>
  401b0e:	4650      	mov	r0, sl
  401b10:	b003      	add	sp, #12
  401b12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401b16:	f04f 0a01 	mov.w	sl, #1
  401b1a:	e7f8      	b.n	401b0e <sd_mmc_spi_start_read_blocks+0x56>
  401b1c:	20000af0 	.word	0x20000af0
  401b20:	40008000 	.word	0x40008000
  401b24:	00401cf5 	.word	0x00401cf5
  401b28:	20000af8 	.word	0x20000af8
  401b2c:	00401769 	.word	0x00401769
  401b30:	20000aee 	.word	0x20000aee

00401b34 <sd_mmc_spi_wait_end_of_read_blocks>:
  401b34:	2001      	movs	r0, #1
  401b36:	4770      	bx	lr

00401b38 <sysclk_init>:
  401b38:	b510      	push	{r4, lr}
  401b3a:	480e      	ldr	r0, [pc, #56]	; (401b74 <sysclk_init+0x3c>)
  401b3c:	4b0e      	ldr	r3, [pc, #56]	; (401b78 <sysclk_init+0x40>)
  401b3e:	4798      	blx	r3
  401b40:	213e      	movs	r1, #62	; 0x3e
  401b42:	2000      	movs	r0, #0
  401b44:	4b0d      	ldr	r3, [pc, #52]	; (401b7c <sysclk_init+0x44>)
  401b46:	4798      	blx	r3
  401b48:	4c0d      	ldr	r4, [pc, #52]	; (401b80 <sysclk_init+0x48>)
  401b4a:	47a0      	blx	r4
  401b4c:	2800      	cmp	r0, #0
  401b4e:	d0fc      	beq.n	401b4a <sysclk_init+0x12>
  401b50:	4b0c      	ldr	r3, [pc, #48]	; (401b84 <sysclk_init+0x4c>)
  401b52:	4798      	blx	r3
  401b54:	4a0c      	ldr	r2, [pc, #48]	; (401b88 <sysclk_init+0x50>)
  401b56:	4b0d      	ldr	r3, [pc, #52]	; (401b8c <sysclk_init+0x54>)
  401b58:	629a      	str	r2, [r3, #40]	; 0x28
  401b5a:	4c0d      	ldr	r4, [pc, #52]	; (401b90 <sysclk_init+0x58>)
  401b5c:	47a0      	blx	r4
  401b5e:	2800      	cmp	r0, #0
  401b60:	d0fc      	beq.n	401b5c <sysclk_init+0x24>
  401b62:	2010      	movs	r0, #16
  401b64:	4b0b      	ldr	r3, [pc, #44]	; (401b94 <sysclk_init+0x5c>)
  401b66:	4798      	blx	r3
  401b68:	4b0b      	ldr	r3, [pc, #44]	; (401b98 <sysclk_init+0x60>)
  401b6a:	4798      	blx	r3
  401b6c:	4801      	ldr	r0, [pc, #4]	; (401b74 <sysclk_init+0x3c>)
  401b6e:	4b02      	ldr	r3, [pc, #8]	; (401b78 <sysclk_init+0x40>)
  401b70:	4798      	blx	r3
  401b72:	bd10      	pop	{r4, pc}
  401b74:	07270e00 	.word	0x07270e00
  401b78:	00402e2d 	.word	0x00402e2d
  401b7c:	004024d9 	.word	0x004024d9
  401b80:	0040252d 	.word	0x0040252d
  401b84:	0040253d 	.word	0x0040253d
  401b88:	20133f01 	.word	0x20133f01
  401b8c:	400e0400 	.word	0x400e0400
  401b90:	0040254d 	.word	0x0040254d
  401b94:	00402431 	.word	0x00402431
  401b98:	00402d1d 	.word	0x00402d1d

00401b9c <spi_master_init>:
  401b9c:	b510      	push	{r4, lr}
  401b9e:	4604      	mov	r4, r0
  401ba0:	4b10      	ldr	r3, [pc, #64]	; (401be4 <spi_master_init+0x48>)
  401ba2:	4798      	blx	r3
  401ba4:	2380      	movs	r3, #128	; 0x80
  401ba6:	6023      	str	r3, [r4, #0]
  401ba8:	6863      	ldr	r3, [r4, #4]
  401baa:	f043 0301 	orr.w	r3, r3, #1
  401bae:	6063      	str	r3, [r4, #4]
  401bb0:	6863      	ldr	r3, [r4, #4]
  401bb2:	f043 0310 	orr.w	r3, r3, #16
  401bb6:	6063      	str	r3, [r4, #4]
  401bb8:	6863      	ldr	r3, [r4, #4]
  401bba:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  401bbe:	6063      	str	r3, [r4, #4]
  401bc0:	2100      	movs	r1, #0
  401bc2:	4620      	mov	r0, r4
  401bc4:	4b08      	ldr	r3, [pc, #32]	; (401be8 <spi_master_init+0x4c>)
  401bc6:	4798      	blx	r3
  401bc8:	6863      	ldr	r3, [r4, #4]
  401bca:	f023 0302 	bic.w	r3, r3, #2
  401bce:	6063      	str	r3, [r4, #4]
  401bd0:	6863      	ldr	r3, [r4, #4]
  401bd2:	f023 0304 	bic.w	r3, r3, #4
  401bd6:	6063      	str	r3, [r4, #4]
  401bd8:	2100      	movs	r1, #0
  401bda:	4620      	mov	r0, r4
  401bdc:	4b03      	ldr	r3, [pc, #12]	; (401bec <spi_master_init+0x50>)
  401bde:	4798      	blx	r3
  401be0:	bd10      	pop	{r4, pc}
  401be2:	bf00      	nop
  401be4:	004027e1 	.word	0x004027e1
  401be8:	004027f1 	.word	0x004027f1
  401bec:	00402807 	.word	0x00402807

00401bf0 <spi_master_setup_device>:
  401bf0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401bf4:	4604      	mov	r4, r0
  401bf6:	460d      	mov	r5, r1
  401bf8:	4616      	mov	r6, r2
  401bfa:	4915      	ldr	r1, [pc, #84]	; (401c50 <spi_master_setup_device+0x60>)
  401bfc:	4618      	mov	r0, r3
  401bfe:	4b15      	ldr	r3, [pc, #84]	; (401c54 <spi_master_setup_device+0x64>)
  401c00:	4798      	blx	r3
  401c02:	4607      	mov	r7, r0
  401c04:	2300      	movs	r3, #0
  401c06:	461a      	mov	r2, r3
  401c08:	6829      	ldr	r1, [r5, #0]
  401c0a:	4620      	mov	r0, r4
  401c0c:	f8df 805c 	ldr.w	r8, [pc, #92]	; 401c6c <spi_master_setup_device+0x7c>
  401c10:	47c0      	blx	r8
  401c12:	2208      	movs	r2, #8
  401c14:	6829      	ldr	r1, [r5, #0]
  401c16:	4620      	mov	r0, r4
  401c18:	4b0f      	ldr	r3, [pc, #60]	; (401c58 <spi_master_setup_device+0x68>)
  401c1a:	4798      	blx	r3
  401c1c:	b2fa      	uxtb	r2, r7
  401c1e:	6829      	ldr	r1, [r5, #0]
  401c20:	4620      	mov	r0, r4
  401c22:	4b0e      	ldr	r3, [pc, #56]	; (401c5c <spi_master_setup_device+0x6c>)
  401c24:	4798      	blx	r3
  401c26:	2208      	movs	r2, #8
  401c28:	6829      	ldr	r1, [r5, #0]
  401c2a:	4620      	mov	r0, r4
  401c2c:	4b0c      	ldr	r3, [pc, #48]	; (401c60 <spi_master_setup_device+0x70>)
  401c2e:	4798      	blx	r3
  401c30:	0872      	lsrs	r2, r6, #1
  401c32:	6829      	ldr	r1, [r5, #0]
  401c34:	4620      	mov	r0, r4
  401c36:	4b0b      	ldr	r3, [pc, #44]	; (401c64 <spi_master_setup_device+0x74>)
  401c38:	4798      	blx	r3
  401c3a:	f086 0201 	eor.w	r2, r6, #1
  401c3e:	f002 0201 	and.w	r2, r2, #1
  401c42:	6829      	ldr	r1, [r5, #0]
  401c44:	4620      	mov	r0, r4
  401c46:	4b08      	ldr	r3, [pc, #32]	; (401c68 <spi_master_setup_device+0x78>)
  401c48:	4798      	blx	r3
  401c4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401c4e:	bf00      	nop
  401c50:	07270e00 	.word	0x07270e00
  401c54:	004028af 	.word	0x004028af
  401c58:	0040289b 	.word	0x0040289b
  401c5c:	004028c5 	.word	0x004028c5
  401c60:	00402855 	.word	0x00402855
  401c64:	00402819 	.word	0x00402819
  401c68:	00402837 	.word	0x00402837
  401c6c:	004028eb 	.word	0x004028eb

00401c70 <spi_select_device>:
  401c70:	b508      	push	{r3, lr}
  401c72:	6843      	ldr	r3, [r0, #4]
  401c74:	f013 0f04 	tst.w	r3, #4
  401c78:	d006      	beq.n	401c88 <spi_select_device+0x18>
  401c7a:	6809      	ldr	r1, [r1, #0]
  401c7c:	290f      	cmp	r1, #15
  401c7e:	d900      	bls.n	401c82 <spi_select_device+0x12>
  401c80:	bd08      	pop	{r3, pc}
  401c82:	4b06      	ldr	r3, [pc, #24]	; (401c9c <spi_select_device+0x2c>)
  401c84:	4798      	blx	r3
  401c86:	bd08      	pop	{r3, pc}
  401c88:	6809      	ldr	r1, [r1, #0]
  401c8a:	2903      	cmp	r1, #3
  401c8c:	d8f8      	bhi.n	401c80 <spi_select_device+0x10>
  401c8e:	2301      	movs	r3, #1
  401c90:	fa03 f101 	lsl.w	r1, r3, r1
  401c94:	43c9      	mvns	r1, r1
  401c96:	4b01      	ldr	r3, [pc, #4]	; (401c9c <spi_select_device+0x2c>)
  401c98:	4798      	blx	r3
  401c9a:	e7f1      	b.n	401c80 <spi_select_device+0x10>
  401c9c:	004027f1 	.word	0x004027f1

00401ca0 <spi_deselect_device>:
  401ca0:	b510      	push	{r4, lr}
  401ca2:	4604      	mov	r4, r0
  401ca4:	6923      	ldr	r3, [r4, #16]
  401ca6:	f413 7f00 	tst.w	r3, #512	; 0x200
  401caa:	d0fb      	beq.n	401ca4 <spi_deselect_device+0x4>
  401cac:	210f      	movs	r1, #15
  401cae:	4620      	mov	r0, r4
  401cb0:	4b02      	ldr	r3, [pc, #8]	; (401cbc <spi_deselect_device+0x1c>)
  401cb2:	4798      	blx	r3
  401cb4:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  401cb8:	6023      	str	r3, [r4, #0]
  401cba:	bd10      	pop	{r4, pc}
  401cbc:	004027f1 	.word	0x004027f1

00401cc0 <spi_write_packet>:
  401cc0:	b11a      	cbz	r2, 401cca <spi_write_packet+0xa>
  401cc2:	b410      	push	{r4}
  401cc4:	460c      	mov	r4, r1
  401cc6:	4411      	add	r1, r2
  401cc8:	e006      	b.n	401cd8 <spi_write_packet+0x18>
  401cca:	2000      	movs	r0, #0
  401ccc:	4770      	bx	lr
  401cce:	f814 3b01 	ldrb.w	r3, [r4], #1
  401cd2:	60c3      	str	r3, [r0, #12]
  401cd4:	42a1      	cmp	r1, r4
  401cd6:	d00b      	beq.n	401cf0 <spi_write_packet+0x30>
  401cd8:	f643 2399 	movw	r3, #15001	; 0x3a99
  401cdc:	6902      	ldr	r2, [r0, #16]
  401cde:	f012 0f02 	tst.w	r2, #2
  401ce2:	d1f4      	bne.n	401cce <spi_write_packet+0xe>
  401ce4:	3b01      	subs	r3, #1
  401ce6:	d1f9      	bne.n	401cdc <spi_write_packet+0x1c>
  401ce8:	f06f 0002 	mvn.w	r0, #2
  401cec:	bc10      	pop	{r4}
  401cee:	4770      	bx	lr
  401cf0:	2000      	movs	r0, #0
  401cf2:	e7fb      	b.n	401cec <spi_write_packet+0x2c>

00401cf4 <spi_read_packet>:
  401cf4:	b13a      	cbz	r2, 401d06 <spi_read_packet+0x12>
  401cf6:	b470      	push	{r4, r5, r6}
  401cf8:	4615      	mov	r5, r2
  401cfa:	460c      	mov	r4, r1
  401cfc:	440d      	add	r5, r1
  401cfe:	26ff      	movs	r6, #255	; 0xff
  401d00:	f240 2101 	movw	r1, #513	; 0x201
  401d04:	e012      	b.n	401d2c <spi_read_packet+0x38>
  401d06:	2000      	movs	r0, #0
  401d08:	4770      	bx	lr
  401d0a:	60c6      	str	r6, [r0, #12]
  401d0c:	f643 2399 	movw	r3, #15001	; 0x3a99
  401d10:	6902      	ldr	r2, [r0, #16]
  401d12:	ea31 0202 	bics.w	r2, r1, r2
  401d16:	d004      	beq.n	401d22 <spi_read_packet+0x2e>
  401d18:	3b01      	subs	r3, #1
  401d1a:	d1f9      	bne.n	401d10 <spi_read_packet+0x1c>
  401d1c:	f06f 0002 	mvn.w	r0, #2
  401d20:	e00e      	b.n	401d40 <spi_read_packet+0x4c>
  401d22:	6883      	ldr	r3, [r0, #8]
  401d24:	f804 3b01 	strb.w	r3, [r4], #1
  401d28:	42a5      	cmp	r5, r4
  401d2a:	d00b      	beq.n	401d44 <spi_read_packet+0x50>
  401d2c:	f643 2399 	movw	r3, #15001	; 0x3a99
  401d30:	6902      	ldr	r2, [r0, #16]
  401d32:	f012 0f02 	tst.w	r2, #2
  401d36:	d1e8      	bne.n	401d0a <spi_read_packet+0x16>
  401d38:	3b01      	subs	r3, #1
  401d3a:	d1f9      	bne.n	401d30 <spi_read_packet+0x3c>
  401d3c:	f06f 0002 	mvn.w	r0, #2
  401d40:	bc70      	pop	{r4, r5, r6}
  401d42:	4770      	bx	lr
  401d44:	2000      	movs	r0, #0
  401d46:	e7fb      	b.n	401d40 <spi_read_packet+0x4c>

00401d48 <board_init>:
  401d48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  401d4a:	4838      	ldr	r0, [pc, #224]	; (401e2c <board_init+0xe4>)
  401d4c:	4b38      	ldr	r3, [pc, #224]	; (401e30 <board_init+0xe8>)
  401d4e:	4798      	blx	r3
  401d50:	200b      	movs	r0, #11
  401d52:	4c38      	ldr	r4, [pc, #224]	; (401e34 <board_init+0xec>)
  401d54:	47a0      	blx	r4
  401d56:	200c      	movs	r0, #12
  401d58:	47a0      	blx	r4
  401d5a:	200d      	movs	r0, #13
  401d5c:	47a0      	blx	r4
  401d5e:	4b36      	ldr	r3, [pc, #216]	; (401e38 <board_init+0xf0>)
  401d60:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
  401d64:	631a      	str	r2, [r3, #48]	; 0x30
  401d66:	611a      	str	r2, [r3, #16]
  401d68:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  401d6c:	4c33      	ldr	r4, [pc, #204]	; (401e3c <board_init+0xf4>)
  401d6e:	2504      	movs	r5, #4
  401d70:	6165      	str	r5, [r4, #20]
  401d72:	f8c4 50a0 	str.w	r5, [r4, #160]	; 0xa0
  401d76:	6665      	str	r5, [r4, #100]	; 0x64
  401d78:	f8c4 5090 	str.w	r5, [r4, #144]	; 0x90
  401d7c:	6565      	str	r5, [r4, #84]	; 0x54
  401d7e:	6265      	str	r5, [r4, #36]	; 0x24
  401d80:	f8c4 5080 	str.w	r5, [r4, #128]	; 0x80
  401d84:	6f22      	ldr	r2, [r4, #112]	; 0x70
  401d86:	f022 0204 	bic.w	r2, r2, #4
  401d8a:	6722      	str	r2, [r4, #112]	; 0x70
  401d8c:	6f62      	ldr	r2, [r4, #116]	; 0x74
  401d8e:	f022 0204 	bic.w	r2, r2, #4
  401d92:	6762      	str	r2, [r4, #116]	; 0x74
  401d94:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
  401d98:	631a      	str	r2, [r3, #48]	; 0x30
  401d9a:	611a      	str	r2, [r3, #16]
  401d9c:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  401da0:	f44f 3280 	mov.w	r2, #65536	; 0x10000
  401da4:	6322      	str	r2, [r4, #48]	; 0x30
  401da6:	6122      	str	r2, [r4, #16]
  401da8:	f8c4 20a0 	str.w	r2, [r4, #160]	; 0xa0
  401dac:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  401db0:	631a      	str	r2, [r3, #48]	; 0x30
  401db2:	611a      	str	r2, [r3, #16]
  401db4:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  401db8:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
  401dbc:	210c      	movs	r1, #12
  401dbe:	4820      	ldr	r0, [pc, #128]	; (401e40 <board_init+0xf8>)
  401dc0:	4b20      	ldr	r3, [pc, #128]	; (401e44 <board_init+0xfc>)
  401dc2:	4798      	blx	r3
  401dc4:	4f20      	ldr	r7, [pc, #128]	; (401e48 <board_init+0x100>)
  401dc6:	4639      	mov	r1, r7
  401dc8:	2003      	movs	r0, #3
  401dca:	4e20      	ldr	r6, [pc, #128]	; (401e4c <board_init+0x104>)
  401dcc:	47b0      	blx	r6
  401dce:	4639      	mov	r1, r7
  401dd0:	4628      	mov	r0, r5
  401dd2:	47b0      	blx	r6
  401dd4:	4639      	mov	r1, r7
  401dd6:	200c      	movs	r0, #12
  401dd8:	47b0      	blx	r6
  401dda:	4639      	mov	r1, r7
  401ddc:	200d      	movs	r0, #13
  401dde:	47b0      	blx	r6
  401de0:	4639      	mov	r1, r7
  401de2:	200e      	movs	r0, #14
  401de4:	47b0      	blx	r6
  401de6:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  401dea:	2009      	movs	r0, #9
  401dec:	47b0      	blx	r6
  401dee:	4918      	ldr	r1, [pc, #96]	; (401e50 <board_init+0x108>)
  401df0:	200a      	movs	r0, #10
  401df2:	47b0      	blx	r6
  401df4:	f107 5740 	add.w	r7, r7, #805306368	; 0x30000000
  401df8:	4639      	mov	r1, r7
  401dfa:	2055      	movs	r0, #85	; 0x55
  401dfc:	47b0      	blx	r6
  401dfe:	4639      	mov	r1, r7
  401e00:	205f      	movs	r0, #95	; 0x5f
  401e02:	47b0      	blx	r6
  401e04:	4913      	ldr	r1, [pc, #76]	; (401e54 <board_init+0x10c>)
  401e06:	204c      	movs	r0, #76	; 0x4c
  401e08:	47b0      	blx	r6
  401e0a:	6665      	str	r5, [r4, #100]	; 0x64
  401e0c:	f8c4 5090 	str.w	r5, [r4, #144]	; 0x90
  401e10:	6565      	str	r5, [r4, #84]	; 0x54
  401e12:	6265      	str	r5, [r4, #36]	; 0x24
  401e14:	f8c4 5080 	str.w	r5, [r4, #128]	; 0x80
  401e18:	6f23      	ldr	r3, [r4, #112]	; 0x70
  401e1a:	f023 0304 	bic.w	r3, r3, #4
  401e1e:	6723      	str	r3, [r4, #112]	; 0x70
  401e20:	6f63      	ldr	r3, [r4, #116]	; 0x74
  401e22:	f023 0304 	bic.w	r3, r3, #4
  401e26:	6763      	str	r3, [r4, #116]	; 0x74
  401e28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  401e2a:	bf00      	nop
  401e2c:	400e1450 	.word	0x400e1450
  401e30:	00402c65 	.word	0x00402c65
  401e34:	0040255d 	.word	0x0040255d
  401e38:	400e1200 	.word	0x400e1200
  401e3c:	400e0e00 	.word	0x400e0e00
  401e40:	400e1000 	.word	0x400e1000
  401e44:	004021c5 	.word	0x004021c5
  401e48:	08000001 	.word	0x08000001
  401e4c:	004020a5 	.word	0x004020a5
  401e50:	10000001 	.word	0x10000001
  401e54:	28000001 	.word	0x28000001

00401e58 <adc_init>:
  401e58:	b430      	push	{r4, r5}
  401e5a:	2401      	movs	r4, #1
  401e5c:	6004      	str	r4, [r0, #0]
  401e5e:	2400      	movs	r4, #0
  401e60:	6044      	str	r4, [r0, #4]
  401e62:	f240 2502 	movw	r5, #514	; 0x202
  401e66:	f8c0 5120 	str.w	r5, [r0, #288]	; 0x120
  401e6a:	f8c0 4104 	str.w	r4, [r0, #260]	; 0x104
  401e6e:	f8c0 4114 	str.w	r4, [r0, #276]	; 0x114
  401e72:	6845      	ldr	r5, [r0, #4]
  401e74:	0052      	lsls	r2, r2, #1
  401e76:	fbb1 f2f2 	udiv	r2, r1, r2
  401e7a:	3a01      	subs	r2, #1
  401e7c:	0212      	lsls	r2, r2, #8
  401e7e:	b292      	uxth	r2, r2
  401e80:	432b      	orrs	r3, r5
  401e82:	431a      	orrs	r2, r3
  401e84:	6042      	str	r2, [r0, #4]
  401e86:	4620      	mov	r0, r4
  401e88:	bc30      	pop	{r4, r5}
  401e8a:	4770      	bx	lr

00401e8c <adc_configure_trigger>:
  401e8c:	6843      	ldr	r3, [r0, #4]
  401e8e:	01d2      	lsls	r2, r2, #7
  401e90:	b2d2      	uxtb	r2, r2
  401e92:	4319      	orrs	r1, r3
  401e94:	430a      	orrs	r2, r1
  401e96:	6042      	str	r2, [r0, #4]
  401e98:	4770      	bx	lr

00401e9a <adc_start>:
  401e9a:	2302      	movs	r3, #2
  401e9c:	6003      	str	r3, [r0, #0]
  401e9e:	4770      	bx	lr

00401ea0 <adc_enable_channel>:
  401ea0:	2301      	movs	r3, #1
  401ea2:	fa03 f101 	lsl.w	r1, r3, r1
  401ea6:	6101      	str	r1, [r0, #16]
  401ea8:	4770      	bx	lr

00401eaa <adc_get_channel_value>:
  401eaa:	290f      	cmp	r1, #15
  401eac:	bf9a      	itte	ls
  401eae:	3050      	addls	r0, #80	; 0x50
  401eb0:	f850 0021 	ldrls.w	r0, [r0, r1, lsl #2]
  401eb4:	2000      	movhi	r0, #0
  401eb6:	4770      	bx	lr

00401eb8 <pio_set_debounce_filter>:
  401eb8:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
  401ebc:	0053      	lsls	r3, r2, #1
  401ebe:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  401ec2:	fbb2 f2f3 	udiv	r2, r2, r3
  401ec6:	3a01      	subs	r2, #1
  401ec8:	f3c2 020d 	ubfx	r2, r2, #0, #14
  401ecc:	f8c0 208c 	str.w	r2, [r0, #140]	; 0x8c
  401ed0:	4770      	bx	lr

00401ed2 <pio_set_peripheral>:
  401ed2:	6442      	str	r2, [r0, #68]	; 0x44
  401ed4:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  401ed8:	d039      	beq.n	401f4e <pio_set_peripheral+0x7c>
  401eda:	d813      	bhi.n	401f04 <pio_set_peripheral+0x32>
  401edc:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  401ee0:	d025      	beq.n	401f2e <pio_set_peripheral+0x5c>
  401ee2:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  401ee6:	d10a      	bne.n	401efe <pio_set_peripheral+0x2c>
  401ee8:	6f03      	ldr	r3, [r0, #112]	; 0x70
  401eea:	4313      	orrs	r3, r2
  401eec:	6703      	str	r3, [r0, #112]	; 0x70
  401eee:	6f43      	ldr	r3, [r0, #116]	; 0x74
  401ef0:	6f41      	ldr	r1, [r0, #116]	; 0x74
  401ef2:	400b      	ands	r3, r1
  401ef4:	ea23 0302 	bic.w	r3, r3, r2
  401ef8:	6743      	str	r3, [r0, #116]	; 0x74
  401efa:	6042      	str	r2, [r0, #4]
  401efc:	4770      	bx	lr
  401efe:	2900      	cmp	r1, #0
  401f00:	d1fb      	bne.n	401efa <pio_set_peripheral+0x28>
  401f02:	4770      	bx	lr
  401f04:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  401f08:	d020      	beq.n	401f4c <pio_set_peripheral+0x7a>
  401f0a:	d809      	bhi.n	401f20 <pio_set_peripheral+0x4e>
  401f0c:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  401f10:	d1f3      	bne.n	401efa <pio_set_peripheral+0x28>
  401f12:	6f03      	ldr	r3, [r0, #112]	; 0x70
  401f14:	4313      	orrs	r3, r2
  401f16:	6703      	str	r3, [r0, #112]	; 0x70
  401f18:	6f43      	ldr	r3, [r0, #116]	; 0x74
  401f1a:	4313      	orrs	r3, r2
  401f1c:	6743      	str	r3, [r0, #116]	; 0x74
  401f1e:	e7ec      	b.n	401efa <pio_set_peripheral+0x28>
  401f20:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  401f24:	d012      	beq.n	401f4c <pio_set_peripheral+0x7a>
  401f26:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  401f2a:	d00f      	beq.n	401f4c <pio_set_peripheral+0x7a>
  401f2c:	e7e5      	b.n	401efa <pio_set_peripheral+0x28>
  401f2e:	b410      	push	{r4}
  401f30:	6f01      	ldr	r1, [r0, #112]	; 0x70
  401f32:	6f04      	ldr	r4, [r0, #112]	; 0x70
  401f34:	43d3      	mvns	r3, r2
  401f36:	4021      	ands	r1, r4
  401f38:	461c      	mov	r4, r3
  401f3a:	4019      	ands	r1, r3
  401f3c:	6701      	str	r1, [r0, #112]	; 0x70
  401f3e:	6f43      	ldr	r3, [r0, #116]	; 0x74
  401f40:	6f41      	ldr	r1, [r0, #116]	; 0x74
  401f42:	400b      	ands	r3, r1
  401f44:	4023      	ands	r3, r4
  401f46:	6743      	str	r3, [r0, #116]	; 0x74
  401f48:	6042      	str	r2, [r0, #4]
  401f4a:	bc10      	pop	{r4}
  401f4c:	4770      	bx	lr
  401f4e:	6f03      	ldr	r3, [r0, #112]	; 0x70
  401f50:	6f01      	ldr	r1, [r0, #112]	; 0x70
  401f52:	400b      	ands	r3, r1
  401f54:	ea23 0302 	bic.w	r3, r3, r2
  401f58:	6703      	str	r3, [r0, #112]	; 0x70
  401f5a:	6f43      	ldr	r3, [r0, #116]	; 0x74
  401f5c:	4313      	orrs	r3, r2
  401f5e:	6743      	str	r3, [r0, #116]	; 0x74
  401f60:	e7cb      	b.n	401efa <pio_set_peripheral+0x28>

00401f62 <pio_set_input>:
  401f62:	6441      	str	r1, [r0, #68]	; 0x44
  401f64:	f012 0f01 	tst.w	r2, #1
  401f68:	bf14      	ite	ne
  401f6a:	6641      	strne	r1, [r0, #100]	; 0x64
  401f6c:	6601      	streq	r1, [r0, #96]	; 0x60
  401f6e:	f012 0f0a 	tst.w	r2, #10
  401f72:	bf14      	ite	ne
  401f74:	6201      	strne	r1, [r0, #32]
  401f76:	6241      	streq	r1, [r0, #36]	; 0x24
  401f78:	f012 0f02 	tst.w	r2, #2
  401f7c:	d107      	bne.n	401f8e <pio_set_input+0x2c>
  401f7e:	f012 0f08 	tst.w	r2, #8
  401f82:	bf18      	it	ne
  401f84:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
  401f88:	6141      	str	r1, [r0, #20]
  401f8a:	6001      	str	r1, [r0, #0]
  401f8c:	4770      	bx	lr
  401f8e:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
  401f92:	e7f9      	b.n	401f88 <pio_set_input+0x26>

00401f94 <pio_set_output>:
  401f94:	b410      	push	{r4}
  401f96:	9c01      	ldr	r4, [sp, #4]
  401f98:	6441      	str	r1, [r0, #68]	; 0x44
  401f9a:	b944      	cbnz	r4, 401fae <pio_set_output+0x1a>
  401f9c:	6601      	str	r1, [r0, #96]	; 0x60
  401f9e:	b143      	cbz	r3, 401fb2 <pio_set_output+0x1e>
  401fa0:	6501      	str	r1, [r0, #80]	; 0x50
  401fa2:	b942      	cbnz	r2, 401fb6 <pio_set_output+0x22>
  401fa4:	6341      	str	r1, [r0, #52]	; 0x34
  401fa6:	6101      	str	r1, [r0, #16]
  401fa8:	6001      	str	r1, [r0, #0]
  401faa:	bc10      	pop	{r4}
  401fac:	4770      	bx	lr
  401fae:	6641      	str	r1, [r0, #100]	; 0x64
  401fb0:	e7f5      	b.n	401f9e <pio_set_output+0xa>
  401fb2:	6541      	str	r1, [r0, #84]	; 0x54
  401fb4:	e7f5      	b.n	401fa2 <pio_set_output+0xe>
  401fb6:	6301      	str	r1, [r0, #48]	; 0x30
  401fb8:	e7f5      	b.n	401fa6 <pio_set_output+0x12>
	...

00401fbc <pio_configure>:
  401fbc:	b570      	push	{r4, r5, r6, lr}
  401fbe:	b082      	sub	sp, #8
  401fc0:	4605      	mov	r5, r0
  401fc2:	4616      	mov	r6, r2
  401fc4:	461c      	mov	r4, r3
  401fc6:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  401fca:	d014      	beq.n	401ff6 <pio_configure+0x3a>
  401fcc:	d90a      	bls.n	401fe4 <pio_configure+0x28>
  401fce:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  401fd2:	d022      	beq.n	40201a <pio_configure+0x5e>
  401fd4:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  401fd8:	d01f      	beq.n	40201a <pio_configure+0x5e>
  401fda:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  401fde:	d016      	beq.n	40200e <pio_configure+0x52>
  401fe0:	2000      	movs	r0, #0
  401fe2:	e012      	b.n	40200a <pio_configure+0x4e>
  401fe4:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  401fe8:	d005      	beq.n	401ff6 <pio_configure+0x3a>
  401fea:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  401fee:	d002      	beq.n	401ff6 <pio_configure+0x3a>
  401ff0:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  401ff4:	d1f4      	bne.n	401fe0 <pio_configure+0x24>
  401ff6:	4632      	mov	r2, r6
  401ff8:	4628      	mov	r0, r5
  401ffa:	4b10      	ldr	r3, [pc, #64]	; (40203c <pio_configure+0x80>)
  401ffc:	4798      	blx	r3
  401ffe:	f014 0f01 	tst.w	r4, #1
  402002:	bf14      	ite	ne
  402004:	666e      	strne	r6, [r5, #100]	; 0x64
  402006:	662e      	streq	r6, [r5, #96]	; 0x60
  402008:	2001      	movs	r0, #1
  40200a:	b002      	add	sp, #8
  40200c:	bd70      	pop	{r4, r5, r6, pc}
  40200e:	461a      	mov	r2, r3
  402010:	4631      	mov	r1, r6
  402012:	4b0b      	ldr	r3, [pc, #44]	; (402040 <pio_configure+0x84>)
  402014:	4798      	blx	r3
  402016:	2001      	movs	r0, #1
  402018:	e7f7      	b.n	40200a <pio_configure+0x4e>
  40201a:	f004 0301 	and.w	r3, r4, #1
  40201e:	9300      	str	r3, [sp, #0]
  402020:	f3c4 0380 	ubfx	r3, r4, #2, #1
  402024:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  402028:	bf14      	ite	ne
  40202a:	2200      	movne	r2, #0
  40202c:	2201      	moveq	r2, #1
  40202e:	4631      	mov	r1, r6
  402030:	4628      	mov	r0, r5
  402032:	4c04      	ldr	r4, [pc, #16]	; (402044 <pio_configure+0x88>)
  402034:	47a0      	blx	r4
  402036:	2001      	movs	r0, #1
  402038:	e7e7      	b.n	40200a <pio_configure+0x4e>
  40203a:	bf00      	nop
  40203c:	00401ed3 	.word	0x00401ed3
  402040:	00401f63 	.word	0x00401f63
  402044:	00401f95 	.word	0x00401f95

00402048 <pio_configure_interrupt>:
  402048:	f012 0f10 	tst.w	r2, #16
  40204c:	d010      	beq.n	402070 <pio_configure_interrupt+0x28>
  40204e:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
  402052:	f012 0f20 	tst.w	r2, #32
  402056:	bf14      	ite	ne
  402058:	f8c0 10d4 	strne.w	r1, [r0, #212]	; 0xd4
  40205c:	f8c0 10d0 	streq.w	r1, [r0, #208]	; 0xd0
  402060:	f012 0f40 	tst.w	r2, #64	; 0x40
  402064:	bf14      	ite	ne
  402066:	f8c0 10c0 	strne.w	r1, [r0, #192]	; 0xc0
  40206a:	f8c0 10c4 	streq.w	r1, [r0, #196]	; 0xc4
  40206e:	4770      	bx	lr
  402070:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  402074:	4770      	bx	lr

00402076 <pio_enable_interrupt>:
  402076:	6401      	str	r1, [r0, #64]	; 0x40
  402078:	4770      	bx	lr

0040207a <pio_disable_interrupt>:
  40207a:	6441      	str	r1, [r0, #68]	; 0x44
  40207c:	4770      	bx	lr

0040207e <pio_get_interrupt_status>:
  40207e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
  402080:	4770      	bx	lr

00402082 <pio_get_interrupt_mask>:
  402082:	6c80      	ldr	r0, [r0, #72]	; 0x48
  402084:	4770      	bx	lr

00402086 <pio_get_pin_value>:
  402086:	0943      	lsrs	r3, r0, #5
  402088:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  40208c:	f203 7307 	addw	r3, r3, #1799	; 0x707
  402090:	025b      	lsls	r3, r3, #9
  402092:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
  402094:	f000 001f 	and.w	r0, r0, #31
  402098:	fa23 f000 	lsr.w	r0, r3, r0
  40209c:	f000 0001 	and.w	r0, r0, #1
  4020a0:	4770      	bx	lr
	...

004020a4 <pio_configure_pin>:
  4020a4:	b570      	push	{r4, r5, r6, lr}
  4020a6:	b082      	sub	sp, #8
  4020a8:	460d      	mov	r5, r1
  4020aa:	0943      	lsrs	r3, r0, #5
  4020ac:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  4020b0:	f203 7307 	addw	r3, r3, #1799	; 0x707
  4020b4:	025c      	lsls	r4, r3, #9
  4020b6:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
  4020ba:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  4020be:	d053      	beq.n	402168 <pio_configure_pin+0xc4>
  4020c0:	d80a      	bhi.n	4020d8 <pio_configure_pin+0x34>
  4020c2:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  4020c6:	d02d      	beq.n	402124 <pio_configure_pin+0x80>
  4020c8:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  4020cc:	d03b      	beq.n	402146 <pio_configure_pin+0xa2>
  4020ce:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  4020d2:	d015      	beq.n	402100 <pio_configure_pin+0x5c>
  4020d4:	2000      	movs	r0, #0
  4020d6:	e023      	b.n	402120 <pio_configure_pin+0x7c>
  4020d8:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  4020dc:	d055      	beq.n	40218a <pio_configure_pin+0xe6>
  4020de:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  4020e2:	d052      	beq.n	40218a <pio_configure_pin+0xe6>
  4020e4:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  4020e8:	d1f4      	bne.n	4020d4 <pio_configure_pin+0x30>
  4020ea:	f000 011f 	and.w	r1, r0, #31
  4020ee:	2601      	movs	r6, #1
  4020f0:	462a      	mov	r2, r5
  4020f2:	fa06 f101 	lsl.w	r1, r6, r1
  4020f6:	4620      	mov	r0, r4
  4020f8:	4b2f      	ldr	r3, [pc, #188]	; (4021b8 <pio_configure_pin+0x114>)
  4020fa:	4798      	blx	r3
  4020fc:	4630      	mov	r0, r6
  4020fe:	e00f      	b.n	402120 <pio_configure_pin+0x7c>
  402100:	f000 001f 	and.w	r0, r0, #31
  402104:	2601      	movs	r6, #1
  402106:	4086      	lsls	r6, r0
  402108:	4632      	mov	r2, r6
  40210a:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40210e:	4620      	mov	r0, r4
  402110:	4b2a      	ldr	r3, [pc, #168]	; (4021bc <pio_configure_pin+0x118>)
  402112:	4798      	blx	r3
  402114:	f015 0f01 	tst.w	r5, #1
  402118:	bf14      	ite	ne
  40211a:	6666      	strne	r6, [r4, #100]	; 0x64
  40211c:	6626      	streq	r6, [r4, #96]	; 0x60
  40211e:	2001      	movs	r0, #1
  402120:	b002      	add	sp, #8
  402122:	bd70      	pop	{r4, r5, r6, pc}
  402124:	f000 001f 	and.w	r0, r0, #31
  402128:	2601      	movs	r6, #1
  40212a:	4086      	lsls	r6, r0
  40212c:	4632      	mov	r2, r6
  40212e:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  402132:	4620      	mov	r0, r4
  402134:	4b21      	ldr	r3, [pc, #132]	; (4021bc <pio_configure_pin+0x118>)
  402136:	4798      	blx	r3
  402138:	f015 0f01 	tst.w	r5, #1
  40213c:	bf14      	ite	ne
  40213e:	6666      	strne	r6, [r4, #100]	; 0x64
  402140:	6626      	streq	r6, [r4, #96]	; 0x60
  402142:	2001      	movs	r0, #1
  402144:	e7ec      	b.n	402120 <pio_configure_pin+0x7c>
  402146:	f000 001f 	and.w	r0, r0, #31
  40214a:	2601      	movs	r6, #1
  40214c:	4086      	lsls	r6, r0
  40214e:	4632      	mov	r2, r6
  402150:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  402154:	4620      	mov	r0, r4
  402156:	4b19      	ldr	r3, [pc, #100]	; (4021bc <pio_configure_pin+0x118>)
  402158:	4798      	blx	r3
  40215a:	f015 0f01 	tst.w	r5, #1
  40215e:	bf14      	ite	ne
  402160:	6666      	strne	r6, [r4, #100]	; 0x64
  402162:	6626      	streq	r6, [r4, #96]	; 0x60
  402164:	2001      	movs	r0, #1
  402166:	e7db      	b.n	402120 <pio_configure_pin+0x7c>
  402168:	f000 001f 	and.w	r0, r0, #31
  40216c:	2601      	movs	r6, #1
  40216e:	4086      	lsls	r6, r0
  402170:	4632      	mov	r2, r6
  402172:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  402176:	4620      	mov	r0, r4
  402178:	4b10      	ldr	r3, [pc, #64]	; (4021bc <pio_configure_pin+0x118>)
  40217a:	4798      	blx	r3
  40217c:	f015 0f01 	tst.w	r5, #1
  402180:	bf14      	ite	ne
  402182:	6666      	strne	r6, [r4, #100]	; 0x64
  402184:	6626      	streq	r6, [r4, #96]	; 0x60
  402186:	2001      	movs	r0, #1
  402188:	e7ca      	b.n	402120 <pio_configure_pin+0x7c>
  40218a:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
  40218e:	f000 011f 	and.w	r1, r0, #31
  402192:	2601      	movs	r6, #1
  402194:	ea05 0306 	and.w	r3, r5, r6
  402198:	9300      	str	r3, [sp, #0]
  40219a:	f3c5 0380 	ubfx	r3, r5, #2, #1
  40219e:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  4021a2:	bf14      	ite	ne
  4021a4:	2200      	movne	r2, #0
  4021a6:	2201      	moveq	r2, #1
  4021a8:	fa06 f101 	lsl.w	r1, r6, r1
  4021ac:	4620      	mov	r0, r4
  4021ae:	4c04      	ldr	r4, [pc, #16]	; (4021c0 <pio_configure_pin+0x11c>)
  4021b0:	47a0      	blx	r4
  4021b2:	4630      	mov	r0, r6
  4021b4:	e7b4      	b.n	402120 <pio_configure_pin+0x7c>
  4021b6:	bf00      	nop
  4021b8:	00401f63 	.word	0x00401f63
  4021bc:	00401ed3 	.word	0x00401ed3
  4021c0:	00401f95 	.word	0x00401f95

004021c4 <pio_configure_pin_group>:
  4021c4:	b570      	push	{r4, r5, r6, lr}
  4021c6:	b082      	sub	sp, #8
  4021c8:	4605      	mov	r5, r0
  4021ca:	460e      	mov	r6, r1
  4021cc:	4614      	mov	r4, r2
  4021ce:	f002 43f0 	and.w	r3, r2, #2013265920	; 0x78000000
  4021d2:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  4021d6:	d03d      	beq.n	402254 <pio_configure_pin_group+0x90>
  4021d8:	d80a      	bhi.n	4021f0 <pio_configure_pin_group+0x2c>
  4021da:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  4021de:	d021      	beq.n	402224 <pio_configure_pin_group+0x60>
  4021e0:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  4021e4:	d02a      	beq.n	40223c <pio_configure_pin_group+0x78>
  4021e6:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  4021ea:	d00e      	beq.n	40220a <pio_configure_pin_group+0x46>
  4021ec:	2000      	movs	r0, #0
  4021ee:	e017      	b.n	402220 <pio_configure_pin_group+0x5c>
  4021f0:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  4021f4:	d03a      	beq.n	40226c <pio_configure_pin_group+0xa8>
  4021f6:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  4021fa:	d037      	beq.n	40226c <pio_configure_pin_group+0xa8>
  4021fc:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  402200:	d1f4      	bne.n	4021ec <pio_configure_pin_group+0x28>
  402202:	4b23      	ldr	r3, [pc, #140]	; (402290 <pio_configure_pin_group+0xcc>)
  402204:	4798      	blx	r3
  402206:	2001      	movs	r0, #1
  402208:	e00a      	b.n	402220 <pio_configure_pin_group+0x5c>
  40220a:	460a      	mov	r2, r1
  40220c:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  402210:	4b20      	ldr	r3, [pc, #128]	; (402294 <pio_configure_pin_group+0xd0>)
  402212:	4798      	blx	r3
  402214:	f014 0f01 	tst.w	r4, #1
  402218:	bf14      	ite	ne
  40221a:	666e      	strne	r6, [r5, #100]	; 0x64
  40221c:	662e      	streq	r6, [r5, #96]	; 0x60
  40221e:	2001      	movs	r0, #1
  402220:	b002      	add	sp, #8
  402222:	bd70      	pop	{r4, r5, r6, pc}
  402224:	460a      	mov	r2, r1
  402226:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40222a:	4b1a      	ldr	r3, [pc, #104]	; (402294 <pio_configure_pin_group+0xd0>)
  40222c:	4798      	blx	r3
  40222e:	f014 0f01 	tst.w	r4, #1
  402232:	bf14      	ite	ne
  402234:	666e      	strne	r6, [r5, #100]	; 0x64
  402236:	662e      	streq	r6, [r5, #96]	; 0x60
  402238:	2001      	movs	r0, #1
  40223a:	e7f1      	b.n	402220 <pio_configure_pin_group+0x5c>
  40223c:	460a      	mov	r2, r1
  40223e:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  402242:	4b14      	ldr	r3, [pc, #80]	; (402294 <pio_configure_pin_group+0xd0>)
  402244:	4798      	blx	r3
  402246:	f014 0f01 	tst.w	r4, #1
  40224a:	bf14      	ite	ne
  40224c:	666e      	strne	r6, [r5, #100]	; 0x64
  40224e:	662e      	streq	r6, [r5, #96]	; 0x60
  402250:	2001      	movs	r0, #1
  402252:	e7e5      	b.n	402220 <pio_configure_pin_group+0x5c>
  402254:	460a      	mov	r2, r1
  402256:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  40225a:	4b0e      	ldr	r3, [pc, #56]	; (402294 <pio_configure_pin_group+0xd0>)
  40225c:	4798      	blx	r3
  40225e:	f014 0f01 	tst.w	r4, #1
  402262:	bf14      	ite	ne
  402264:	666e      	strne	r6, [r5, #100]	; 0x64
  402266:	662e      	streq	r6, [r5, #96]	; 0x60
  402268:	2001      	movs	r0, #1
  40226a:	e7d9      	b.n	402220 <pio_configure_pin_group+0x5c>
  40226c:	f004 5260 	and.w	r2, r4, #939524096	; 0x38000000
  402270:	f004 0301 	and.w	r3, r4, #1
  402274:	9300      	str	r3, [sp, #0]
  402276:	f3c4 0380 	ubfx	r3, r4, #2, #1
  40227a:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  40227e:	bf14      	ite	ne
  402280:	2200      	movne	r2, #0
  402282:	2201      	moveq	r2, #1
  402284:	4631      	mov	r1, r6
  402286:	4628      	mov	r0, r5
  402288:	4c03      	ldr	r4, [pc, #12]	; (402298 <pio_configure_pin_group+0xd4>)
  40228a:	47a0      	blx	r4
  40228c:	2001      	movs	r0, #1
  40228e:	e7c7      	b.n	402220 <pio_configure_pin_group+0x5c>
  402290:	00401f63 	.word	0x00401f63
  402294:	00401ed3 	.word	0x00401ed3
  402298:	00401f95 	.word	0x00401f95

0040229c <pio_handler_process>:
  40229c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4022a0:	4681      	mov	r9, r0
  4022a2:	460f      	mov	r7, r1
  4022a4:	4b12      	ldr	r3, [pc, #72]	; (4022f0 <pio_handler_process+0x54>)
  4022a6:	4798      	blx	r3
  4022a8:	4605      	mov	r5, r0
  4022aa:	4648      	mov	r0, r9
  4022ac:	4b11      	ldr	r3, [pc, #68]	; (4022f4 <pio_handler_process+0x58>)
  4022ae:	4798      	blx	r3
  4022b0:	4005      	ands	r5, r0
  4022b2:	d013      	beq.n	4022dc <pio_handler_process+0x40>
  4022b4:	4c10      	ldr	r4, [pc, #64]	; (4022f8 <pio_handler_process+0x5c>)
  4022b6:	f104 0660 	add.w	r6, r4, #96	; 0x60
  4022ba:	e003      	b.n	4022c4 <pio_handler_process+0x28>
  4022bc:	42b4      	cmp	r4, r6
  4022be:	d00d      	beq.n	4022dc <pio_handler_process+0x40>
  4022c0:	3410      	adds	r4, #16
  4022c2:	b15d      	cbz	r5, 4022dc <pio_handler_process+0x40>
  4022c4:	6820      	ldr	r0, [r4, #0]
  4022c6:	42b8      	cmp	r0, r7
  4022c8:	d1f8      	bne.n	4022bc <pio_handler_process+0x20>
  4022ca:	6861      	ldr	r1, [r4, #4]
  4022cc:	4229      	tst	r1, r5
  4022ce:	d0f5      	beq.n	4022bc <pio_handler_process+0x20>
  4022d0:	68e3      	ldr	r3, [r4, #12]
  4022d2:	4798      	blx	r3
  4022d4:	6863      	ldr	r3, [r4, #4]
  4022d6:	ea25 0503 	bic.w	r5, r5, r3
  4022da:	e7ef      	b.n	4022bc <pio_handler_process+0x20>
  4022dc:	4b07      	ldr	r3, [pc, #28]	; (4022fc <pio_handler_process+0x60>)
  4022de:	681b      	ldr	r3, [r3, #0]
  4022e0:	b123      	cbz	r3, 4022ec <pio_handler_process+0x50>
  4022e2:	4b07      	ldr	r3, [pc, #28]	; (402300 <pio_handler_process+0x64>)
  4022e4:	681b      	ldr	r3, [r3, #0]
  4022e6:	b10b      	cbz	r3, 4022ec <pio_handler_process+0x50>
  4022e8:	4648      	mov	r0, r9
  4022ea:	4798      	blx	r3
  4022ec:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4022f0:	0040207f 	.word	0x0040207f
  4022f4:	00402083 	.word	0x00402083
  4022f8:	20000afc 	.word	0x20000afc
  4022fc:	20000ba4 	.word	0x20000ba4
  402300:	20000b70 	.word	0x20000b70

00402304 <pio_handler_set>:
  402304:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  402306:	4c18      	ldr	r4, [pc, #96]	; (402368 <pio_handler_set+0x64>)
  402308:	6826      	ldr	r6, [r4, #0]
  40230a:	2e06      	cmp	r6, #6
  40230c:	d829      	bhi.n	402362 <pio_handler_set+0x5e>
  40230e:	f04f 0c00 	mov.w	ip, #0
  402312:	4664      	mov	r4, ip
  402314:	4f15      	ldr	r7, [pc, #84]	; (40236c <pio_handler_set+0x68>)
  402316:	e004      	b.n	402322 <pio_handler_set+0x1e>
  402318:	3401      	adds	r4, #1
  40231a:	b2e4      	uxtb	r4, r4
  40231c:	46a4      	mov	ip, r4
  40231e:	42a6      	cmp	r6, r4
  402320:	d309      	bcc.n	402336 <pio_handler_set+0x32>
  402322:	46a6      	mov	lr, r4
  402324:	0125      	lsls	r5, r4, #4
  402326:	597d      	ldr	r5, [r7, r5]
  402328:	428d      	cmp	r5, r1
  40232a:	d1f5      	bne.n	402318 <pio_handler_set+0x14>
  40232c:	eb07 1504 	add.w	r5, r7, r4, lsl #4
  402330:	686d      	ldr	r5, [r5, #4]
  402332:	4295      	cmp	r5, r2
  402334:	d1f0      	bne.n	402318 <pio_handler_set+0x14>
  402336:	4d0d      	ldr	r5, [pc, #52]	; (40236c <pio_handler_set+0x68>)
  402338:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
  40233c:	eb05 040e 	add.w	r4, r5, lr
  402340:	f845 100e 	str.w	r1, [r5, lr]
  402344:	6062      	str	r2, [r4, #4]
  402346:	60a3      	str	r3, [r4, #8]
  402348:	9906      	ldr	r1, [sp, #24]
  40234a:	60e1      	str	r1, [r4, #12]
  40234c:	3601      	adds	r6, #1
  40234e:	4566      	cmp	r6, ip
  402350:	bf04      	itt	eq
  402352:	4905      	ldreq	r1, [pc, #20]	; (402368 <pio_handler_set+0x64>)
  402354:	600e      	streq	r6, [r1, #0]
  402356:	4611      	mov	r1, r2
  402358:	461a      	mov	r2, r3
  40235a:	4b05      	ldr	r3, [pc, #20]	; (402370 <pio_handler_set+0x6c>)
  40235c:	4798      	blx	r3
  40235e:	2000      	movs	r0, #0
  402360:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402362:	2001      	movs	r0, #1
  402364:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402366:	bf00      	nop
  402368:	20000b6c 	.word	0x20000b6c
  40236c:	20000afc 	.word	0x20000afc
  402370:	00402049 	.word	0x00402049

00402374 <PIOA_Handler>:
  402374:	b508      	push	{r3, lr}
  402376:	210b      	movs	r1, #11
  402378:	4801      	ldr	r0, [pc, #4]	; (402380 <PIOA_Handler+0xc>)
  40237a:	4b02      	ldr	r3, [pc, #8]	; (402384 <PIOA_Handler+0x10>)
  40237c:	4798      	blx	r3
  40237e:	bd08      	pop	{r3, pc}
  402380:	400e0e00 	.word	0x400e0e00
  402384:	0040229d 	.word	0x0040229d

00402388 <PIOB_Handler>:
  402388:	b508      	push	{r3, lr}
  40238a:	210c      	movs	r1, #12
  40238c:	4801      	ldr	r0, [pc, #4]	; (402394 <PIOB_Handler+0xc>)
  40238e:	4b02      	ldr	r3, [pc, #8]	; (402398 <PIOB_Handler+0x10>)
  402390:	4798      	blx	r3
  402392:	bd08      	pop	{r3, pc}
  402394:	400e1000 	.word	0x400e1000
  402398:	0040229d 	.word	0x0040229d

0040239c <PIOC_Handler>:
  40239c:	b508      	push	{r3, lr}
  40239e:	210d      	movs	r1, #13
  4023a0:	4801      	ldr	r0, [pc, #4]	; (4023a8 <PIOC_Handler+0xc>)
  4023a2:	4b02      	ldr	r3, [pc, #8]	; (4023ac <PIOC_Handler+0x10>)
  4023a4:	4798      	blx	r3
  4023a6:	bd08      	pop	{r3, pc}
  4023a8:	400e1200 	.word	0x400e1200
  4023ac:	0040229d 	.word	0x0040229d

004023b0 <pio_handler_set_priority>:
  4023b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4023b2:	4605      	mov	r5, r0
  4023b4:	460c      	mov	r4, r1
  4023b6:	4617      	mov	r7, r2
  4023b8:	4b18      	ldr	r3, [pc, #96]	; (40241c <pio_handler_set_priority+0x6c>)
  4023ba:	4798      	blx	r3
  4023bc:	4606      	mov	r6, r0
  4023be:	f04f 31ff 	mov.w	r1, #4294967295
  4023c2:	4628      	mov	r0, r5
  4023c4:	4b16      	ldr	r3, [pc, #88]	; (402420 <pio_handler_set_priority+0x70>)
  4023c6:	4798      	blx	r3
  4023c8:	4628      	mov	r0, r5
  4023ca:	4b16      	ldr	r3, [pc, #88]	; (402424 <pio_handler_set_priority+0x74>)
  4023cc:	4798      	blx	r3
  4023ce:	b2e2      	uxtb	r2, r4
  4023d0:	f002 031f 	and.w	r3, r2, #31
  4023d4:	2101      	movs	r1, #1
  4023d6:	4099      	lsls	r1, r3
  4023d8:	0963      	lsrs	r3, r4, #5
  4023da:	009b      	lsls	r3, r3, #2
  4023dc:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
  4023e0:	f503 4361 	add.w	r3, r3, #57600	; 0xe100
  4023e4:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80
  4023e8:	f8c3 1180 	str.w	r1, [r3, #384]	; 0x180
  4023ec:	2c00      	cmp	r4, #0
  4023ee:	db0d      	blt.n	40240c <pio_handler_set_priority+0x5c>
  4023f0:	013f      	lsls	r7, r7, #4
  4023f2:	b2ff      	uxtb	r7, r7
  4023f4:	f104 4460 	add.w	r4, r4, #3758096384	; 0xe0000000
  4023f8:	f504 4461 	add.w	r4, r4, #57600	; 0xe100
  4023fc:	f884 7300 	strb.w	r7, [r4, #768]	; 0x300
  402400:	6019      	str	r1, [r3, #0]
  402402:	4631      	mov	r1, r6
  402404:	4628      	mov	r0, r5
  402406:	4b08      	ldr	r3, [pc, #32]	; (402428 <pio_handler_set_priority+0x78>)
  402408:	4798      	blx	r3
  40240a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40240c:	f002 020f 	and.w	r2, r2, #15
  402410:	013f      	lsls	r7, r7, #4
  402412:	b2ff      	uxtb	r7, r7
  402414:	4805      	ldr	r0, [pc, #20]	; (40242c <pio_handler_set_priority+0x7c>)
  402416:	5487      	strb	r7, [r0, r2]
  402418:	e7f2      	b.n	402400 <pio_handler_set_priority+0x50>
  40241a:	bf00      	nop
  40241c:	00402083 	.word	0x00402083
  402420:	0040207b 	.word	0x0040207b
  402424:	0040207f 	.word	0x0040207f
  402428:	00402077 	.word	0x00402077
  40242c:	e000ed14 	.word	0xe000ed14

00402430 <pmc_switch_mck_to_pllack>:
  402430:	4a17      	ldr	r2, [pc, #92]	; (402490 <pmc_switch_mck_to_pllack+0x60>)
  402432:	6b13      	ldr	r3, [r2, #48]	; 0x30
  402434:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  402438:	4318      	orrs	r0, r3
  40243a:	6310      	str	r0, [r2, #48]	; 0x30
  40243c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40243e:	f013 0f08 	tst.w	r3, #8
  402442:	d10a      	bne.n	40245a <pmc_switch_mck_to_pllack+0x2a>
  402444:	f44f 6300 	mov.w	r3, #2048	; 0x800
  402448:	4911      	ldr	r1, [pc, #68]	; (402490 <pmc_switch_mck_to_pllack+0x60>)
  40244a:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  40244c:	f012 0f08 	tst.w	r2, #8
  402450:	d103      	bne.n	40245a <pmc_switch_mck_to_pllack+0x2a>
  402452:	3b01      	subs	r3, #1
  402454:	d1f9      	bne.n	40244a <pmc_switch_mck_to_pllack+0x1a>
  402456:	2001      	movs	r0, #1
  402458:	4770      	bx	lr
  40245a:	4a0d      	ldr	r2, [pc, #52]	; (402490 <pmc_switch_mck_to_pllack+0x60>)
  40245c:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40245e:	f023 0303 	bic.w	r3, r3, #3
  402462:	f043 0302 	orr.w	r3, r3, #2
  402466:	6313      	str	r3, [r2, #48]	; 0x30
  402468:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40246a:	f013 0f08 	tst.w	r3, #8
  40246e:	d10a      	bne.n	402486 <pmc_switch_mck_to_pllack+0x56>
  402470:	f44f 6300 	mov.w	r3, #2048	; 0x800
  402474:	4906      	ldr	r1, [pc, #24]	; (402490 <pmc_switch_mck_to_pllack+0x60>)
  402476:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  402478:	f012 0f08 	tst.w	r2, #8
  40247c:	d105      	bne.n	40248a <pmc_switch_mck_to_pllack+0x5a>
  40247e:	3b01      	subs	r3, #1
  402480:	d1f9      	bne.n	402476 <pmc_switch_mck_to_pllack+0x46>
  402482:	2001      	movs	r0, #1
  402484:	4770      	bx	lr
  402486:	2000      	movs	r0, #0
  402488:	4770      	bx	lr
  40248a:	2000      	movs	r0, #0
  40248c:	4770      	bx	lr
  40248e:	bf00      	nop
  402490:	400e0400 	.word	0x400e0400

00402494 <pmc_switch_sclk_to_32kxtal>:
  402494:	2801      	cmp	r0, #1
  402496:	d003      	beq.n	4024a0 <pmc_switch_sclk_to_32kxtal+0xc>
  402498:	4a05      	ldr	r2, [pc, #20]	; (4024b0 <pmc_switch_sclk_to_32kxtal+0x1c>)
  40249a:	4b06      	ldr	r3, [pc, #24]	; (4024b4 <pmc_switch_sclk_to_32kxtal+0x20>)
  40249c:	601a      	str	r2, [r3, #0]
  40249e:	4770      	bx	lr
  4024a0:	4a04      	ldr	r2, [pc, #16]	; (4024b4 <pmc_switch_sclk_to_32kxtal+0x20>)
  4024a2:	6893      	ldr	r3, [r2, #8]
  4024a4:	f043 4325 	orr.w	r3, r3, #2768240640	; 0xa5000000
  4024a8:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  4024ac:	6093      	str	r3, [r2, #8]
  4024ae:	e7f3      	b.n	402498 <pmc_switch_sclk_to_32kxtal+0x4>
  4024b0:	a5000008 	.word	0xa5000008
  4024b4:	400e1410 	.word	0x400e1410

004024b8 <pmc_osc_is_ready_32kxtal>:
  4024b8:	4b05      	ldr	r3, [pc, #20]	; (4024d0 <pmc_osc_is_ready_32kxtal+0x18>)
  4024ba:	695b      	ldr	r3, [r3, #20]
  4024bc:	f013 0f80 	tst.w	r3, #128	; 0x80
  4024c0:	bf1d      	ittte	ne
  4024c2:	4b04      	ldrne	r3, [pc, #16]	; (4024d4 <pmc_osc_is_ready_32kxtal+0x1c>)
  4024c4:	6e98      	ldrne	r0, [r3, #104]	; 0x68
  4024c6:	f3c0 10c0 	ubfxne	r0, r0, #7, #1
  4024ca:	2000      	moveq	r0, #0
  4024cc:	4770      	bx	lr
  4024ce:	bf00      	nop
  4024d0:	400e1410 	.word	0x400e1410
  4024d4:	400e0400 	.word	0x400e0400

004024d8 <pmc_switch_mainck_to_xtal>:
  4024d8:	b9c8      	cbnz	r0, 40250e <pmc_switch_mainck_to_xtal+0x36>
  4024da:	4a11      	ldr	r2, [pc, #68]	; (402520 <pmc_switch_mainck_to_xtal+0x48>)
  4024dc:	6a13      	ldr	r3, [r2, #32]
  4024de:	0209      	lsls	r1, r1, #8
  4024e0:	b289      	uxth	r1, r1
  4024e2:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  4024e6:	f023 0303 	bic.w	r3, r3, #3
  4024ea:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  4024ee:	f043 0301 	orr.w	r3, r3, #1
  4024f2:	430b      	orrs	r3, r1
  4024f4:	6213      	str	r3, [r2, #32]
  4024f6:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4024f8:	f013 0f01 	tst.w	r3, #1
  4024fc:	d0fb      	beq.n	4024f6 <pmc_switch_mainck_to_xtal+0x1e>
  4024fe:	4a08      	ldr	r2, [pc, #32]	; (402520 <pmc_switch_mainck_to_xtal+0x48>)
  402500:	6a13      	ldr	r3, [r2, #32]
  402502:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  402506:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  40250a:	6213      	str	r3, [r2, #32]
  40250c:	4770      	bx	lr
  40250e:	4904      	ldr	r1, [pc, #16]	; (402520 <pmc_switch_mainck_to_xtal+0x48>)
  402510:	6a0b      	ldr	r3, [r1, #32]
  402512:	4a04      	ldr	r2, [pc, #16]	; (402524 <pmc_switch_mainck_to_xtal+0x4c>)
  402514:	401a      	ands	r2, r3
  402516:	4b04      	ldr	r3, [pc, #16]	; (402528 <pmc_switch_mainck_to_xtal+0x50>)
  402518:	4313      	orrs	r3, r2
  40251a:	620b      	str	r3, [r1, #32]
  40251c:	4770      	bx	lr
  40251e:	bf00      	nop
  402520:	400e0400 	.word	0x400e0400
  402524:	fec8fffc 	.word	0xfec8fffc
  402528:	01370002 	.word	0x01370002

0040252c <pmc_osc_is_ready_mainck>:
  40252c:	4b02      	ldr	r3, [pc, #8]	; (402538 <pmc_osc_is_ready_mainck+0xc>)
  40252e:	6e98      	ldr	r0, [r3, #104]	; 0x68
  402530:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  402534:	4770      	bx	lr
  402536:	bf00      	nop
  402538:	400e0400 	.word	0x400e0400

0040253c <pmc_disable_pllack>:
  40253c:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  402540:	4b01      	ldr	r3, [pc, #4]	; (402548 <pmc_disable_pllack+0xc>)
  402542:	629a      	str	r2, [r3, #40]	; 0x28
  402544:	4770      	bx	lr
  402546:	bf00      	nop
  402548:	400e0400 	.word	0x400e0400

0040254c <pmc_is_locked_pllack>:
  40254c:	4b02      	ldr	r3, [pc, #8]	; (402558 <pmc_is_locked_pllack+0xc>)
  40254e:	6e98      	ldr	r0, [r3, #104]	; 0x68
  402550:	f000 0002 	and.w	r0, r0, #2
  402554:	4770      	bx	lr
  402556:	bf00      	nop
  402558:	400e0400 	.word	0x400e0400

0040255c <pmc_enable_periph_clk>:
  40255c:	2822      	cmp	r0, #34	; 0x22
  40255e:	d81e      	bhi.n	40259e <pmc_enable_periph_clk+0x42>
  402560:	281f      	cmp	r0, #31
  402562:	d80c      	bhi.n	40257e <pmc_enable_periph_clk+0x22>
  402564:	4b11      	ldr	r3, [pc, #68]	; (4025ac <pmc_enable_periph_clk+0x50>)
  402566:	699a      	ldr	r2, [r3, #24]
  402568:	2301      	movs	r3, #1
  40256a:	4083      	lsls	r3, r0
  40256c:	4393      	bics	r3, r2
  40256e:	d018      	beq.n	4025a2 <pmc_enable_periph_clk+0x46>
  402570:	2301      	movs	r3, #1
  402572:	fa03 f000 	lsl.w	r0, r3, r0
  402576:	4b0d      	ldr	r3, [pc, #52]	; (4025ac <pmc_enable_periph_clk+0x50>)
  402578:	6118      	str	r0, [r3, #16]
  40257a:	2000      	movs	r0, #0
  40257c:	4770      	bx	lr
  40257e:	3820      	subs	r0, #32
  402580:	4b0a      	ldr	r3, [pc, #40]	; (4025ac <pmc_enable_periph_clk+0x50>)
  402582:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  402586:	2301      	movs	r3, #1
  402588:	4083      	lsls	r3, r0
  40258a:	4393      	bics	r3, r2
  40258c:	d00b      	beq.n	4025a6 <pmc_enable_periph_clk+0x4a>
  40258e:	2301      	movs	r3, #1
  402590:	fa03 f000 	lsl.w	r0, r3, r0
  402594:	4b05      	ldr	r3, [pc, #20]	; (4025ac <pmc_enable_periph_clk+0x50>)
  402596:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
  40259a:	2000      	movs	r0, #0
  40259c:	4770      	bx	lr
  40259e:	2001      	movs	r0, #1
  4025a0:	4770      	bx	lr
  4025a2:	2000      	movs	r0, #0
  4025a4:	4770      	bx	lr
  4025a6:	2000      	movs	r0, #0
  4025a8:	4770      	bx	lr
  4025aa:	bf00      	nop
  4025ac:	400e0400 	.word	0x400e0400

004025b0 <rtc_set_hour_mode>:
  4025b0:	b921      	cbnz	r1, 4025bc <rtc_set_hour_mode+0xc>
  4025b2:	6843      	ldr	r3, [r0, #4]
  4025b4:	f023 0301 	bic.w	r3, r3, #1
  4025b8:	6043      	str	r3, [r0, #4]
  4025ba:	4770      	bx	lr
  4025bc:	6843      	ldr	r3, [r0, #4]
  4025be:	f043 0301 	orr.w	r3, r3, #1
  4025c2:	6043      	str	r3, [r0, #4]
  4025c4:	4770      	bx	lr

004025c6 <rtc_get_time>:
  4025c6:	b430      	push	{r4, r5}
  4025c8:	6885      	ldr	r5, [r0, #8]
  4025ca:	6884      	ldr	r4, [r0, #8]
  4025cc:	42a5      	cmp	r5, r4
  4025ce:	d003      	beq.n	4025d8 <rtc_get_time+0x12>
  4025d0:	6885      	ldr	r5, [r0, #8]
  4025d2:	6884      	ldr	r4, [r0, #8]
  4025d4:	42ac      	cmp	r4, r5
  4025d6:	d1fb      	bne.n	4025d0 <rtc_get_time+0xa>
  4025d8:	b161      	cbz	r1, 4025f4 <rtc_get_time+0x2e>
  4025da:	f3c4 5001 	ubfx	r0, r4, #20, #2
  4025de:	eb00 0580 	add.w	r5, r0, r0, lsl #2
  4025e2:	f3c4 4003 	ubfx	r0, r4, #16, #4
  4025e6:	eb00 0045 	add.w	r0, r0, r5, lsl #1
  4025ea:	f414 0f80 	tst.w	r4, #4194304	; 0x400000
  4025ee:	bf18      	it	ne
  4025f0:	300c      	addne	r0, #12
  4025f2:	6008      	str	r0, [r1, #0]
  4025f4:	b142      	cbz	r2, 402608 <rtc_get_time+0x42>
  4025f6:	f3c4 3102 	ubfx	r1, r4, #12, #3
  4025fa:	eb01 0181 	add.w	r1, r1, r1, lsl #2
  4025fe:	f3c4 2003 	ubfx	r0, r4, #8, #4
  402602:	eb00 0141 	add.w	r1, r0, r1, lsl #1
  402606:	6011      	str	r1, [r2, #0]
  402608:	b143      	cbz	r3, 40261c <rtc_get_time+0x56>
  40260a:	f3c4 1202 	ubfx	r2, r4, #4, #3
  40260e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
  402612:	f004 040f 	and.w	r4, r4, #15
  402616:	eb04 0442 	add.w	r4, r4, r2, lsl #1
  40261a:	601c      	str	r4, [r3, #0]
  40261c:	bc30      	pop	{r4, r5}
  40261e:	4770      	bx	lr

00402620 <rtc_set_time>:
  402620:	b4f0      	push	{r4, r5, r6, r7}
  402622:	6844      	ldr	r4, [r0, #4]
  402624:	f014 0f01 	tst.w	r4, #1
  402628:	d005      	beq.n	402636 <rtc_set_time+0x16>
  40262a:	290c      	cmp	r1, #12
  40262c:	d93d      	bls.n	4026aa <rtc_set_time+0x8a>
  40262e:	390c      	subs	r1, #12
  402630:	f44f 0780 	mov.w	r7, #4194304	; 0x400000
  402634:	e000      	b.n	402638 <rtc_set_time+0x18>
  402636:	2700      	movs	r7, #0
  402638:	4c1d      	ldr	r4, [pc, #116]	; (4026b0 <rtc_set_time+0x90>)
  40263a:	fba4 5603 	umull	r5, r6, r4, r3
  40263e:	08f6      	lsrs	r6, r6, #3
  402640:	eb06 0586 	add.w	r5, r6, r6, lsl #2
  402644:	eba3 0345 	sub.w	r3, r3, r5, lsl #1
  402648:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
  40264c:	fba4 6502 	umull	r6, r5, r4, r2
  402650:	08ed      	lsrs	r5, r5, #3
  402652:	ea43 3305 	orr.w	r3, r3, r5, lsl #12
  402656:	eb05 0585 	add.w	r5, r5, r5, lsl #2
  40265a:	eba2 0545 	sub.w	r5, r2, r5, lsl #1
  40265e:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
  402662:	433b      	orrs	r3, r7
  402664:	fba4 4201 	umull	r4, r2, r4, r1
  402668:	08d2      	lsrs	r2, r2, #3
  40266a:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
  40266e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
  402672:	eba1 0142 	sub.w	r1, r1, r2, lsl #1
  402676:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
  40267a:	6983      	ldr	r3, [r0, #24]
  40267c:	f013 0f04 	tst.w	r3, #4
  402680:	d0fb      	beq.n	40267a <rtc_set_time+0x5a>
  402682:	6803      	ldr	r3, [r0, #0]
  402684:	f043 0301 	orr.w	r3, r3, #1
  402688:	6003      	str	r3, [r0, #0]
  40268a:	6983      	ldr	r3, [r0, #24]
  40268c:	f013 0f01 	tst.w	r3, #1
  402690:	d0fb      	beq.n	40268a <rtc_set_time+0x6a>
  402692:	2301      	movs	r3, #1
  402694:	61c3      	str	r3, [r0, #28]
  402696:	6081      	str	r1, [r0, #8]
  402698:	6803      	ldr	r3, [r0, #0]
  40269a:	f023 0301 	bic.w	r3, r3, #1
  40269e:	6003      	str	r3, [r0, #0]
  4026a0:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
  4026a2:	f000 0001 	and.w	r0, r0, #1
  4026a6:	bcf0      	pop	{r4, r5, r6, r7}
  4026a8:	4770      	bx	lr
  4026aa:	2700      	movs	r7, #0
  4026ac:	e7c4      	b.n	402638 <rtc_set_time+0x18>
  4026ae:	bf00      	nop
  4026b0:	cccccccd 	.word	0xcccccccd

004026b4 <rtc_get_date>:
  4026b4:	b4f0      	push	{r4, r5, r6, r7}
  4026b6:	9e04      	ldr	r6, [sp, #16]
  4026b8:	68c5      	ldr	r5, [r0, #12]
  4026ba:	68c4      	ldr	r4, [r0, #12]
  4026bc:	42a5      	cmp	r5, r4
  4026be:	d003      	beq.n	4026c8 <rtc_get_date+0x14>
  4026c0:	68c5      	ldr	r5, [r0, #12]
  4026c2:	68c4      	ldr	r4, [r0, #12]
  4026c4:	42ac      	cmp	r4, r5
  4026c6:	d1fb      	bne.n	4026c0 <rtc_get_date+0xc>
  4026c8:	b199      	cbz	r1, 4026f2 <rtc_get_date+0x3e>
  4026ca:	f3c4 3003 	ubfx	r0, r4, #12, #4
  4026ce:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  4026d2:	f3c4 2703 	ubfx	r7, r4, #8, #4
  4026d6:	eb07 0740 	add.w	r7, r7, r0, lsl #1
  4026da:	f3c4 1002 	ubfx	r0, r4, #4, #3
  4026de:	eb00 0580 	add.w	r5, r0, r0, lsl #2
  4026e2:	f004 000f 	and.w	r0, r4, #15
  4026e6:	eb00 0045 	add.w	r0, r0, r5, lsl #1
  4026ea:	2564      	movs	r5, #100	; 0x64
  4026ec:	fb05 7000 	mla	r0, r5, r0, r7
  4026f0:	6008      	str	r0, [r1, #0]
  4026f2:	b142      	cbz	r2, 402706 <rtc_get_date+0x52>
  4026f4:	f3c4 5000 	ubfx	r0, r4, #20, #1
  4026f8:	0081      	lsls	r1, r0, #2
  4026fa:	4408      	add	r0, r1
  4026fc:	f3c4 4103 	ubfx	r1, r4, #16, #4
  402700:	eb01 0140 	add.w	r1, r1, r0, lsl #1
  402704:	6011      	str	r1, [r2, #0]
  402706:	b143      	cbz	r3, 40271a <rtc_get_date+0x66>
  402708:	f3c4 7201 	ubfx	r2, r4, #28, #2
  40270c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
  402710:	f3c4 6103 	ubfx	r1, r4, #24, #4
  402714:	eb01 0242 	add.w	r2, r1, r2, lsl #1
  402718:	601a      	str	r2, [r3, #0]
  40271a:	b116      	cbz	r6, 402722 <rtc_get_date+0x6e>
  40271c:	f3c4 5442 	ubfx	r4, r4, #21, #3
  402720:	6034      	str	r4, [r6, #0]
  402722:	bcf0      	pop	{r4, r5, r6, r7}
  402724:	4770      	bx	lr
	...

00402728 <rtc_set_date>:
  402728:	b470      	push	{r4, r5, r6}
  40272a:	4d2a      	ldr	r5, [pc, #168]	; (4027d4 <rtc_set_date+0xac>)
  40272c:	fba5 4603 	umull	r4, r6, r5, r3
  402730:	08f6      	lsrs	r6, r6, #3
  402732:	9c03      	ldr	r4, [sp, #12]
  402734:	0564      	lsls	r4, r4, #21
  402736:	ea44 7406 	orr.w	r4, r4, r6, lsl #28
  40273a:	eb06 0686 	add.w	r6, r6, r6, lsl #2
  40273e:	eba3 0346 	sub.w	r3, r3, r6, lsl #1
  402742:	ea44 6303 	orr.w	r3, r4, r3, lsl #24
  402746:	fba5 6402 	umull	r6, r4, r5, r2
  40274a:	08e4      	lsrs	r4, r4, #3
  40274c:	ea43 5304 	orr.w	r3, r3, r4, lsl #20
  402750:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  402754:	eba2 0244 	sub.w	r2, r2, r4, lsl #1
  402758:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
  40275c:	4b1e      	ldr	r3, [pc, #120]	; (4027d8 <rtc_set_date+0xb0>)
  40275e:	fba3 4301 	umull	r4, r3, r3, r1
  402762:	099b      	lsrs	r3, r3, #6
  402764:	ea42 1203 	orr.w	r2, r2, r3, lsl #4
  402768:	4b1c      	ldr	r3, [pc, #112]	; (4027dc <rtc_set_date+0xb4>)
  40276a:	fba3 4301 	umull	r4, r3, r3, r1
  40276e:	095b      	lsrs	r3, r3, #5
  402770:	fba5 6403 	umull	r6, r4, r5, r3
  402774:	08e4      	lsrs	r4, r4, #3
  402776:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  40277a:	eba3 0344 	sub.w	r3, r3, r4, lsl #1
  40277e:	431a      	orrs	r2, r3
  402780:	fba5 4301 	umull	r4, r3, r5, r1
  402784:	08db      	lsrs	r3, r3, #3
  402786:	eb03 0483 	add.w	r4, r3, r3, lsl #2
  40278a:	eba1 0144 	sub.w	r1, r1, r4, lsl #1
  40278e:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  402792:	fba5 1503 	umull	r1, r5, r5, r3
  402796:	08ed      	lsrs	r5, r5, #3
  402798:	eb05 0585 	add.w	r5, r5, r5, lsl #2
  40279c:	eba3 0545 	sub.w	r5, r3, r5, lsl #1
  4027a0:	ea42 3205 	orr.w	r2, r2, r5, lsl #12
  4027a4:	6983      	ldr	r3, [r0, #24]
  4027a6:	f013 0f04 	tst.w	r3, #4
  4027aa:	d0fb      	beq.n	4027a4 <rtc_set_date+0x7c>
  4027ac:	6803      	ldr	r3, [r0, #0]
  4027ae:	f043 0302 	orr.w	r3, r3, #2
  4027b2:	6003      	str	r3, [r0, #0]
  4027b4:	6983      	ldr	r3, [r0, #24]
  4027b6:	f013 0f01 	tst.w	r3, #1
  4027ba:	d0fb      	beq.n	4027b4 <rtc_set_date+0x8c>
  4027bc:	2301      	movs	r3, #1
  4027be:	61c3      	str	r3, [r0, #28]
  4027c0:	60c2      	str	r2, [r0, #12]
  4027c2:	6803      	ldr	r3, [r0, #0]
  4027c4:	f023 0302 	bic.w	r3, r3, #2
  4027c8:	6003      	str	r3, [r0, #0]
  4027ca:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
  4027cc:	f000 0002 	and.w	r0, r0, #2
  4027d0:	bc70      	pop	{r4, r5, r6}
  4027d2:	4770      	bx	lr
  4027d4:	cccccccd 	.word	0xcccccccd
  4027d8:	10624dd3 	.word	0x10624dd3
  4027dc:	51eb851f 	.word	0x51eb851f

004027e0 <spi_enable_clock>:
  4027e0:	b508      	push	{r3, lr}
  4027e2:	2015      	movs	r0, #21
  4027e4:	4b01      	ldr	r3, [pc, #4]	; (4027ec <spi_enable_clock+0xc>)
  4027e6:	4798      	blx	r3
  4027e8:	bd08      	pop	{r3, pc}
  4027ea:	bf00      	nop
  4027ec:	0040255d 	.word	0x0040255d

004027f0 <spi_set_peripheral_chip_select_value>:
  4027f0:	6843      	ldr	r3, [r0, #4]
  4027f2:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  4027f6:	6043      	str	r3, [r0, #4]
  4027f8:	6843      	ldr	r3, [r0, #4]
  4027fa:	0409      	lsls	r1, r1, #16
  4027fc:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  402800:	4319      	orrs	r1, r3
  402802:	6041      	str	r1, [r0, #4]
  402804:	4770      	bx	lr

00402806 <spi_set_delay_between_chip_select>:
  402806:	6843      	ldr	r3, [r0, #4]
  402808:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
  40280c:	6043      	str	r3, [r0, #4]
  40280e:	6843      	ldr	r3, [r0, #4]
  402810:	ea43 6101 	orr.w	r1, r3, r1, lsl #24
  402814:	6041      	str	r1, [r0, #4]
  402816:	4770      	bx	lr

00402818 <spi_set_clock_polarity>:
  402818:	b932      	cbnz	r2, 402828 <spi_set_clock_polarity+0x10>
  40281a:	eb00 0081 	add.w	r0, r0, r1, lsl #2
  40281e:	6b03      	ldr	r3, [r0, #48]	; 0x30
  402820:	f023 0301 	bic.w	r3, r3, #1
  402824:	6303      	str	r3, [r0, #48]	; 0x30
  402826:	4770      	bx	lr
  402828:	eb00 0081 	add.w	r0, r0, r1, lsl #2
  40282c:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40282e:	f043 0301 	orr.w	r3, r3, #1
  402832:	6303      	str	r3, [r0, #48]	; 0x30
  402834:	4770      	bx	lr

00402836 <spi_set_clock_phase>:
  402836:	b932      	cbnz	r2, 402846 <spi_set_clock_phase+0x10>
  402838:	eb00 0081 	add.w	r0, r0, r1, lsl #2
  40283c:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40283e:	f023 0302 	bic.w	r3, r3, #2
  402842:	6303      	str	r3, [r0, #48]	; 0x30
  402844:	4770      	bx	lr
  402846:	eb00 0081 	add.w	r0, r0, r1, lsl #2
  40284a:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40284c:	f043 0302 	orr.w	r3, r3, #2
  402850:	6303      	str	r3, [r0, #48]	; 0x30
  402852:	4770      	bx	lr

00402854 <spi_configure_cs_behavior>:
  402854:	2a04      	cmp	r2, #4
  402856:	d003      	beq.n	402860 <spi_configure_cs_behavior+0xc>
  402858:	b16a      	cbz	r2, 402876 <spi_configure_cs_behavior+0x22>
  40285a:	2a08      	cmp	r2, #8
  40285c:	d016      	beq.n	40288c <spi_configure_cs_behavior+0x38>
  40285e:	4770      	bx	lr
  402860:	eb00 0081 	add.w	r0, r0, r1, lsl #2
  402864:	6b03      	ldr	r3, [r0, #48]	; 0x30
  402866:	f023 0308 	bic.w	r3, r3, #8
  40286a:	6303      	str	r3, [r0, #48]	; 0x30
  40286c:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40286e:	f043 0304 	orr.w	r3, r3, #4
  402872:	6303      	str	r3, [r0, #48]	; 0x30
  402874:	4770      	bx	lr
  402876:	eb00 0081 	add.w	r0, r0, r1, lsl #2
  40287a:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40287c:	f023 0308 	bic.w	r3, r3, #8
  402880:	6303      	str	r3, [r0, #48]	; 0x30
  402882:	6b03      	ldr	r3, [r0, #48]	; 0x30
  402884:	f023 0304 	bic.w	r3, r3, #4
  402888:	6303      	str	r3, [r0, #48]	; 0x30
  40288a:	4770      	bx	lr
  40288c:	eb00 0081 	add.w	r0, r0, r1, lsl #2
  402890:	6b03      	ldr	r3, [r0, #48]	; 0x30
  402892:	f043 0308 	orr.w	r3, r3, #8
  402896:	6303      	str	r3, [r0, #48]	; 0x30
  402898:	e7e1      	b.n	40285e <spi_configure_cs_behavior+0xa>

0040289a <spi_set_bits_per_transfer>:
  40289a:	eb00 0181 	add.w	r1, r0, r1, lsl #2
  40289e:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4028a0:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  4028a4:	630b      	str	r3, [r1, #48]	; 0x30
  4028a6:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4028a8:	431a      	orrs	r2, r3
  4028aa:	630a      	str	r2, [r1, #48]	; 0x30
  4028ac:	4770      	bx	lr

004028ae <spi_calc_baudrate_div>:
  4028ae:	1e43      	subs	r3, r0, #1
  4028b0:	4419      	add	r1, r3
  4028b2:	fbb1 f0f0 	udiv	r0, r1, r0
  4028b6:	1e43      	subs	r3, r0, #1
  4028b8:	2bfe      	cmp	r3, #254	; 0xfe
  4028ba:	bf94      	ite	ls
  4028bc:	b200      	sxthls	r0, r0
  4028be:	f04f 30ff 	movhi.w	r0, #4294967295
  4028c2:	4770      	bx	lr

004028c4 <spi_set_baudrate_div>:
  4028c4:	b172      	cbz	r2, 4028e4 <spi_set_baudrate_div+0x20>
  4028c6:	b410      	push	{r4}
  4028c8:	4614      	mov	r4, r2
  4028ca:	eb00 0181 	add.w	r1, r0, r1, lsl #2
  4028ce:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4028d0:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
  4028d4:	630b      	str	r3, [r1, #48]	; 0x30
  4028d6:	6b0a      	ldr	r2, [r1, #48]	; 0x30
  4028d8:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
  4028dc:	630a      	str	r2, [r1, #48]	; 0x30
  4028de:	2000      	movs	r0, #0
  4028e0:	bc10      	pop	{r4}
  4028e2:	4770      	bx	lr
  4028e4:	f04f 30ff 	mov.w	r0, #4294967295
  4028e8:	4770      	bx	lr

004028ea <spi_set_transfer_delay>:
  4028ea:	b410      	push	{r4}
  4028ec:	eb00 0181 	add.w	r1, r0, r1, lsl #2
  4028f0:	6b08      	ldr	r0, [r1, #48]	; 0x30
  4028f2:	b280      	uxth	r0, r0
  4028f4:	6308      	str	r0, [r1, #48]	; 0x30
  4028f6:	6b0c      	ldr	r4, [r1, #48]	; 0x30
  4028f8:	ea44 6303 	orr.w	r3, r4, r3, lsl #24
  4028fc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  402900:	630b      	str	r3, [r1, #48]	; 0x30
  402902:	bc10      	pop	{r4}
  402904:	4770      	bx	lr
	...

00402908 <twi_set_speed>:
  402908:	4b2a      	ldr	r3, [pc, #168]	; (4029b4 <twi_set_speed+0xac>)
  40290a:	4299      	cmp	r1, r3
  40290c:	d849      	bhi.n	4029a2 <twi_set_speed+0x9a>
  40290e:	f5a3 537a 	sub.w	r3, r3, #16000	; 0x3e80
  402912:	4299      	cmp	r1, r3
  402914:	d92b      	bls.n	40296e <twi_set_speed+0x66>
  402916:	b410      	push	{r4}
  402918:	4c27      	ldr	r4, [pc, #156]	; (4029b8 <twi_set_speed+0xb0>)
  40291a:	fba4 3402 	umull	r3, r4, r4, r2
  40291e:	0ba4      	lsrs	r4, r4, #14
  402920:	3c04      	subs	r4, #4
  402922:	4b26      	ldr	r3, [pc, #152]	; (4029bc <twi_set_speed+0xb4>)
  402924:	440b      	add	r3, r1
  402926:	009b      	lsls	r3, r3, #2
  402928:	fbb2 f2f3 	udiv	r2, r2, r3
  40292c:	3a04      	subs	r2, #4
  40292e:	2cff      	cmp	r4, #255	; 0xff
  402930:	d939      	bls.n	4029a6 <twi_set_speed+0x9e>
  402932:	2100      	movs	r1, #0
  402934:	3101      	adds	r1, #1
  402936:	0864      	lsrs	r4, r4, #1
  402938:	2cff      	cmp	r4, #255	; 0xff
  40293a:	d90d      	bls.n	402958 <twi_set_speed+0x50>
  40293c:	2907      	cmp	r1, #7
  40293e:	d1f9      	bne.n	402934 <twi_set_speed+0x2c>
  402940:	0213      	lsls	r3, r2, #8
  402942:	b29b      	uxth	r3, r3
  402944:	0409      	lsls	r1, r1, #16
  402946:	f401 21e0 	and.w	r1, r1, #458752	; 0x70000
  40294a:	430b      	orrs	r3, r1
  40294c:	b2e4      	uxtb	r4, r4
  40294e:	4323      	orrs	r3, r4
  402950:	6103      	str	r3, [r0, #16]
  402952:	2000      	movs	r0, #0
  402954:	bc10      	pop	{r4}
  402956:	4770      	bx	lr
  402958:	2aff      	cmp	r2, #255	; 0xff
  40295a:	d9f1      	bls.n	402940 <twi_set_speed+0x38>
  40295c:	2906      	cmp	r1, #6
  40295e:	d8ef      	bhi.n	402940 <twi_set_speed+0x38>
  402960:	3101      	adds	r1, #1
  402962:	0852      	lsrs	r2, r2, #1
  402964:	2aff      	cmp	r2, #255	; 0xff
  402966:	d9eb      	bls.n	402940 <twi_set_speed+0x38>
  402968:	2906      	cmp	r1, #6
  40296a:	d9f9      	bls.n	402960 <twi_set_speed+0x58>
  40296c:	e7e8      	b.n	402940 <twi_set_speed+0x38>
  40296e:	0049      	lsls	r1, r1, #1
  402970:	fbb2 f2f1 	udiv	r2, r2, r1
  402974:	3a04      	subs	r2, #4
  402976:	2aff      	cmp	r2, #255	; 0xff
  402978:	d911      	bls.n	40299e <twi_set_speed+0x96>
  40297a:	2300      	movs	r3, #0
  40297c:	3301      	adds	r3, #1
  40297e:	0852      	lsrs	r2, r2, #1
  402980:	2aff      	cmp	r2, #255	; 0xff
  402982:	d901      	bls.n	402988 <twi_set_speed+0x80>
  402984:	2b07      	cmp	r3, #7
  402986:	d1f9      	bne.n	40297c <twi_set_speed+0x74>
  402988:	0211      	lsls	r1, r2, #8
  40298a:	b289      	uxth	r1, r1
  40298c:	041b      	lsls	r3, r3, #16
  40298e:	f403 23e0 	and.w	r3, r3, #458752	; 0x70000
  402992:	430b      	orrs	r3, r1
  402994:	b2d2      	uxtb	r2, r2
  402996:	431a      	orrs	r2, r3
  402998:	6102      	str	r2, [r0, #16]
  40299a:	2000      	movs	r0, #0
  40299c:	4770      	bx	lr
  40299e:	2300      	movs	r3, #0
  4029a0:	e7f2      	b.n	402988 <twi_set_speed+0x80>
  4029a2:	2001      	movs	r0, #1
  4029a4:	4770      	bx	lr
  4029a6:	2aff      	cmp	r2, #255	; 0xff
  4029a8:	bf88      	it	hi
  4029aa:	2100      	movhi	r1, #0
  4029ac:	d8d8      	bhi.n	402960 <twi_set_speed+0x58>
  4029ae:	2100      	movs	r1, #0
  4029b0:	e7c6      	b.n	402940 <twi_set_speed+0x38>
  4029b2:	bf00      	nop
  4029b4:	00061a80 	.word	0x00061a80
  4029b8:	057619f1 	.word	0x057619f1
  4029bc:	3ffd1200 	.word	0x3ffd1200

004029c0 <twi_master_init>:
  4029c0:	b538      	push	{r3, r4, r5, lr}
  4029c2:	4604      	mov	r4, r0
  4029c4:	460d      	mov	r5, r1
  4029c6:	f04f 33ff 	mov.w	r3, #4294967295
  4029ca:	6283      	str	r3, [r0, #40]	; 0x28
  4029cc:	6a03      	ldr	r3, [r0, #32]
  4029ce:	2380      	movs	r3, #128	; 0x80
  4029d0:	6003      	str	r3, [r0, #0]
  4029d2:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4029d4:	2308      	movs	r3, #8
  4029d6:	6003      	str	r3, [r0, #0]
  4029d8:	2320      	movs	r3, #32
  4029da:	6003      	str	r3, [r0, #0]
  4029dc:	2304      	movs	r3, #4
  4029de:	6003      	str	r3, [r0, #0]
  4029e0:	680a      	ldr	r2, [r1, #0]
  4029e2:	6849      	ldr	r1, [r1, #4]
  4029e4:	4b05      	ldr	r3, [pc, #20]	; (4029fc <twi_master_init+0x3c>)
  4029e6:	4798      	blx	r3
  4029e8:	2801      	cmp	r0, #1
  4029ea:	bf14      	ite	ne
  4029ec:	2000      	movne	r0, #0
  4029ee:	2001      	moveq	r0, #1
  4029f0:	7a6b      	ldrb	r3, [r5, #9]
  4029f2:	2b01      	cmp	r3, #1
  4029f4:	bf04      	itt	eq
  4029f6:	2340      	moveq	r3, #64	; 0x40
  4029f8:	6023      	streq	r3, [r4, #0]
  4029fa:	bd38      	pop	{r3, r4, r5, pc}
  4029fc:	00402909 	.word	0x00402909

00402a00 <twi_mk_addr>:
  402a00:	460a      	mov	r2, r1
  402a02:	b159      	cbz	r1, 402a1c <twi_mk_addr+0x1c>
  402a04:	7803      	ldrb	r3, [r0, #0]
  402a06:	2901      	cmp	r1, #1
  402a08:	bfc4      	itt	gt
  402a0a:	7841      	ldrbgt	r1, [r0, #1]
  402a0c:	ea41 2303 	orrgt.w	r3, r1, r3, lsl #8
  402a10:	2a02      	cmp	r2, #2
  402a12:	dd04      	ble.n	402a1e <twi_mk_addr+0x1e>
  402a14:	7882      	ldrb	r2, [r0, #2]
  402a16:	ea42 2303 	orr.w	r3, r2, r3, lsl #8
  402a1a:	e000      	b.n	402a1e <twi_mk_addr+0x1e>
  402a1c:	2300      	movs	r3, #0
  402a1e:	4618      	mov	r0, r3
  402a20:	4770      	bx	lr
	...

00402a24 <twi_master_read>:
  402a24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  402a26:	68cc      	ldr	r4, [r1, #12]
  402a28:	2c00      	cmp	r4, #0
  402a2a:	d04f      	beq.n	402acc <twi_master_read+0xa8>
  402a2c:	460b      	mov	r3, r1
  402a2e:	4605      	mov	r5, r0
  402a30:	688e      	ldr	r6, [r1, #8]
  402a32:	2000      	movs	r0, #0
  402a34:	6068      	str	r0, [r5, #4]
  402a36:	684a      	ldr	r2, [r1, #4]
  402a38:	0212      	lsls	r2, r2, #8
  402a3a:	f402 7240 	and.w	r2, r2, #768	; 0x300
  402a3e:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
  402a42:	7c09      	ldrb	r1, [r1, #16]
  402a44:	0409      	lsls	r1, r1, #16
  402a46:	f401 01fe 	and.w	r1, r1, #8323072	; 0x7f0000
  402a4a:	430a      	orrs	r2, r1
  402a4c:	606a      	str	r2, [r5, #4]
  402a4e:	60e8      	str	r0, [r5, #12]
  402a50:	6859      	ldr	r1, [r3, #4]
  402a52:	4618      	mov	r0, r3
  402a54:	4b22      	ldr	r3, [pc, #136]	; (402ae0 <twi_master_read+0xbc>)
  402a56:	4798      	blx	r3
  402a58:	60e8      	str	r0, [r5, #12]
  402a5a:	2c01      	cmp	r4, #1
  402a5c:	d00f      	beq.n	402a7e <twi_master_read+0x5a>
  402a5e:	2301      	movs	r3, #1
  402a60:	602b      	str	r3, [r5, #0]
  402a62:	2000      	movs	r0, #0
  402a64:	6a2b      	ldr	r3, [r5, #32]
  402a66:	f413 7f80 	tst.w	r3, #256	; 0x100
  402a6a:	d136      	bne.n	402ada <twi_master_read+0xb6>
  402a6c:	f247 512f 	movw	r1, #29999	; 0x752f
  402a70:	f247 5730 	movw	r7, #30000	; 0x7530
  402a74:	f04f 0e01 	mov.w	lr, #1
  402a78:	f04f 0c02 	mov.w	ip, #2
  402a7c:	e019      	b.n	402ab2 <twi_master_read+0x8e>
  402a7e:	2303      	movs	r3, #3
  402a80:	602b      	str	r3, [r5, #0]
  402a82:	2001      	movs	r0, #1
  402a84:	e7ee      	b.n	402a64 <twi_master_read+0x40>
  402a86:	460a      	mov	r2, r1
  402a88:	4670      	mov	r0, lr
  402a8a:	e00c      	b.n	402aa6 <twi_master_read+0x82>
  402a8c:	b908      	cbnz	r0, 402a92 <twi_master_read+0x6e>
  402a8e:	f8c5 c000 	str.w	ip, [r5]
  402a92:	f013 0f02 	tst.w	r3, #2
  402a96:	d0f6      	beq.n	402a86 <twi_master_read+0x62>
  402a98:	4670      	mov	r0, lr
  402a9a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  402a9c:	7033      	strb	r3, [r6, #0]
  402a9e:	3c01      	subs	r4, #1
  402aa0:	3601      	adds	r6, #1
  402aa2:	463a      	mov	r2, r7
  402aa4:	b164      	cbz	r4, 402ac0 <twi_master_read+0x9c>
  402aa6:	6a2b      	ldr	r3, [r5, #32]
  402aa8:	f413 7f80 	tst.w	r3, #256	; 0x100
  402aac:	d111      	bne.n	402ad2 <twi_master_read+0xae>
  402aae:	1e51      	subs	r1, r2, #1
  402ab0:	b18a      	cbz	r2, 402ad6 <twi_master_read+0xb2>
  402ab2:	2c01      	cmp	r4, #1
  402ab4:	d0ea      	beq.n	402a8c <twi_master_read+0x68>
  402ab6:	f013 0f02 	tst.w	r3, #2
  402aba:	d1ee      	bne.n	402a9a <twi_master_read+0x76>
  402abc:	460a      	mov	r2, r1
  402abe:	e7f1      	b.n	402aa4 <twi_master_read+0x80>
  402ac0:	6a2b      	ldr	r3, [r5, #32]
  402ac2:	f013 0f01 	tst.w	r3, #1
  402ac6:	d0fb      	beq.n	402ac0 <twi_master_read+0x9c>
  402ac8:	6a2b      	ldr	r3, [r5, #32]
  402aca:	e000      	b.n	402ace <twi_master_read+0xaa>
  402acc:	2401      	movs	r4, #1
  402ace:	4620      	mov	r0, r4
  402ad0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402ad2:	2405      	movs	r4, #5
  402ad4:	e7fb      	b.n	402ace <twi_master_read+0xaa>
  402ad6:	2409      	movs	r4, #9
  402ad8:	e7f9      	b.n	402ace <twi_master_read+0xaa>
  402ada:	2405      	movs	r4, #5
  402adc:	e7f7      	b.n	402ace <twi_master_read+0xaa>
  402ade:	bf00      	nop
  402ae0:	00402a01 	.word	0x00402a01

00402ae4 <uart_init>:
  402ae4:	b410      	push	{r4}
  402ae6:	23ac      	movs	r3, #172	; 0xac
  402ae8:	6003      	str	r3, [r0, #0]
  402aea:	680b      	ldr	r3, [r1, #0]
  402aec:	684a      	ldr	r2, [r1, #4]
  402aee:	fbb3 f3f2 	udiv	r3, r3, r2
  402af2:	091b      	lsrs	r3, r3, #4
  402af4:	1e5c      	subs	r4, r3, #1
  402af6:	f64f 72fe 	movw	r2, #65534	; 0xfffe
  402afa:	4294      	cmp	r4, r2
  402afc:	d80b      	bhi.n	402b16 <uart_init+0x32>
  402afe:	6203      	str	r3, [r0, #32]
  402b00:	688b      	ldr	r3, [r1, #8]
  402b02:	6043      	str	r3, [r0, #4]
  402b04:	f240 2302 	movw	r3, #514	; 0x202
  402b08:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
  402b0c:	2350      	movs	r3, #80	; 0x50
  402b0e:	6003      	str	r3, [r0, #0]
  402b10:	2000      	movs	r0, #0
  402b12:	bc10      	pop	{r4}
  402b14:	4770      	bx	lr
  402b16:	2001      	movs	r0, #1
  402b18:	e7fb      	b.n	402b12 <uart_init+0x2e>

00402b1a <uart_enable_tx>:
  402b1a:	2340      	movs	r3, #64	; 0x40
  402b1c:	6003      	str	r3, [r0, #0]
  402b1e:	4770      	bx	lr

00402b20 <uart_enable_rx>:
  402b20:	2310      	movs	r3, #16
  402b22:	6003      	str	r3, [r0, #0]
  402b24:	4770      	bx	lr

00402b26 <uart_get_status>:
  402b26:	6940      	ldr	r0, [r0, #20]
  402b28:	4770      	bx	lr

00402b2a <uart_write>:
  402b2a:	6943      	ldr	r3, [r0, #20]
  402b2c:	f013 0f02 	tst.w	r3, #2
  402b30:	bf1a      	itte	ne
  402b32:	61c1      	strne	r1, [r0, #28]
  402b34:	2000      	movne	r0, #0
  402b36:	2001      	moveq	r0, #1
  402b38:	4770      	bx	lr

00402b3a <uart_read>:
  402b3a:	6943      	ldr	r3, [r0, #20]
  402b3c:	f013 0f01 	tst.w	r3, #1
  402b40:	bf1d      	ittte	ne
  402b42:	6983      	ldrne	r3, [r0, #24]
  402b44:	700b      	strbne	r3, [r1, #0]
  402b46:	2000      	movne	r0, #0
  402b48:	2001      	moveq	r0, #1
  402b4a:	4770      	bx	lr

00402b4c <usart_set_async_baudrate>:
  402b4c:	b410      	push	{r4}
  402b4e:	010b      	lsls	r3, r1, #4
  402b50:	4293      	cmp	r3, r2
  402b52:	d914      	bls.n	402b7e <usart_set_async_baudrate+0x32>
  402b54:	00c9      	lsls	r1, r1, #3
  402b56:	084b      	lsrs	r3, r1, #1
  402b58:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
  402b5c:	fbb2 f2f1 	udiv	r2, r2, r1
  402b60:	08d3      	lsrs	r3, r2, #3
  402b62:	1e5c      	subs	r4, r3, #1
  402b64:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  402b68:	428c      	cmp	r4, r1
  402b6a:	d901      	bls.n	402b70 <usart_set_async_baudrate+0x24>
  402b6c:	2001      	movs	r0, #1
  402b6e:	e017      	b.n	402ba0 <usart_set_async_baudrate+0x54>
  402b70:	6841      	ldr	r1, [r0, #4]
  402b72:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
  402b76:	6041      	str	r1, [r0, #4]
  402b78:	e00c      	b.n	402b94 <usart_set_async_baudrate+0x48>
  402b7a:	2001      	movs	r0, #1
  402b7c:	e010      	b.n	402ba0 <usart_set_async_baudrate+0x54>
  402b7e:	0859      	lsrs	r1, r3, #1
  402b80:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
  402b84:	fbb2 f2f3 	udiv	r2, r2, r3
  402b88:	08d3      	lsrs	r3, r2, #3
  402b8a:	1e5c      	subs	r4, r3, #1
  402b8c:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  402b90:	428c      	cmp	r4, r1
  402b92:	d8f2      	bhi.n	402b7a <usart_set_async_baudrate+0x2e>
  402b94:	0412      	lsls	r2, r2, #16
  402b96:	f402 22e0 	and.w	r2, r2, #458752	; 0x70000
  402b9a:	431a      	orrs	r2, r3
  402b9c:	6202      	str	r2, [r0, #32]
  402b9e:	2000      	movs	r0, #0
  402ba0:	bc10      	pop	{r4}
  402ba2:	4770      	bx	lr

00402ba4 <usart_reset>:
  402ba4:	4b0a      	ldr	r3, [pc, #40]	; (402bd0 <usart_reset+0x2c>)
  402ba6:	f8c0 30e4 	str.w	r3, [r0, #228]	; 0xe4
  402baa:	2300      	movs	r3, #0
  402bac:	6043      	str	r3, [r0, #4]
  402bae:	6243      	str	r3, [r0, #36]	; 0x24
  402bb0:	6283      	str	r3, [r0, #40]	; 0x28
  402bb2:	2388      	movs	r3, #136	; 0x88
  402bb4:	6003      	str	r3, [r0, #0]
  402bb6:	2324      	movs	r3, #36	; 0x24
  402bb8:	6003      	str	r3, [r0, #0]
  402bba:	f44f 7380 	mov.w	r3, #256	; 0x100
  402bbe:	6003      	str	r3, [r0, #0]
  402bc0:	f44f 2300 	mov.w	r3, #524288	; 0x80000
  402bc4:	6003      	str	r3, [r0, #0]
  402bc6:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  402bca:	6003      	str	r3, [r0, #0]
  402bcc:	4770      	bx	lr
  402bce:	bf00      	nop
  402bd0:	55534100 	.word	0x55534100

00402bd4 <usart_init_rs232>:
  402bd4:	b570      	push	{r4, r5, r6, lr}
  402bd6:	4605      	mov	r5, r0
  402bd8:	460c      	mov	r4, r1
  402bda:	4616      	mov	r6, r2
  402bdc:	4b0f      	ldr	r3, [pc, #60]	; (402c1c <usart_init_rs232+0x48>)
  402bde:	4798      	blx	r3
  402be0:	2200      	movs	r2, #0
  402be2:	4b0f      	ldr	r3, [pc, #60]	; (402c20 <usart_init_rs232+0x4c>)
  402be4:	601a      	str	r2, [r3, #0]
  402be6:	b1a4      	cbz	r4, 402c12 <usart_init_rs232+0x3e>
  402be8:	4632      	mov	r2, r6
  402bea:	6821      	ldr	r1, [r4, #0]
  402bec:	4628      	mov	r0, r5
  402bee:	4b0d      	ldr	r3, [pc, #52]	; (402c24 <usart_init_rs232+0x50>)
  402bf0:	4798      	blx	r3
  402bf2:	4602      	mov	r2, r0
  402bf4:	b978      	cbnz	r0, 402c16 <usart_init_rs232+0x42>
  402bf6:	6863      	ldr	r3, [r4, #4]
  402bf8:	68a1      	ldr	r1, [r4, #8]
  402bfa:	430b      	orrs	r3, r1
  402bfc:	6921      	ldr	r1, [r4, #16]
  402bfe:	430b      	orrs	r3, r1
  402c00:	68e1      	ldr	r1, [r4, #12]
  402c02:	430b      	orrs	r3, r1
  402c04:	4906      	ldr	r1, [pc, #24]	; (402c20 <usart_init_rs232+0x4c>)
  402c06:	600b      	str	r3, [r1, #0]
  402c08:	6869      	ldr	r1, [r5, #4]
  402c0a:	430b      	orrs	r3, r1
  402c0c:	606b      	str	r3, [r5, #4]
  402c0e:	4610      	mov	r0, r2
  402c10:	bd70      	pop	{r4, r5, r6, pc}
  402c12:	2201      	movs	r2, #1
  402c14:	e7fb      	b.n	402c0e <usart_init_rs232+0x3a>
  402c16:	2201      	movs	r2, #1
  402c18:	e7f9      	b.n	402c0e <usart_init_rs232+0x3a>
  402c1a:	bf00      	nop
  402c1c:	00402ba5 	.word	0x00402ba5
  402c20:	20000b74 	.word	0x20000b74
  402c24:	00402b4d 	.word	0x00402b4d

00402c28 <usart_enable_tx>:
  402c28:	2340      	movs	r3, #64	; 0x40
  402c2a:	6003      	str	r3, [r0, #0]
  402c2c:	4770      	bx	lr

00402c2e <usart_enable_rx>:
  402c2e:	2310      	movs	r3, #16
  402c30:	6003      	str	r3, [r0, #0]
  402c32:	4770      	bx	lr

00402c34 <usart_get_status>:
  402c34:	6940      	ldr	r0, [r0, #20]
  402c36:	4770      	bx	lr

00402c38 <usart_write>:
  402c38:	6943      	ldr	r3, [r0, #20]
  402c3a:	f013 0f02 	tst.w	r3, #2
  402c3e:	bf1d      	ittte	ne
  402c40:	f3c1 0108 	ubfxne	r1, r1, #0, #9
  402c44:	61c1      	strne	r1, [r0, #28]
  402c46:	2000      	movne	r0, #0
  402c48:	2001      	moveq	r0, #1
  402c4a:	4770      	bx	lr

00402c4c <usart_read>:
  402c4c:	6943      	ldr	r3, [r0, #20]
  402c4e:	f013 0f01 	tst.w	r3, #1
  402c52:	d005      	beq.n	402c60 <usart_read+0x14>
  402c54:	6983      	ldr	r3, [r0, #24]
  402c56:	f3c3 0308 	ubfx	r3, r3, #0, #9
  402c5a:	600b      	str	r3, [r1, #0]
  402c5c:	2000      	movs	r0, #0
  402c5e:	4770      	bx	lr
  402c60:	2001      	movs	r0, #1
  402c62:	4770      	bx	lr

00402c64 <wdt_disable>:
  402c64:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  402c68:	6043      	str	r3, [r0, #4]
  402c6a:	4770      	bx	lr

00402c6c <Dummy_Handler>:
  402c6c:	e7fe      	b.n	402c6c <Dummy_Handler>
	...

00402c70 <Reset_Handler>:
  402c70:	b508      	push	{r3, lr}
  402c72:	4b21      	ldr	r3, [pc, #132]	; (402cf8 <Reset_Handler+0x88>)
  402c74:	4a21      	ldr	r2, [pc, #132]	; (402cfc <Reset_Handler+0x8c>)
  402c76:	429a      	cmp	r2, r3
  402c78:	d928      	bls.n	402ccc <Reset_Handler+0x5c>
  402c7a:	4b21      	ldr	r3, [pc, #132]	; (402d00 <Reset_Handler+0x90>)
  402c7c:	4a1e      	ldr	r2, [pc, #120]	; (402cf8 <Reset_Handler+0x88>)
  402c7e:	429a      	cmp	r2, r3
  402c80:	d20c      	bcs.n	402c9c <Reset_Handler+0x2c>
  402c82:	3b01      	subs	r3, #1
  402c84:	1a9b      	subs	r3, r3, r2
  402c86:	f023 0303 	bic.w	r3, r3, #3
  402c8a:	3304      	adds	r3, #4
  402c8c:	4413      	add	r3, r2
  402c8e:	491b      	ldr	r1, [pc, #108]	; (402cfc <Reset_Handler+0x8c>)
  402c90:	f851 0b04 	ldr.w	r0, [r1], #4
  402c94:	f842 0b04 	str.w	r0, [r2], #4
  402c98:	429a      	cmp	r2, r3
  402c9a:	d1f9      	bne.n	402c90 <Reset_Handler+0x20>
  402c9c:	bf00      	nop
  402c9e:	4b19      	ldr	r3, [pc, #100]	; (402d04 <Reset_Handler+0x94>)
  402ca0:	4a19      	ldr	r2, [pc, #100]	; (402d08 <Reset_Handler+0x98>)
  402ca2:	429a      	cmp	r2, r3
  402ca4:	d20a      	bcs.n	402cbc <Reset_Handler+0x4c>
  402ca6:	3b01      	subs	r3, #1
  402ca8:	1a9b      	subs	r3, r3, r2
  402caa:	f023 0303 	bic.w	r3, r3, #3
  402cae:	3304      	adds	r3, #4
  402cb0:	4413      	add	r3, r2
  402cb2:	2100      	movs	r1, #0
  402cb4:	f842 1b04 	str.w	r1, [r2], #4
  402cb8:	429a      	cmp	r2, r3
  402cba:	d1fb      	bne.n	402cb4 <Reset_Handler+0x44>
  402cbc:	4b13      	ldr	r3, [pc, #76]	; (402d0c <Reset_Handler+0x9c>)
  402cbe:	4a14      	ldr	r2, [pc, #80]	; (402d10 <Reset_Handler+0xa0>)
  402cc0:	609a      	str	r2, [r3, #8]
  402cc2:	4b14      	ldr	r3, [pc, #80]	; (402d14 <Reset_Handler+0xa4>)
  402cc4:	4798      	blx	r3
  402cc6:	4b14      	ldr	r3, [pc, #80]	; (402d18 <Reset_Handler+0xa8>)
  402cc8:	4798      	blx	r3
  402cca:	e7fe      	b.n	402cca <Reset_Handler+0x5a>
  402ccc:	4b0a      	ldr	r3, [pc, #40]	; (402cf8 <Reset_Handler+0x88>)
  402cce:	4a0b      	ldr	r2, [pc, #44]	; (402cfc <Reset_Handler+0x8c>)
  402cd0:	429a      	cmp	r2, r3
  402cd2:	d2e3      	bcs.n	402c9c <Reset_Handler+0x2c>
  402cd4:	4b0a      	ldr	r3, [pc, #40]	; (402d00 <Reset_Handler+0x90>)
  402cd6:	4808      	ldr	r0, [pc, #32]	; (402cf8 <Reset_Handler+0x88>)
  402cd8:	1a18      	subs	r0, r3, r0
  402cda:	4611      	mov	r1, r2
  402cdc:	3a04      	subs	r2, #4
  402cde:	4402      	add	r2, r0
  402ce0:	2800      	cmp	r0, #0
  402ce2:	d0db      	beq.n	402c9c <Reset_Handler+0x2c>
  402ce4:	f1c1 0104 	rsb	r1, r1, #4
  402ce8:	f852 0904 	ldr.w	r0, [r2], #-4
  402cec:	f843 0d04 	str.w	r0, [r3, #-4]!
  402cf0:	42ca      	cmn	r2, r1
  402cf2:	d1f9      	bne.n	402ce8 <Reset_Handler+0x78>
  402cf4:	e7d2      	b.n	402c9c <Reset_Handler+0x2c>
  402cf6:	bf00      	nop
  402cf8:	20000000 	.word	0x20000000
  402cfc:	00403f30 	.word	0x00403f30
  402d00:	20000884 	.word	0x20000884
  402d04:	20000c14 	.word	0x20000c14
  402d08:	20000884 	.word	0x20000884
  402d0c:	e000ed00 	.word	0xe000ed00
  402d10:	00400000 	.word	0x00400000
  402d14:	00403c41 	.word	0x00403c41
  402d18:	00402efd 	.word	0x00402efd

00402d1c <SystemCoreClockUpdate>:
  402d1c:	4b3c      	ldr	r3, [pc, #240]	; (402e10 <SystemCoreClockUpdate+0xf4>)
  402d1e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  402d20:	f003 0303 	and.w	r3, r3, #3
  402d24:	2b03      	cmp	r3, #3
  402d26:	d80e      	bhi.n	402d46 <SystemCoreClockUpdate+0x2a>
  402d28:	e8df f003 	tbb	[pc, r3]
  402d2c:	38381c02 	.word	0x38381c02
  402d30:	4b38      	ldr	r3, [pc, #224]	; (402e14 <SystemCoreClockUpdate+0xf8>)
  402d32:	695b      	ldr	r3, [r3, #20]
  402d34:	f013 0f80 	tst.w	r3, #128	; 0x80
  402d38:	bf14      	ite	ne
  402d3a:	f44f 4200 	movne.w	r2, #32768	; 0x8000
  402d3e:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  402d42:	4b35      	ldr	r3, [pc, #212]	; (402e18 <SystemCoreClockUpdate+0xfc>)
  402d44:	601a      	str	r2, [r3, #0]
  402d46:	4b32      	ldr	r3, [pc, #200]	; (402e10 <SystemCoreClockUpdate+0xf4>)
  402d48:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  402d4a:	f003 0370 	and.w	r3, r3, #112	; 0x70
  402d4e:	2b70      	cmp	r3, #112	; 0x70
  402d50:	d055      	beq.n	402dfe <SystemCoreClockUpdate+0xe2>
  402d52:	4b2f      	ldr	r3, [pc, #188]	; (402e10 <SystemCoreClockUpdate+0xf4>)
  402d54:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  402d56:	4930      	ldr	r1, [pc, #192]	; (402e18 <SystemCoreClockUpdate+0xfc>)
  402d58:	f3c2 1202 	ubfx	r2, r2, #4, #3
  402d5c:	680b      	ldr	r3, [r1, #0]
  402d5e:	40d3      	lsrs	r3, r2
  402d60:	600b      	str	r3, [r1, #0]
  402d62:	4770      	bx	lr
  402d64:	4b2a      	ldr	r3, [pc, #168]	; (402e10 <SystemCoreClockUpdate+0xf4>)
  402d66:	6a1b      	ldr	r3, [r3, #32]
  402d68:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  402d6c:	d003      	beq.n	402d76 <SystemCoreClockUpdate+0x5a>
  402d6e:	4a2b      	ldr	r2, [pc, #172]	; (402e1c <SystemCoreClockUpdate+0x100>)
  402d70:	4b29      	ldr	r3, [pc, #164]	; (402e18 <SystemCoreClockUpdate+0xfc>)
  402d72:	601a      	str	r2, [r3, #0]
  402d74:	e7e7      	b.n	402d46 <SystemCoreClockUpdate+0x2a>
  402d76:	4a2a      	ldr	r2, [pc, #168]	; (402e20 <SystemCoreClockUpdate+0x104>)
  402d78:	4b27      	ldr	r3, [pc, #156]	; (402e18 <SystemCoreClockUpdate+0xfc>)
  402d7a:	601a      	str	r2, [r3, #0]
  402d7c:	4b24      	ldr	r3, [pc, #144]	; (402e10 <SystemCoreClockUpdate+0xf4>)
  402d7e:	6a1b      	ldr	r3, [r3, #32]
  402d80:	f003 0370 	and.w	r3, r3, #112	; 0x70
  402d84:	2b10      	cmp	r3, #16
  402d86:	d005      	beq.n	402d94 <SystemCoreClockUpdate+0x78>
  402d88:	2b20      	cmp	r3, #32
  402d8a:	d1dc      	bne.n	402d46 <SystemCoreClockUpdate+0x2a>
  402d8c:	4a23      	ldr	r2, [pc, #140]	; (402e1c <SystemCoreClockUpdate+0x100>)
  402d8e:	4b22      	ldr	r3, [pc, #136]	; (402e18 <SystemCoreClockUpdate+0xfc>)
  402d90:	601a      	str	r2, [r3, #0]
  402d92:	e7d8      	b.n	402d46 <SystemCoreClockUpdate+0x2a>
  402d94:	4a23      	ldr	r2, [pc, #140]	; (402e24 <SystemCoreClockUpdate+0x108>)
  402d96:	4b20      	ldr	r3, [pc, #128]	; (402e18 <SystemCoreClockUpdate+0xfc>)
  402d98:	601a      	str	r2, [r3, #0]
  402d9a:	e7d4      	b.n	402d46 <SystemCoreClockUpdate+0x2a>
  402d9c:	4b1c      	ldr	r3, [pc, #112]	; (402e10 <SystemCoreClockUpdate+0xf4>)
  402d9e:	6a1b      	ldr	r3, [r3, #32]
  402da0:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  402da4:	d018      	beq.n	402dd8 <SystemCoreClockUpdate+0xbc>
  402da6:	4a1d      	ldr	r2, [pc, #116]	; (402e1c <SystemCoreClockUpdate+0x100>)
  402da8:	4b1b      	ldr	r3, [pc, #108]	; (402e18 <SystemCoreClockUpdate+0xfc>)
  402daa:	601a      	str	r2, [r3, #0]
  402dac:	4b18      	ldr	r3, [pc, #96]	; (402e10 <SystemCoreClockUpdate+0xf4>)
  402dae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  402db0:	f003 0303 	and.w	r3, r3, #3
  402db4:	2b02      	cmp	r3, #2
  402db6:	4a16      	ldr	r2, [pc, #88]	; (402e10 <SystemCoreClockUpdate+0xf4>)
  402db8:	bf07      	ittee	eq
  402dba:	6a91      	ldreq	r1, [r2, #40]	; 0x28
  402dbc:	6a92      	ldreq	r2, [r2, #40]	; 0x28
  402dbe:	6ad1      	ldrne	r1, [r2, #44]	; 0x2c
  402dc0:	6ad2      	ldrne	r2, [r2, #44]	; 0x2c
  402dc2:	4815      	ldr	r0, [pc, #84]	; (402e18 <SystemCoreClockUpdate+0xfc>)
  402dc4:	f3c1 410a 	ubfx	r1, r1, #16, #11
  402dc8:	6803      	ldr	r3, [r0, #0]
  402dca:	fb01 3303 	mla	r3, r1, r3, r3
  402dce:	b2d2      	uxtb	r2, r2
  402dd0:	fbb3 f3f2 	udiv	r3, r3, r2
  402dd4:	6003      	str	r3, [r0, #0]
  402dd6:	e7b6      	b.n	402d46 <SystemCoreClockUpdate+0x2a>
  402dd8:	4a11      	ldr	r2, [pc, #68]	; (402e20 <SystemCoreClockUpdate+0x104>)
  402dda:	4b0f      	ldr	r3, [pc, #60]	; (402e18 <SystemCoreClockUpdate+0xfc>)
  402ddc:	601a      	str	r2, [r3, #0]
  402dde:	4b0c      	ldr	r3, [pc, #48]	; (402e10 <SystemCoreClockUpdate+0xf4>)
  402de0:	6a1b      	ldr	r3, [r3, #32]
  402de2:	f003 0370 	and.w	r3, r3, #112	; 0x70
  402de6:	2b10      	cmp	r3, #16
  402de8:	d005      	beq.n	402df6 <SystemCoreClockUpdate+0xda>
  402dea:	2b20      	cmp	r3, #32
  402dec:	d1de      	bne.n	402dac <SystemCoreClockUpdate+0x90>
  402dee:	4a0b      	ldr	r2, [pc, #44]	; (402e1c <SystemCoreClockUpdate+0x100>)
  402df0:	4b09      	ldr	r3, [pc, #36]	; (402e18 <SystemCoreClockUpdate+0xfc>)
  402df2:	601a      	str	r2, [r3, #0]
  402df4:	e7da      	b.n	402dac <SystemCoreClockUpdate+0x90>
  402df6:	4a0b      	ldr	r2, [pc, #44]	; (402e24 <SystemCoreClockUpdate+0x108>)
  402df8:	4b07      	ldr	r3, [pc, #28]	; (402e18 <SystemCoreClockUpdate+0xfc>)
  402dfa:	601a      	str	r2, [r3, #0]
  402dfc:	e7d6      	b.n	402dac <SystemCoreClockUpdate+0x90>
  402dfe:	4a06      	ldr	r2, [pc, #24]	; (402e18 <SystemCoreClockUpdate+0xfc>)
  402e00:	6813      	ldr	r3, [r2, #0]
  402e02:	4909      	ldr	r1, [pc, #36]	; (402e28 <SystemCoreClockUpdate+0x10c>)
  402e04:	fba1 1303 	umull	r1, r3, r1, r3
  402e08:	085b      	lsrs	r3, r3, #1
  402e0a:	6013      	str	r3, [r2, #0]
  402e0c:	4770      	bx	lr
  402e0e:	bf00      	nop
  402e10:	400e0400 	.word	0x400e0400
  402e14:	400e1410 	.word	0x400e1410
  402e18:	20000450 	.word	0x20000450
  402e1c:	00b71b00 	.word	0x00b71b00
  402e20:	003d0900 	.word	0x003d0900
  402e24:	007a1200 	.word	0x007a1200
  402e28:	aaaaaaab 	.word	0xaaaaaaab

00402e2c <system_init_flash>:
  402e2c:	4b1a      	ldr	r3, [pc, #104]	; (402e98 <system_init_flash+0x6c>)
  402e2e:	4298      	cmp	r0, r3
  402e30:	d914      	bls.n	402e5c <system_init_flash+0x30>
  402e32:	4b1a      	ldr	r3, [pc, #104]	; (402e9c <system_init_flash+0x70>)
  402e34:	4298      	cmp	r0, r3
  402e36:	d919      	bls.n	402e6c <system_init_flash+0x40>
  402e38:	4b19      	ldr	r3, [pc, #100]	; (402ea0 <system_init_flash+0x74>)
  402e3a:	4298      	cmp	r0, r3
  402e3c:	d91d      	bls.n	402e7a <system_init_flash+0x4e>
  402e3e:	4b19      	ldr	r3, [pc, #100]	; (402ea4 <system_init_flash+0x78>)
  402e40:	4298      	cmp	r0, r3
  402e42:	d921      	bls.n	402e88 <system_init_flash+0x5c>
  402e44:	4b18      	ldr	r3, [pc, #96]	; (402ea8 <system_init_flash+0x7c>)
  402e46:	4298      	cmp	r0, r3
  402e48:	bf94      	ite	ls
  402e4a:	f04f 2304 	movls.w	r3, #67109888	; 0x4000400
  402e4e:	4b17      	ldrhi	r3, [pc, #92]	; (402eac <system_init_flash+0x80>)
  402e50:	4a17      	ldr	r2, [pc, #92]	; (402eb0 <system_init_flash+0x84>)
  402e52:	6013      	str	r3, [r2, #0]
  402e54:	f502 7200 	add.w	r2, r2, #512	; 0x200
  402e58:	6013      	str	r3, [r2, #0]
  402e5a:	4770      	bx	lr
  402e5c:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
  402e60:	4a13      	ldr	r2, [pc, #76]	; (402eb0 <system_init_flash+0x84>)
  402e62:	6013      	str	r3, [r2, #0]
  402e64:	f502 7200 	add.w	r2, r2, #512	; 0x200
  402e68:	6013      	str	r3, [r2, #0]
  402e6a:	4770      	bx	lr
  402e6c:	4b11      	ldr	r3, [pc, #68]	; (402eb4 <system_init_flash+0x88>)
  402e6e:	4a10      	ldr	r2, [pc, #64]	; (402eb0 <system_init_flash+0x84>)
  402e70:	6013      	str	r3, [r2, #0]
  402e72:	f502 7200 	add.w	r2, r2, #512	; 0x200
  402e76:	6013      	str	r3, [r2, #0]
  402e78:	4770      	bx	lr
  402e7a:	4b0f      	ldr	r3, [pc, #60]	; (402eb8 <system_init_flash+0x8c>)
  402e7c:	4a0c      	ldr	r2, [pc, #48]	; (402eb0 <system_init_flash+0x84>)
  402e7e:	6013      	str	r3, [r2, #0]
  402e80:	f502 7200 	add.w	r2, r2, #512	; 0x200
  402e84:	6013      	str	r3, [r2, #0]
  402e86:	4770      	bx	lr
  402e88:	4b0c      	ldr	r3, [pc, #48]	; (402ebc <system_init_flash+0x90>)
  402e8a:	4a09      	ldr	r2, [pc, #36]	; (402eb0 <system_init_flash+0x84>)
  402e8c:	6013      	str	r3, [r2, #0]
  402e8e:	f502 7200 	add.w	r2, r2, #512	; 0x200
  402e92:	6013      	str	r3, [r2, #0]
  402e94:	4770      	bx	lr
  402e96:	bf00      	nop
  402e98:	01312cff 	.word	0x01312cff
  402e9c:	026259ff 	.word	0x026259ff
  402ea0:	039386ff 	.word	0x039386ff
  402ea4:	04c4b3ff 	.word	0x04c4b3ff
  402ea8:	05f5e0ff 	.word	0x05f5e0ff
  402eac:	04000500 	.word	0x04000500
  402eb0:	400e0a00 	.word	0x400e0a00
  402eb4:	04000100 	.word	0x04000100
  402eb8:	04000200 	.word	0x04000200
  402ebc:	04000300 	.word	0x04000300

00402ec0 <f_mount>:
  402ec0:	2807      	cmp	r0, #7
  402ec2:	d901      	bls.n	402ec8 <f_mount+0x8>
  402ec4:	200b      	movs	r0, #11
  402ec6:	4770      	bx	lr
  402ec8:	4b06      	ldr	r3, [pc, #24]	; (402ee4 <f_mount+0x24>)
  402eca:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
  402ece:	b10b      	cbz	r3, 402ed4 <f_mount+0x14>
  402ed0:	2200      	movs	r2, #0
  402ed2:	701a      	strb	r2, [r3, #0]
  402ed4:	b109      	cbz	r1, 402eda <f_mount+0x1a>
  402ed6:	2300      	movs	r3, #0
  402ed8:	700b      	strb	r3, [r1, #0]
  402eda:	4b02      	ldr	r3, [pc, #8]	; (402ee4 <f_mount+0x24>)
  402edc:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
  402ee0:	2000      	movs	r0, #0
  402ee2:	4770      	bx	lr
  402ee4:	20000b78 	.word	0x20000b78

00402ee8 <button_callback>:
	}
}

void button_callback (tButtonNum b)
{
	button_pressed = true;
  402ee8:	2201      	movs	r2, #1
  402eea:	4b02      	ldr	r3, [pc, #8]	; (402ef4 <button_callback+0xc>)
  402eec:	701a      	strb	r2, [r3, #0]
	seleced_button = b;
  402eee:	4b02      	ldr	r3, [pc, #8]	; (402ef8 <button_callback+0x10>)
  402ef0:	6018      	str	r0, [r3, #0]
  402ef2:	4770      	bx	lr
  402ef4:	20000b98 	.word	0x20000b98
  402ef8:	20000bac 	.word	0x20000bac

00402efc <main>:
{
  402efc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402f00:	b0a3      	sub	sp, #140	; 0x8c
	system_init();		
  402f02:	4b86      	ldr	r3, [pc, #536]	; (40311c <main+0x220>)
  402f04:	4798      	blx	r3
	hal_button_start_int(button_callback);
  402f06:	4886      	ldr	r0, [pc, #536]	; (403120 <main+0x224>)
  402f08:	4b86      	ldr	r3, [pc, #536]	; (403124 <main+0x228>)
  402f0a:	4798      	blx	r3
		Shape Alien = make_shape(alien, 10, 0);
  402f0c:	f04f 0800 	mov.w	r8, #0
		Shape Alien1 = make_shape(alien, 10, 1);
  402f10:	f04f 0b01 	mov.w	fp, #1
			draw_shape(aliens[i]);
  402f14:	4f84      	ldr	r7, [pc, #528]	; (403128 <main+0x22c>)
		Shape Alien = make_shape(alien, 10, 0);
  402f16:	4643      	mov	r3, r8
  402f18:	220a      	movs	r2, #10
  402f1a:	4641      	mov	r1, r8
  402f1c:	4668      	mov	r0, sp
  402f1e:	4d83      	ldr	r5, [pc, #524]	; (40312c <main+0x230>)
  402f20:	47a8      	blx	r5
		aliens[0] = &Alien;
  402f22:	4c83      	ldr	r4, [pc, #524]	; (403130 <main+0x234>)
  402f24:	f8c4 d000 	str.w	sp, [r4]
		Shape Alien1 = make_shape(alien, 10, 1);
  402f28:	ae02      	add	r6, sp, #8
  402f2a:	465b      	mov	r3, fp
  402f2c:	220a      	movs	r2, #10
  402f2e:	4641      	mov	r1, r8
  402f30:	4630      	mov	r0, r6
  402f32:	47a8      	blx	r5
		aliens[1] = &Alien1;
  402f34:	6066      	str	r6, [r4, #4]
		 Shape Alien2 = make_shape(alien, 10, 2);
  402f36:	ae04      	add	r6, sp, #16
  402f38:	2302      	movs	r3, #2
  402f3a:	220a      	movs	r2, #10
  402f3c:	4641      	mov	r1, r8
  402f3e:	4630      	mov	r0, r6
  402f40:	47a8      	blx	r5
		aliens[2] = &Alien2;
  402f42:	60a6      	str	r6, [r4, #8]
		Shape Alien3 = make_shape(alien, 11, 0);
  402f44:	ae06      	add	r6, sp, #24
  402f46:	4643      	mov	r3, r8
  402f48:	220b      	movs	r2, #11
  402f4a:	4641      	mov	r1, r8
  402f4c:	4630      	mov	r0, r6
  402f4e:	47a8      	blx	r5
		aliens[3] = &Alien3;
  402f50:	60e6      	str	r6, [r4, #12]
		Shape Alien4 = make_shape(alien, 11, 1);
  402f52:	ae08      	add	r6, sp, #32
  402f54:	465b      	mov	r3, fp
  402f56:	220b      	movs	r2, #11
  402f58:	4641      	mov	r1, r8
  402f5a:	4630      	mov	r0, r6
  402f5c:	47a8      	blx	r5
		aliens[4] = &Alien4;
  402f5e:	6126      	str	r6, [r4, #16]
		Shape Alien5 = make_shape(alien, 11, 2);
  402f60:	ae0a      	add	r6, sp, #40	; 0x28
  402f62:	2302      	movs	r3, #2
  402f64:	220b      	movs	r2, #11
  402f66:	4641      	mov	r1, r8
  402f68:	4630      	mov	r0, r6
  402f6a:	47a8      	blx	r5
		aliens[5] = &Alien5;
  402f6c:	6166      	str	r6, [r4, #20]
		Shape Alien6 = make_shape(alien, 12, 0);
  402f6e:	ae0c      	add	r6, sp, #48	; 0x30
  402f70:	4643      	mov	r3, r8
  402f72:	220c      	movs	r2, #12
  402f74:	4641      	mov	r1, r8
  402f76:	4630      	mov	r0, r6
  402f78:	47a8      	blx	r5
		aliens[6] = &Alien6;
  402f7a:	61a6      	str	r6, [r4, #24]
		Shape Alien7 = make_shape(alien, 12, 1);
  402f7c:	ae0e      	add	r6, sp, #56	; 0x38
  402f7e:	465b      	mov	r3, fp
  402f80:	220c      	movs	r2, #12
  402f82:	4641      	mov	r1, r8
  402f84:	4630      	mov	r0, r6
  402f86:	47a8      	blx	r5
		aliens[7] = &Alien7;
  402f88:	61e6      	str	r6, [r4, #28]
		Shape Alien8 = make_shape(alien, 12, 2);
  402f8a:	ae10      	add	r6, sp, #64	; 0x40
  402f8c:	2302      	movs	r3, #2
  402f8e:	220c      	movs	r2, #12
  402f90:	4641      	mov	r1, r8
  402f92:	4630      	mov	r0, r6
  402f94:	47a8      	blx	r5
		aliens[8] = &Alien8;
  402f96:	6226      	str	r6, [r4, #32]
		Shape Alien9 = make_shape(alien, 13, 0);
  402f98:	ae12      	add	r6, sp, #72	; 0x48
  402f9a:	4643      	mov	r3, r8
  402f9c:	220d      	movs	r2, #13
  402f9e:	4641      	mov	r1, r8
  402fa0:	4630      	mov	r0, r6
  402fa2:	47a8      	blx	r5
		aliens[9] = &Alien9;
  402fa4:	6266      	str	r6, [r4, #36]	; 0x24
		Shape Alien10 = make_shape(alien, 13, 1);
  402fa6:	ae14      	add	r6, sp, #80	; 0x50
  402fa8:	465b      	mov	r3, fp
  402faa:	220d      	movs	r2, #13
  402fac:	4641      	mov	r1, r8
  402fae:	4630      	mov	r0, r6
  402fb0:	47a8      	blx	r5
		aliens[10] = &Alien10;
  402fb2:	62a6      	str	r6, [r4, #40]	; 0x28
		Shape Alien11 = make_shape(alien, 13, 2);
  402fb4:	ae16      	add	r6, sp, #88	; 0x58
  402fb6:	2302      	movs	r3, #2
  402fb8:	220d      	movs	r2, #13
  402fba:	4641      	mov	r1, r8
  402fbc:	4630      	mov	r0, r6
  402fbe:	47a8      	blx	r5
		aliens[11] = &Alien11;
  402fc0:	62e6      	str	r6, [r4, #44]	; 0x2c
		Shape Alien12 = make_shape(alien, 14, 0);
  402fc2:	ae18      	add	r6, sp, #96	; 0x60
  402fc4:	4643      	mov	r3, r8
  402fc6:	220e      	movs	r2, #14
  402fc8:	4641      	mov	r1, r8
  402fca:	4630      	mov	r0, r6
  402fcc:	47a8      	blx	r5
		aliens[12] = &Alien12;
  402fce:	6326      	str	r6, [r4, #48]	; 0x30
		Shape Alien13 = make_shape(alien, 14, 1);
  402fd0:	ae1a      	add	r6, sp, #104	; 0x68
  402fd2:	465b      	mov	r3, fp
  402fd4:	220e      	movs	r2, #14
  402fd6:	4641      	mov	r1, r8
  402fd8:	4630      	mov	r0, r6
  402fda:	47a8      	blx	r5
		aliens[13] = &Alien13;
  402fdc:	6366      	str	r6, [r4, #52]	; 0x34
		Shape Alien14 = make_shape(alien, 14, 2);
  402fde:	ae1c      	add	r6, sp, #112	; 0x70
  402fe0:	2302      	movs	r3, #2
  402fe2:	220e      	movs	r2, #14
  402fe4:	4641      	mov	r1, r8
  402fe6:	4630      	mov	r0, r6
  402fe8:	47a8      	blx	r5
		aliens[14] = &Alien14;
  402fea:	63a6      	str	r6, [r4, #56]	; 0x38
		Shape Ship = make_shape(ship, 0, 2);
  402fec:	ae1e      	add	r6, sp, #120	; 0x78
  402fee:	2302      	movs	r3, #2
  402ff0:	4642      	mov	r2, r8
  402ff2:	4659      	mov	r1, fp
  402ff4:	4630      	mov	r0, r6
  402ff6:	47a8      	blx	r5
		spaceship = &Ship;
  402ff8:	4b4e      	ldr	r3, [pc, #312]	; (403134 <main+0x238>)
  402ffa:	601e      	str	r6, [r3, #0]
		Shape Bullet = make_shape(bullet, 0, 0);
  402ffc:	ae20      	add	r6, sp, #128	; 0x80
  402ffe:	4643      	mov	r3, r8
  403000:	4642      	mov	r2, r8
  403002:	2102      	movs	r1, #2
  403004:	4630      	mov	r0, r6
  403006:	47a8      	blx	r5
		bullets = &Bullet;
  403008:	4b4b      	ldr	r3, [pc, #300]	; (403138 <main+0x23c>)
  40300a:	601e      	str	r6, [r3, #0]
		bullets->exists = false;
  40300c:	f88d 8086 	strb.w	r8, [sp, #134]	; 0x86
  403010:	f1a4 0904 	sub.w	r9, r4, #4
  403014:	3438      	adds	r4, #56	; 0x38
  403016:	464e      	mov	r6, r9
			draw_shape(aliens[i]);
  403018:	f856 0f04 	ldr.w	r0, [r6, #4]!
  40301c:	47b8      	blx	r7
		for (uint16_t i = 0; i < ALIEN_NUM; i++)
  40301e:	42a6      	cmp	r6, r4
  403020:	d1fa      	bne.n	403018 <main+0x11c>
		draw_shape(spaceship);
  403022:	4b44      	ldr	r3, [pc, #272]	; (403134 <main+0x238>)
  403024:	6818      	ldr	r0, [r3, #0]
  403026:	47b8      	blx	r7
		while (!gameover)
  403028:	f8df a12c 	ldr.w	sl, [pc, #300]	; 403158 <main+0x25c>
  40302c:	e04e      	b.n	4030cc <main+0x1d0>
						move_shape_up(spaceship);
  40302e:	4b41      	ldr	r3, [pc, #260]	; (403134 <main+0x238>)
  403030:	6818      	ldr	r0, [r3, #0]
  403032:	4b42      	ldr	r3, [pc, #264]	; (40313c <main+0x240>)
  403034:	4798      	blx	r3
						break;
  403036:	e05c      	b.n	4030f2 <main+0x1f6>
						if (!bullets->exists)
  403038:	4b3f      	ldr	r3, [pc, #252]	; (403138 <main+0x23c>)
  40303a:	681b      	ldr	r3, [r3, #0]
  40303c:	799a      	ldrb	r2, [r3, #6]
  40303e:	2a00      	cmp	r2, #0
  403040:	d157      	bne.n	4030f2 <main+0x1f6>
							bullets->exists = true;
  403042:	f883 b006 	strb.w	fp, [r3, #6]
							bullets->x = spaceship->x + 1;
  403046:	493b      	ldr	r1, [pc, #236]	; (403134 <main+0x238>)
  403048:	680a      	ldr	r2, [r1, #0]
  40304a:	8852      	ldrh	r2, [r2, #2]
  40304c:	3201      	adds	r2, #1
  40304e:	805a      	strh	r2, [r3, #2]
							bullets->y = spaceship->y;
  403050:	680b      	ldr	r3, [r1, #0]
  403052:	889a      	ldrh	r2, [r3, #4]
  403054:	4b38      	ldr	r3, [pc, #224]	; (403138 <main+0x23c>)
  403056:	681b      	ldr	r3, [r3, #0]
  403058:	809a      	strh	r2, [r3, #4]
  40305a:	e04a      	b.n	4030f2 <main+0x1f6>
						move_shape_down(spaceship);
  40305c:	4b35      	ldr	r3, [pc, #212]	; (403134 <main+0x238>)
  40305e:	6818      	ldr	r0, [r3, #0]
  403060:	4b37      	ldr	r3, [pc, #220]	; (403140 <main+0x244>)
  403062:	4798      	blx	r3
						break;
  403064:	e045      	b.n	4030f2 <main+0x1f6>
				bullets->exists = false;
  403066:	f880 8006 	strb.w	r8, [r0, #6]
  40306a:	e04d      	b.n	403108 <main+0x20c>
				move_shape_right(bullets);
  40306c:	4b35      	ldr	r3, [pc, #212]	; (403144 <main+0x248>)
  40306e:	4798      	blx	r3
  403070:	e04a      	b.n	403108 <main+0x20c>
			for (uint16_t i = 0; i < ALIEN_NUM; i++)
  403072:	42b4      	cmp	r4, r6
  403074:	d011      	beq.n	40309a <main+0x19e>
				Shape* current_alien = aliens[i];
  403076:	f854 3f04 	ldr.w	r3, [r4, #4]!
				if ((current_alien->x == bullets->x) && (current_alien->y == bullets->y) && current_alien->exists)
  40307a:	885a      	ldrh	r2, [r3, #2]
  40307c:	428a      	cmp	r2, r1
  40307e:	d1f8      	bne.n	403072 <main+0x176>
  403080:	f8b3 c004 	ldrh.w	ip, [r3, #4]
  403084:	8882      	ldrh	r2, [r0, #4]
  403086:	4594      	cmp	ip, r2
  403088:	d1f3      	bne.n	403072 <main+0x176>
  40308a:	799a      	ldrb	r2, [r3, #6]
					collided_alian = current_alien;
  40308c:	2a00      	cmp	r2, #0
  40308e:	bf18      	it	ne
  403090:	469e      	movne	lr, r3
  403092:	2a00      	cmp	r2, #0
  403094:	bf18      	it	ne
  403096:	4615      	movne	r5, r2
  403098:	e7eb      	b.n	403072 <main+0x176>
			if (collision_found)
  40309a:	b11d      	cbz	r5, 4030a4 <main+0x1a8>
				collided_alian->exists = false;
  40309c:	f88e 8006 	strb.w	r8, [lr, #6]
				bullets->exists = false;
  4030a0:	f880 8006 	strb.w	r8, [r0, #6]
			hal_display_cls();
  4030a4:	4b28      	ldr	r3, [pc, #160]	; (403148 <main+0x24c>)
  4030a6:	4798      	blx	r3
  4030a8:	464d      	mov	r5, r9
  4030aa:	e001      	b.n	4030b0 <main+0x1b4>
			for (uint16_t i = 0; i < 15; i++)
  4030ac:	42ac      	cmp	r4, r5
  4030ae:	d006      	beq.n	4030be <main+0x1c2>
				if (aliens[i]->exists)
  4030b0:	f855 0f04 	ldr.w	r0, [r5, #4]!
  4030b4:	7983      	ldrb	r3, [r0, #6]
  4030b6:	2b00      	cmp	r3, #0
  4030b8:	d0f8      	beq.n	4030ac <main+0x1b0>
					draw_shape(aliens[i]);
  4030ba:	47b8      	blx	r7
  4030bc:	e7f6      	b.n	4030ac <main+0x1b0>
			draw_shape(spaceship);
  4030be:	4b1d      	ldr	r3, [pc, #116]	; (403134 <main+0x238>)
  4030c0:	6818      	ldr	r0, [r3, #0]
  4030c2:	47b8      	blx	r7
			if (bullets->exists)
  4030c4:	4b1c      	ldr	r3, [pc, #112]	; (403138 <main+0x23c>)
  4030c6:	6818      	ldr	r0, [r3, #0]
  4030c8:	7983      	ldrb	r3, [r0, #6]
  4030ca:	bb23      	cbnz	r3, 403116 <main+0x21a>
		while (!gameover)
  4030cc:	f89a 5000 	ldrb.w	r5, [sl]
  4030d0:	2d00      	cmp	r5, #0
  4030d2:	f47f af20 	bne.w	402f16 <main+0x1a>
			hal_delay(200);
  4030d6:	20c8      	movs	r0, #200	; 0xc8
  4030d8:	4b1c      	ldr	r3, [pc, #112]	; (40314c <main+0x250>)
  4030da:	4798      	blx	r3
			if (button_pressed)
  4030dc:	4b1c      	ldr	r3, [pc, #112]	; (403150 <main+0x254>)
  4030de:	781b      	ldrb	r3, [r3, #0]
  4030e0:	b153      	cbz	r3, 4030f8 <main+0x1fc>
				switch(seleced_button)
  4030e2:	4b1c      	ldr	r3, [pc, #112]	; (403154 <main+0x258>)
  4030e4:	681b      	ldr	r3, [r3, #0]
  4030e6:	2b02      	cmp	r3, #2
  4030e8:	d0a6      	beq.n	403038 <main+0x13c>
  4030ea:	2b03      	cmp	r3, #3
  4030ec:	d0b6      	beq.n	40305c <main+0x160>
  4030ee:	2b01      	cmp	r3, #1
  4030f0:	d09d      	beq.n	40302e <main+0x132>
				button_pressed = false;
  4030f2:	4b17      	ldr	r3, [pc, #92]	; (403150 <main+0x254>)
  4030f4:	f883 8000 	strb.w	r8, [r3]
			if (bullets->x == 15)
  4030f8:	4b0f      	ldr	r3, [pc, #60]	; (403138 <main+0x23c>)
  4030fa:	6818      	ldr	r0, [r3, #0]
  4030fc:	8843      	ldrh	r3, [r0, #2]
  4030fe:	2b0f      	cmp	r3, #15
  403100:	d0b1      	beq.n	403066 <main+0x16a>
			if (bullets->exists)
  403102:	7983      	ldrb	r3, [r0, #6]
  403104:	2b00      	cmp	r3, #0
  403106:	d1b1      	bne.n	40306c <main+0x170>
				if ((current_alien->x == bullets->x) && (current_alien->y == bullets->y) && current_alien->exists)
  403108:	4b0b      	ldr	r3, [pc, #44]	; (403138 <main+0x23c>)
  40310a:	6818      	ldr	r0, [r3, #0]
  40310c:	8841      	ldrh	r1, [r0, #2]
  40310e:	464c      	mov	r4, r9
			Shape* collided_alian = NULL;
  403110:	f04f 0e00 	mov.w	lr, #0
  403114:	e7af      	b.n	403076 <main+0x17a>
				draw_shape(bullets);
  403116:	47b8      	blx	r7
  403118:	e7d8      	b.n	4030cc <main+0x1d0>
  40311a:	bf00      	nop
  40311c:	00400d35 	.word	0x00400d35
  403120:	00402ee9 	.word	0x00402ee9
  403124:	0040085d 	.word	0x0040085d
  403128:	00400ddd 	.word	0x00400ddd
  40312c:	00400db9 	.word	0x00400db9
  403130:	20000bb0 	.word	0x20000bb0
  403134:	20000bec 	.word	0x20000bec
  403138:	20000ba8 	.word	0x20000ba8
  40313c:	00400e2b 	.word	0x00400e2b
  403140:	00400e1d 	.word	0x00400e1d
  403144:	00400e35 	.word	0x00400e35
  403148:	00400689 	.word	0x00400689
  40314c:	004001d1 	.word	0x004001d1
  403150:	20000b98 	.word	0x20000b98
  403154:	20000bac 	.word	0x20000bac
  403158:	20000b99 	.word	0x20000b99

0040315c <__aeabi_drsub>:
  40315c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  403160:	e002      	b.n	403168 <__adddf3>
  403162:	bf00      	nop

00403164 <__aeabi_dsub>:
  403164:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00403168 <__adddf3>:
  403168:	b530      	push	{r4, r5, lr}
  40316a:	ea4f 0441 	mov.w	r4, r1, lsl #1
  40316e:	ea4f 0543 	mov.w	r5, r3, lsl #1
  403172:	ea94 0f05 	teq	r4, r5
  403176:	bf08      	it	eq
  403178:	ea90 0f02 	teqeq	r0, r2
  40317c:	bf1f      	itttt	ne
  40317e:	ea54 0c00 	orrsne.w	ip, r4, r0
  403182:	ea55 0c02 	orrsne.w	ip, r5, r2
  403186:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  40318a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  40318e:	f000 80e2 	beq.w	403356 <__adddf3+0x1ee>
  403192:	ea4f 5454 	mov.w	r4, r4, lsr #21
  403196:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  40319a:	bfb8      	it	lt
  40319c:	426d      	neglt	r5, r5
  40319e:	dd0c      	ble.n	4031ba <__adddf3+0x52>
  4031a0:	442c      	add	r4, r5
  4031a2:	ea80 0202 	eor.w	r2, r0, r2
  4031a6:	ea81 0303 	eor.w	r3, r1, r3
  4031aa:	ea82 0000 	eor.w	r0, r2, r0
  4031ae:	ea83 0101 	eor.w	r1, r3, r1
  4031b2:	ea80 0202 	eor.w	r2, r0, r2
  4031b6:	ea81 0303 	eor.w	r3, r1, r3
  4031ba:	2d36      	cmp	r5, #54	; 0x36
  4031bc:	bf88      	it	hi
  4031be:	bd30      	pophi	{r4, r5, pc}
  4031c0:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4031c4:	ea4f 3101 	mov.w	r1, r1, lsl #12
  4031c8:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  4031cc:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  4031d0:	d002      	beq.n	4031d8 <__adddf3+0x70>
  4031d2:	4240      	negs	r0, r0
  4031d4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  4031d8:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  4031dc:	ea4f 3303 	mov.w	r3, r3, lsl #12
  4031e0:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  4031e4:	d002      	beq.n	4031ec <__adddf3+0x84>
  4031e6:	4252      	negs	r2, r2
  4031e8:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  4031ec:	ea94 0f05 	teq	r4, r5
  4031f0:	f000 80a7 	beq.w	403342 <__adddf3+0x1da>
  4031f4:	f1a4 0401 	sub.w	r4, r4, #1
  4031f8:	f1d5 0e20 	rsbs	lr, r5, #32
  4031fc:	db0d      	blt.n	40321a <__adddf3+0xb2>
  4031fe:	fa02 fc0e 	lsl.w	ip, r2, lr
  403202:	fa22 f205 	lsr.w	r2, r2, r5
  403206:	1880      	adds	r0, r0, r2
  403208:	f141 0100 	adc.w	r1, r1, #0
  40320c:	fa03 f20e 	lsl.w	r2, r3, lr
  403210:	1880      	adds	r0, r0, r2
  403212:	fa43 f305 	asr.w	r3, r3, r5
  403216:	4159      	adcs	r1, r3
  403218:	e00e      	b.n	403238 <__adddf3+0xd0>
  40321a:	f1a5 0520 	sub.w	r5, r5, #32
  40321e:	f10e 0e20 	add.w	lr, lr, #32
  403222:	2a01      	cmp	r2, #1
  403224:	fa03 fc0e 	lsl.w	ip, r3, lr
  403228:	bf28      	it	cs
  40322a:	f04c 0c02 	orrcs.w	ip, ip, #2
  40322e:	fa43 f305 	asr.w	r3, r3, r5
  403232:	18c0      	adds	r0, r0, r3
  403234:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  403238:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  40323c:	d507      	bpl.n	40324e <__adddf3+0xe6>
  40323e:	f04f 0e00 	mov.w	lr, #0
  403242:	f1dc 0c00 	rsbs	ip, ip, #0
  403246:	eb7e 0000 	sbcs.w	r0, lr, r0
  40324a:	eb6e 0101 	sbc.w	r1, lr, r1
  40324e:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  403252:	d31b      	bcc.n	40328c <__adddf3+0x124>
  403254:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  403258:	d30c      	bcc.n	403274 <__adddf3+0x10c>
  40325a:	0849      	lsrs	r1, r1, #1
  40325c:	ea5f 0030 	movs.w	r0, r0, rrx
  403260:	ea4f 0c3c 	mov.w	ip, ip, rrx
  403264:	f104 0401 	add.w	r4, r4, #1
  403268:	ea4f 5244 	mov.w	r2, r4, lsl #21
  40326c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  403270:	f080 809a 	bcs.w	4033a8 <__adddf3+0x240>
  403274:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  403278:	bf08      	it	eq
  40327a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  40327e:	f150 0000 	adcs.w	r0, r0, #0
  403282:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  403286:	ea41 0105 	orr.w	r1, r1, r5
  40328a:	bd30      	pop	{r4, r5, pc}
  40328c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  403290:	4140      	adcs	r0, r0
  403292:	eb41 0101 	adc.w	r1, r1, r1
  403296:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  40329a:	f1a4 0401 	sub.w	r4, r4, #1
  40329e:	d1e9      	bne.n	403274 <__adddf3+0x10c>
  4032a0:	f091 0f00 	teq	r1, #0
  4032a4:	bf04      	itt	eq
  4032a6:	4601      	moveq	r1, r0
  4032a8:	2000      	moveq	r0, #0
  4032aa:	fab1 f381 	clz	r3, r1
  4032ae:	bf08      	it	eq
  4032b0:	3320      	addeq	r3, #32
  4032b2:	f1a3 030b 	sub.w	r3, r3, #11
  4032b6:	f1b3 0220 	subs.w	r2, r3, #32
  4032ba:	da0c      	bge.n	4032d6 <__adddf3+0x16e>
  4032bc:	320c      	adds	r2, #12
  4032be:	dd08      	ble.n	4032d2 <__adddf3+0x16a>
  4032c0:	f102 0c14 	add.w	ip, r2, #20
  4032c4:	f1c2 020c 	rsb	r2, r2, #12
  4032c8:	fa01 f00c 	lsl.w	r0, r1, ip
  4032cc:	fa21 f102 	lsr.w	r1, r1, r2
  4032d0:	e00c      	b.n	4032ec <__adddf3+0x184>
  4032d2:	f102 0214 	add.w	r2, r2, #20
  4032d6:	bfd8      	it	le
  4032d8:	f1c2 0c20 	rsble	ip, r2, #32
  4032dc:	fa01 f102 	lsl.w	r1, r1, r2
  4032e0:	fa20 fc0c 	lsr.w	ip, r0, ip
  4032e4:	bfdc      	itt	le
  4032e6:	ea41 010c 	orrle.w	r1, r1, ip
  4032ea:	4090      	lslle	r0, r2
  4032ec:	1ae4      	subs	r4, r4, r3
  4032ee:	bfa2      	ittt	ge
  4032f0:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  4032f4:	4329      	orrge	r1, r5
  4032f6:	bd30      	popge	{r4, r5, pc}
  4032f8:	ea6f 0404 	mvn.w	r4, r4
  4032fc:	3c1f      	subs	r4, #31
  4032fe:	da1c      	bge.n	40333a <__adddf3+0x1d2>
  403300:	340c      	adds	r4, #12
  403302:	dc0e      	bgt.n	403322 <__adddf3+0x1ba>
  403304:	f104 0414 	add.w	r4, r4, #20
  403308:	f1c4 0220 	rsb	r2, r4, #32
  40330c:	fa20 f004 	lsr.w	r0, r0, r4
  403310:	fa01 f302 	lsl.w	r3, r1, r2
  403314:	ea40 0003 	orr.w	r0, r0, r3
  403318:	fa21 f304 	lsr.w	r3, r1, r4
  40331c:	ea45 0103 	orr.w	r1, r5, r3
  403320:	bd30      	pop	{r4, r5, pc}
  403322:	f1c4 040c 	rsb	r4, r4, #12
  403326:	f1c4 0220 	rsb	r2, r4, #32
  40332a:	fa20 f002 	lsr.w	r0, r0, r2
  40332e:	fa01 f304 	lsl.w	r3, r1, r4
  403332:	ea40 0003 	orr.w	r0, r0, r3
  403336:	4629      	mov	r1, r5
  403338:	bd30      	pop	{r4, r5, pc}
  40333a:	fa21 f004 	lsr.w	r0, r1, r4
  40333e:	4629      	mov	r1, r5
  403340:	bd30      	pop	{r4, r5, pc}
  403342:	f094 0f00 	teq	r4, #0
  403346:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  40334a:	bf06      	itte	eq
  40334c:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  403350:	3401      	addeq	r4, #1
  403352:	3d01      	subne	r5, #1
  403354:	e74e      	b.n	4031f4 <__adddf3+0x8c>
  403356:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  40335a:	bf18      	it	ne
  40335c:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  403360:	d029      	beq.n	4033b6 <__adddf3+0x24e>
  403362:	ea94 0f05 	teq	r4, r5
  403366:	bf08      	it	eq
  403368:	ea90 0f02 	teqeq	r0, r2
  40336c:	d005      	beq.n	40337a <__adddf3+0x212>
  40336e:	ea54 0c00 	orrs.w	ip, r4, r0
  403372:	bf04      	itt	eq
  403374:	4619      	moveq	r1, r3
  403376:	4610      	moveq	r0, r2
  403378:	bd30      	pop	{r4, r5, pc}
  40337a:	ea91 0f03 	teq	r1, r3
  40337e:	bf1e      	ittt	ne
  403380:	2100      	movne	r1, #0
  403382:	2000      	movne	r0, #0
  403384:	bd30      	popne	{r4, r5, pc}
  403386:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  40338a:	d105      	bne.n	403398 <__adddf3+0x230>
  40338c:	0040      	lsls	r0, r0, #1
  40338e:	4149      	adcs	r1, r1
  403390:	bf28      	it	cs
  403392:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  403396:	bd30      	pop	{r4, r5, pc}
  403398:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  40339c:	bf3c      	itt	cc
  40339e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  4033a2:	bd30      	popcc	{r4, r5, pc}
  4033a4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4033a8:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  4033ac:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  4033b0:	f04f 0000 	mov.w	r0, #0
  4033b4:	bd30      	pop	{r4, r5, pc}
  4033b6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  4033ba:	bf1a      	itte	ne
  4033bc:	4619      	movne	r1, r3
  4033be:	4610      	movne	r0, r2
  4033c0:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  4033c4:	bf1c      	itt	ne
  4033c6:	460b      	movne	r3, r1
  4033c8:	4602      	movne	r2, r0
  4033ca:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  4033ce:	bf06      	itte	eq
  4033d0:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  4033d4:	ea91 0f03 	teqeq	r1, r3
  4033d8:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  4033dc:	bd30      	pop	{r4, r5, pc}
  4033de:	bf00      	nop

004033e0 <__aeabi_ui2d>:
  4033e0:	f090 0f00 	teq	r0, #0
  4033e4:	bf04      	itt	eq
  4033e6:	2100      	moveq	r1, #0
  4033e8:	4770      	bxeq	lr
  4033ea:	b530      	push	{r4, r5, lr}
  4033ec:	f44f 6480 	mov.w	r4, #1024	; 0x400
  4033f0:	f104 0432 	add.w	r4, r4, #50	; 0x32
  4033f4:	f04f 0500 	mov.w	r5, #0
  4033f8:	f04f 0100 	mov.w	r1, #0
  4033fc:	e750      	b.n	4032a0 <__adddf3+0x138>
  4033fe:	bf00      	nop

00403400 <__aeabi_i2d>:
  403400:	f090 0f00 	teq	r0, #0
  403404:	bf04      	itt	eq
  403406:	2100      	moveq	r1, #0
  403408:	4770      	bxeq	lr
  40340a:	b530      	push	{r4, r5, lr}
  40340c:	f44f 6480 	mov.w	r4, #1024	; 0x400
  403410:	f104 0432 	add.w	r4, r4, #50	; 0x32
  403414:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  403418:	bf48      	it	mi
  40341a:	4240      	negmi	r0, r0
  40341c:	f04f 0100 	mov.w	r1, #0
  403420:	e73e      	b.n	4032a0 <__adddf3+0x138>
  403422:	bf00      	nop

00403424 <__aeabi_f2d>:
  403424:	0042      	lsls	r2, r0, #1
  403426:	ea4f 01e2 	mov.w	r1, r2, asr #3
  40342a:	ea4f 0131 	mov.w	r1, r1, rrx
  40342e:	ea4f 7002 	mov.w	r0, r2, lsl #28
  403432:	bf1f      	itttt	ne
  403434:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  403438:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  40343c:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  403440:	4770      	bxne	lr
  403442:	f092 0f00 	teq	r2, #0
  403446:	bf14      	ite	ne
  403448:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  40344c:	4770      	bxeq	lr
  40344e:	b530      	push	{r4, r5, lr}
  403450:	f44f 7460 	mov.w	r4, #896	; 0x380
  403454:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  403458:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  40345c:	e720      	b.n	4032a0 <__adddf3+0x138>
  40345e:	bf00      	nop

00403460 <__aeabi_ul2d>:
  403460:	ea50 0201 	orrs.w	r2, r0, r1
  403464:	bf08      	it	eq
  403466:	4770      	bxeq	lr
  403468:	b530      	push	{r4, r5, lr}
  40346a:	f04f 0500 	mov.w	r5, #0
  40346e:	e00a      	b.n	403486 <__aeabi_l2d+0x16>

00403470 <__aeabi_l2d>:
  403470:	ea50 0201 	orrs.w	r2, r0, r1
  403474:	bf08      	it	eq
  403476:	4770      	bxeq	lr
  403478:	b530      	push	{r4, r5, lr}
  40347a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  40347e:	d502      	bpl.n	403486 <__aeabi_l2d+0x16>
  403480:	4240      	negs	r0, r0
  403482:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  403486:	f44f 6480 	mov.w	r4, #1024	; 0x400
  40348a:	f104 0432 	add.w	r4, r4, #50	; 0x32
  40348e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  403492:	f43f aedc 	beq.w	40324e <__adddf3+0xe6>
  403496:	f04f 0203 	mov.w	r2, #3
  40349a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  40349e:	bf18      	it	ne
  4034a0:	3203      	addne	r2, #3
  4034a2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  4034a6:	bf18      	it	ne
  4034a8:	3203      	addne	r2, #3
  4034aa:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  4034ae:	f1c2 0320 	rsb	r3, r2, #32
  4034b2:	fa00 fc03 	lsl.w	ip, r0, r3
  4034b6:	fa20 f002 	lsr.w	r0, r0, r2
  4034ba:	fa01 fe03 	lsl.w	lr, r1, r3
  4034be:	ea40 000e 	orr.w	r0, r0, lr
  4034c2:	fa21 f102 	lsr.w	r1, r1, r2
  4034c6:	4414      	add	r4, r2
  4034c8:	e6c1      	b.n	40324e <__adddf3+0xe6>
  4034ca:	bf00      	nop

004034cc <__aeabi_dmul>:
  4034cc:	b570      	push	{r4, r5, r6, lr}
  4034ce:	f04f 0cff 	mov.w	ip, #255	; 0xff
  4034d2:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  4034d6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  4034da:	bf1d      	ittte	ne
  4034dc:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  4034e0:	ea94 0f0c 	teqne	r4, ip
  4034e4:	ea95 0f0c 	teqne	r5, ip
  4034e8:	f000 f8de 	bleq	4036a8 <__aeabi_dmul+0x1dc>
  4034ec:	442c      	add	r4, r5
  4034ee:	ea81 0603 	eor.w	r6, r1, r3
  4034f2:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  4034f6:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  4034fa:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  4034fe:	bf18      	it	ne
  403500:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  403504:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  403508:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  40350c:	d038      	beq.n	403580 <__aeabi_dmul+0xb4>
  40350e:	fba0 ce02 	umull	ip, lr, r0, r2
  403512:	f04f 0500 	mov.w	r5, #0
  403516:	fbe1 e502 	umlal	lr, r5, r1, r2
  40351a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  40351e:	fbe0 e503 	umlal	lr, r5, r0, r3
  403522:	f04f 0600 	mov.w	r6, #0
  403526:	fbe1 5603 	umlal	r5, r6, r1, r3
  40352a:	f09c 0f00 	teq	ip, #0
  40352e:	bf18      	it	ne
  403530:	f04e 0e01 	orrne.w	lr, lr, #1
  403534:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  403538:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  40353c:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  403540:	d204      	bcs.n	40354c <__aeabi_dmul+0x80>
  403542:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  403546:	416d      	adcs	r5, r5
  403548:	eb46 0606 	adc.w	r6, r6, r6
  40354c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  403550:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  403554:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  403558:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  40355c:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  403560:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  403564:	bf88      	it	hi
  403566:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  40356a:	d81e      	bhi.n	4035aa <__aeabi_dmul+0xde>
  40356c:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  403570:	bf08      	it	eq
  403572:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  403576:	f150 0000 	adcs.w	r0, r0, #0
  40357a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  40357e:	bd70      	pop	{r4, r5, r6, pc}
  403580:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  403584:	ea46 0101 	orr.w	r1, r6, r1
  403588:	ea40 0002 	orr.w	r0, r0, r2
  40358c:	ea81 0103 	eor.w	r1, r1, r3
  403590:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  403594:	bfc2      	ittt	gt
  403596:	ebd4 050c 	rsbsgt	r5, r4, ip
  40359a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  40359e:	bd70      	popgt	{r4, r5, r6, pc}
  4035a0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4035a4:	f04f 0e00 	mov.w	lr, #0
  4035a8:	3c01      	subs	r4, #1
  4035aa:	f300 80ab 	bgt.w	403704 <__aeabi_dmul+0x238>
  4035ae:	f114 0f36 	cmn.w	r4, #54	; 0x36
  4035b2:	bfde      	ittt	le
  4035b4:	2000      	movle	r0, #0
  4035b6:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  4035ba:	bd70      	pople	{r4, r5, r6, pc}
  4035bc:	f1c4 0400 	rsb	r4, r4, #0
  4035c0:	3c20      	subs	r4, #32
  4035c2:	da35      	bge.n	403630 <__aeabi_dmul+0x164>
  4035c4:	340c      	adds	r4, #12
  4035c6:	dc1b      	bgt.n	403600 <__aeabi_dmul+0x134>
  4035c8:	f104 0414 	add.w	r4, r4, #20
  4035cc:	f1c4 0520 	rsb	r5, r4, #32
  4035d0:	fa00 f305 	lsl.w	r3, r0, r5
  4035d4:	fa20 f004 	lsr.w	r0, r0, r4
  4035d8:	fa01 f205 	lsl.w	r2, r1, r5
  4035dc:	ea40 0002 	orr.w	r0, r0, r2
  4035e0:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  4035e4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  4035e8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  4035ec:	fa21 f604 	lsr.w	r6, r1, r4
  4035f0:	eb42 0106 	adc.w	r1, r2, r6
  4035f4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4035f8:	bf08      	it	eq
  4035fa:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4035fe:	bd70      	pop	{r4, r5, r6, pc}
  403600:	f1c4 040c 	rsb	r4, r4, #12
  403604:	f1c4 0520 	rsb	r5, r4, #32
  403608:	fa00 f304 	lsl.w	r3, r0, r4
  40360c:	fa20 f005 	lsr.w	r0, r0, r5
  403610:	fa01 f204 	lsl.w	r2, r1, r4
  403614:	ea40 0002 	orr.w	r0, r0, r2
  403618:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  40361c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  403620:	f141 0100 	adc.w	r1, r1, #0
  403624:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  403628:	bf08      	it	eq
  40362a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  40362e:	bd70      	pop	{r4, r5, r6, pc}
  403630:	f1c4 0520 	rsb	r5, r4, #32
  403634:	fa00 f205 	lsl.w	r2, r0, r5
  403638:	ea4e 0e02 	orr.w	lr, lr, r2
  40363c:	fa20 f304 	lsr.w	r3, r0, r4
  403640:	fa01 f205 	lsl.w	r2, r1, r5
  403644:	ea43 0302 	orr.w	r3, r3, r2
  403648:	fa21 f004 	lsr.w	r0, r1, r4
  40364c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  403650:	fa21 f204 	lsr.w	r2, r1, r4
  403654:	ea20 0002 	bic.w	r0, r0, r2
  403658:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  40365c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  403660:	bf08      	it	eq
  403662:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  403666:	bd70      	pop	{r4, r5, r6, pc}
  403668:	f094 0f00 	teq	r4, #0
  40366c:	d10f      	bne.n	40368e <__aeabi_dmul+0x1c2>
  40366e:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  403672:	0040      	lsls	r0, r0, #1
  403674:	eb41 0101 	adc.w	r1, r1, r1
  403678:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  40367c:	bf08      	it	eq
  40367e:	3c01      	subeq	r4, #1
  403680:	d0f7      	beq.n	403672 <__aeabi_dmul+0x1a6>
  403682:	ea41 0106 	orr.w	r1, r1, r6
  403686:	f095 0f00 	teq	r5, #0
  40368a:	bf18      	it	ne
  40368c:	4770      	bxne	lr
  40368e:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  403692:	0052      	lsls	r2, r2, #1
  403694:	eb43 0303 	adc.w	r3, r3, r3
  403698:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  40369c:	bf08      	it	eq
  40369e:	3d01      	subeq	r5, #1
  4036a0:	d0f7      	beq.n	403692 <__aeabi_dmul+0x1c6>
  4036a2:	ea43 0306 	orr.w	r3, r3, r6
  4036a6:	4770      	bx	lr
  4036a8:	ea94 0f0c 	teq	r4, ip
  4036ac:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  4036b0:	bf18      	it	ne
  4036b2:	ea95 0f0c 	teqne	r5, ip
  4036b6:	d00c      	beq.n	4036d2 <__aeabi_dmul+0x206>
  4036b8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  4036bc:	bf18      	it	ne
  4036be:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  4036c2:	d1d1      	bne.n	403668 <__aeabi_dmul+0x19c>
  4036c4:	ea81 0103 	eor.w	r1, r1, r3
  4036c8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4036cc:	f04f 0000 	mov.w	r0, #0
  4036d0:	bd70      	pop	{r4, r5, r6, pc}
  4036d2:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  4036d6:	bf06      	itte	eq
  4036d8:	4610      	moveq	r0, r2
  4036da:	4619      	moveq	r1, r3
  4036dc:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  4036e0:	d019      	beq.n	403716 <__aeabi_dmul+0x24a>
  4036e2:	ea94 0f0c 	teq	r4, ip
  4036e6:	d102      	bne.n	4036ee <__aeabi_dmul+0x222>
  4036e8:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  4036ec:	d113      	bne.n	403716 <__aeabi_dmul+0x24a>
  4036ee:	ea95 0f0c 	teq	r5, ip
  4036f2:	d105      	bne.n	403700 <__aeabi_dmul+0x234>
  4036f4:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  4036f8:	bf1c      	itt	ne
  4036fa:	4610      	movne	r0, r2
  4036fc:	4619      	movne	r1, r3
  4036fe:	d10a      	bne.n	403716 <__aeabi_dmul+0x24a>
  403700:	ea81 0103 	eor.w	r1, r1, r3
  403704:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  403708:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  40370c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  403710:	f04f 0000 	mov.w	r0, #0
  403714:	bd70      	pop	{r4, r5, r6, pc}
  403716:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  40371a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  40371e:	bd70      	pop	{r4, r5, r6, pc}

00403720 <__aeabi_ddiv>:
  403720:	b570      	push	{r4, r5, r6, lr}
  403722:	f04f 0cff 	mov.w	ip, #255	; 0xff
  403726:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  40372a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  40372e:	bf1d      	ittte	ne
  403730:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  403734:	ea94 0f0c 	teqne	r4, ip
  403738:	ea95 0f0c 	teqne	r5, ip
  40373c:	f000 f8a7 	bleq	40388e <__aeabi_ddiv+0x16e>
  403740:	eba4 0405 	sub.w	r4, r4, r5
  403744:	ea81 0e03 	eor.w	lr, r1, r3
  403748:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  40374c:	ea4f 3101 	mov.w	r1, r1, lsl #12
  403750:	f000 8088 	beq.w	403864 <__aeabi_ddiv+0x144>
  403754:	ea4f 3303 	mov.w	r3, r3, lsl #12
  403758:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  40375c:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  403760:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  403764:	ea4f 2202 	mov.w	r2, r2, lsl #8
  403768:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  40376c:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  403770:	ea4f 2600 	mov.w	r6, r0, lsl #8
  403774:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  403778:	429d      	cmp	r5, r3
  40377a:	bf08      	it	eq
  40377c:	4296      	cmpeq	r6, r2
  40377e:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  403782:	f504 7440 	add.w	r4, r4, #768	; 0x300
  403786:	d202      	bcs.n	40378e <__aeabi_ddiv+0x6e>
  403788:	085b      	lsrs	r3, r3, #1
  40378a:	ea4f 0232 	mov.w	r2, r2, rrx
  40378e:	1ab6      	subs	r6, r6, r2
  403790:	eb65 0503 	sbc.w	r5, r5, r3
  403794:	085b      	lsrs	r3, r3, #1
  403796:	ea4f 0232 	mov.w	r2, r2, rrx
  40379a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  40379e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  4037a2:	ebb6 0e02 	subs.w	lr, r6, r2
  4037a6:	eb75 0e03 	sbcs.w	lr, r5, r3
  4037aa:	bf22      	ittt	cs
  4037ac:	1ab6      	subcs	r6, r6, r2
  4037ae:	4675      	movcs	r5, lr
  4037b0:	ea40 000c 	orrcs.w	r0, r0, ip
  4037b4:	085b      	lsrs	r3, r3, #1
  4037b6:	ea4f 0232 	mov.w	r2, r2, rrx
  4037ba:	ebb6 0e02 	subs.w	lr, r6, r2
  4037be:	eb75 0e03 	sbcs.w	lr, r5, r3
  4037c2:	bf22      	ittt	cs
  4037c4:	1ab6      	subcs	r6, r6, r2
  4037c6:	4675      	movcs	r5, lr
  4037c8:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  4037cc:	085b      	lsrs	r3, r3, #1
  4037ce:	ea4f 0232 	mov.w	r2, r2, rrx
  4037d2:	ebb6 0e02 	subs.w	lr, r6, r2
  4037d6:	eb75 0e03 	sbcs.w	lr, r5, r3
  4037da:	bf22      	ittt	cs
  4037dc:	1ab6      	subcs	r6, r6, r2
  4037de:	4675      	movcs	r5, lr
  4037e0:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  4037e4:	085b      	lsrs	r3, r3, #1
  4037e6:	ea4f 0232 	mov.w	r2, r2, rrx
  4037ea:	ebb6 0e02 	subs.w	lr, r6, r2
  4037ee:	eb75 0e03 	sbcs.w	lr, r5, r3
  4037f2:	bf22      	ittt	cs
  4037f4:	1ab6      	subcs	r6, r6, r2
  4037f6:	4675      	movcs	r5, lr
  4037f8:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  4037fc:	ea55 0e06 	orrs.w	lr, r5, r6
  403800:	d018      	beq.n	403834 <__aeabi_ddiv+0x114>
  403802:	ea4f 1505 	mov.w	r5, r5, lsl #4
  403806:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  40380a:	ea4f 1606 	mov.w	r6, r6, lsl #4
  40380e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  403812:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  403816:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  40381a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  40381e:	d1c0      	bne.n	4037a2 <__aeabi_ddiv+0x82>
  403820:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  403824:	d10b      	bne.n	40383e <__aeabi_ddiv+0x11e>
  403826:	ea41 0100 	orr.w	r1, r1, r0
  40382a:	f04f 0000 	mov.w	r0, #0
  40382e:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  403832:	e7b6      	b.n	4037a2 <__aeabi_ddiv+0x82>
  403834:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  403838:	bf04      	itt	eq
  40383a:	4301      	orreq	r1, r0
  40383c:	2000      	moveq	r0, #0
  40383e:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  403842:	bf88      	it	hi
  403844:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  403848:	f63f aeaf 	bhi.w	4035aa <__aeabi_dmul+0xde>
  40384c:	ebb5 0c03 	subs.w	ip, r5, r3
  403850:	bf04      	itt	eq
  403852:	ebb6 0c02 	subseq.w	ip, r6, r2
  403856:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  40385a:	f150 0000 	adcs.w	r0, r0, #0
  40385e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  403862:	bd70      	pop	{r4, r5, r6, pc}
  403864:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  403868:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  40386c:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  403870:	bfc2      	ittt	gt
  403872:	ebd4 050c 	rsbsgt	r5, r4, ip
  403876:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  40387a:	bd70      	popgt	{r4, r5, r6, pc}
  40387c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  403880:	f04f 0e00 	mov.w	lr, #0
  403884:	3c01      	subs	r4, #1
  403886:	e690      	b.n	4035aa <__aeabi_dmul+0xde>
  403888:	ea45 0e06 	orr.w	lr, r5, r6
  40388c:	e68d      	b.n	4035aa <__aeabi_dmul+0xde>
  40388e:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  403892:	ea94 0f0c 	teq	r4, ip
  403896:	bf08      	it	eq
  403898:	ea95 0f0c 	teqeq	r5, ip
  40389c:	f43f af3b 	beq.w	403716 <__aeabi_dmul+0x24a>
  4038a0:	ea94 0f0c 	teq	r4, ip
  4038a4:	d10a      	bne.n	4038bc <__aeabi_ddiv+0x19c>
  4038a6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  4038aa:	f47f af34 	bne.w	403716 <__aeabi_dmul+0x24a>
  4038ae:	ea95 0f0c 	teq	r5, ip
  4038b2:	f47f af25 	bne.w	403700 <__aeabi_dmul+0x234>
  4038b6:	4610      	mov	r0, r2
  4038b8:	4619      	mov	r1, r3
  4038ba:	e72c      	b.n	403716 <__aeabi_dmul+0x24a>
  4038bc:	ea95 0f0c 	teq	r5, ip
  4038c0:	d106      	bne.n	4038d0 <__aeabi_ddiv+0x1b0>
  4038c2:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  4038c6:	f43f aefd 	beq.w	4036c4 <__aeabi_dmul+0x1f8>
  4038ca:	4610      	mov	r0, r2
  4038cc:	4619      	mov	r1, r3
  4038ce:	e722      	b.n	403716 <__aeabi_dmul+0x24a>
  4038d0:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  4038d4:	bf18      	it	ne
  4038d6:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  4038da:	f47f aec5 	bne.w	403668 <__aeabi_dmul+0x19c>
  4038de:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  4038e2:	f47f af0d 	bne.w	403700 <__aeabi_dmul+0x234>
  4038e6:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  4038ea:	f47f aeeb 	bne.w	4036c4 <__aeabi_dmul+0x1f8>
  4038ee:	e712      	b.n	403716 <__aeabi_dmul+0x24a>

004038f0 <__aeabi_d2uiz>:
  4038f0:	004a      	lsls	r2, r1, #1
  4038f2:	d211      	bcs.n	403918 <__aeabi_d2uiz+0x28>
  4038f4:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  4038f8:	d211      	bcs.n	40391e <__aeabi_d2uiz+0x2e>
  4038fa:	d50d      	bpl.n	403918 <__aeabi_d2uiz+0x28>
  4038fc:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  403900:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  403904:	d40e      	bmi.n	403924 <__aeabi_d2uiz+0x34>
  403906:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  40390a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  40390e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  403912:	fa23 f002 	lsr.w	r0, r3, r2
  403916:	4770      	bx	lr
  403918:	f04f 0000 	mov.w	r0, #0
  40391c:	4770      	bx	lr
  40391e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  403922:	d102      	bne.n	40392a <__aeabi_d2uiz+0x3a>
  403924:	f04f 30ff 	mov.w	r0, #4294967295
  403928:	4770      	bx	lr
  40392a:	f04f 0000 	mov.w	r0, #0
  40392e:	4770      	bx	lr

00403930 <__aeabi_uldivmod>:
  403930:	b953      	cbnz	r3, 403948 <__aeabi_uldivmod+0x18>
  403932:	b94a      	cbnz	r2, 403948 <__aeabi_uldivmod+0x18>
  403934:	2900      	cmp	r1, #0
  403936:	bf08      	it	eq
  403938:	2800      	cmpeq	r0, #0
  40393a:	bf1c      	itt	ne
  40393c:	f04f 31ff 	movne.w	r1, #4294967295
  403940:	f04f 30ff 	movne.w	r0, #4294967295
  403944:	f000 b97a 	b.w	403c3c <__aeabi_idiv0>
  403948:	f1ad 0c08 	sub.w	ip, sp, #8
  40394c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  403950:	f000 f806 	bl	403960 <__udivmoddi4>
  403954:	f8dd e004 	ldr.w	lr, [sp, #4]
  403958:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  40395c:	b004      	add	sp, #16
  40395e:	4770      	bx	lr

00403960 <__udivmoddi4>:
  403960:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  403964:	468c      	mov	ip, r1
  403966:	460d      	mov	r5, r1
  403968:	4604      	mov	r4, r0
  40396a:	9e08      	ldr	r6, [sp, #32]
  40396c:	2b00      	cmp	r3, #0
  40396e:	d151      	bne.n	403a14 <__udivmoddi4+0xb4>
  403970:	428a      	cmp	r2, r1
  403972:	4617      	mov	r7, r2
  403974:	d96d      	bls.n	403a52 <__udivmoddi4+0xf2>
  403976:	fab2 fe82 	clz	lr, r2
  40397a:	f1be 0f00 	cmp.w	lr, #0
  40397e:	d00b      	beq.n	403998 <__udivmoddi4+0x38>
  403980:	f1ce 0c20 	rsb	ip, lr, #32
  403984:	fa01 f50e 	lsl.w	r5, r1, lr
  403988:	fa20 fc0c 	lsr.w	ip, r0, ip
  40398c:	fa02 f70e 	lsl.w	r7, r2, lr
  403990:	ea4c 0c05 	orr.w	ip, ip, r5
  403994:	fa00 f40e 	lsl.w	r4, r0, lr
  403998:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  40399c:	0c25      	lsrs	r5, r4, #16
  40399e:	fbbc f8fa 	udiv	r8, ip, sl
  4039a2:	fa1f f987 	uxth.w	r9, r7
  4039a6:	fb0a cc18 	mls	ip, sl, r8, ip
  4039aa:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  4039ae:	fb08 f309 	mul.w	r3, r8, r9
  4039b2:	42ab      	cmp	r3, r5
  4039b4:	d90a      	bls.n	4039cc <__udivmoddi4+0x6c>
  4039b6:	19ed      	adds	r5, r5, r7
  4039b8:	f108 32ff 	add.w	r2, r8, #4294967295
  4039bc:	f080 8123 	bcs.w	403c06 <__udivmoddi4+0x2a6>
  4039c0:	42ab      	cmp	r3, r5
  4039c2:	f240 8120 	bls.w	403c06 <__udivmoddi4+0x2a6>
  4039c6:	f1a8 0802 	sub.w	r8, r8, #2
  4039ca:	443d      	add	r5, r7
  4039cc:	1aed      	subs	r5, r5, r3
  4039ce:	b2a4      	uxth	r4, r4
  4039d0:	fbb5 f0fa 	udiv	r0, r5, sl
  4039d4:	fb0a 5510 	mls	r5, sl, r0, r5
  4039d8:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  4039dc:	fb00 f909 	mul.w	r9, r0, r9
  4039e0:	45a1      	cmp	r9, r4
  4039e2:	d909      	bls.n	4039f8 <__udivmoddi4+0x98>
  4039e4:	19e4      	adds	r4, r4, r7
  4039e6:	f100 33ff 	add.w	r3, r0, #4294967295
  4039ea:	f080 810a 	bcs.w	403c02 <__udivmoddi4+0x2a2>
  4039ee:	45a1      	cmp	r9, r4
  4039f0:	f240 8107 	bls.w	403c02 <__udivmoddi4+0x2a2>
  4039f4:	3802      	subs	r0, #2
  4039f6:	443c      	add	r4, r7
  4039f8:	eba4 0409 	sub.w	r4, r4, r9
  4039fc:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  403a00:	2100      	movs	r1, #0
  403a02:	2e00      	cmp	r6, #0
  403a04:	d061      	beq.n	403aca <__udivmoddi4+0x16a>
  403a06:	fa24 f40e 	lsr.w	r4, r4, lr
  403a0a:	2300      	movs	r3, #0
  403a0c:	6034      	str	r4, [r6, #0]
  403a0e:	6073      	str	r3, [r6, #4]
  403a10:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403a14:	428b      	cmp	r3, r1
  403a16:	d907      	bls.n	403a28 <__udivmoddi4+0xc8>
  403a18:	2e00      	cmp	r6, #0
  403a1a:	d054      	beq.n	403ac6 <__udivmoddi4+0x166>
  403a1c:	2100      	movs	r1, #0
  403a1e:	e886 0021 	stmia.w	r6, {r0, r5}
  403a22:	4608      	mov	r0, r1
  403a24:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403a28:	fab3 f183 	clz	r1, r3
  403a2c:	2900      	cmp	r1, #0
  403a2e:	f040 808e 	bne.w	403b4e <__udivmoddi4+0x1ee>
  403a32:	42ab      	cmp	r3, r5
  403a34:	d302      	bcc.n	403a3c <__udivmoddi4+0xdc>
  403a36:	4282      	cmp	r2, r0
  403a38:	f200 80fa 	bhi.w	403c30 <__udivmoddi4+0x2d0>
  403a3c:	1a84      	subs	r4, r0, r2
  403a3e:	eb65 0503 	sbc.w	r5, r5, r3
  403a42:	2001      	movs	r0, #1
  403a44:	46ac      	mov	ip, r5
  403a46:	2e00      	cmp	r6, #0
  403a48:	d03f      	beq.n	403aca <__udivmoddi4+0x16a>
  403a4a:	e886 1010 	stmia.w	r6, {r4, ip}
  403a4e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403a52:	b912      	cbnz	r2, 403a5a <__udivmoddi4+0xfa>
  403a54:	2701      	movs	r7, #1
  403a56:	fbb7 f7f2 	udiv	r7, r7, r2
  403a5a:	fab7 fe87 	clz	lr, r7
  403a5e:	f1be 0f00 	cmp.w	lr, #0
  403a62:	d134      	bne.n	403ace <__udivmoddi4+0x16e>
  403a64:	1beb      	subs	r3, r5, r7
  403a66:	0c3a      	lsrs	r2, r7, #16
  403a68:	fa1f fc87 	uxth.w	ip, r7
  403a6c:	2101      	movs	r1, #1
  403a6e:	fbb3 f8f2 	udiv	r8, r3, r2
  403a72:	0c25      	lsrs	r5, r4, #16
  403a74:	fb02 3318 	mls	r3, r2, r8, r3
  403a78:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  403a7c:	fb0c f308 	mul.w	r3, ip, r8
  403a80:	42ab      	cmp	r3, r5
  403a82:	d907      	bls.n	403a94 <__udivmoddi4+0x134>
  403a84:	19ed      	adds	r5, r5, r7
  403a86:	f108 30ff 	add.w	r0, r8, #4294967295
  403a8a:	d202      	bcs.n	403a92 <__udivmoddi4+0x132>
  403a8c:	42ab      	cmp	r3, r5
  403a8e:	f200 80d1 	bhi.w	403c34 <__udivmoddi4+0x2d4>
  403a92:	4680      	mov	r8, r0
  403a94:	1aed      	subs	r5, r5, r3
  403a96:	b2a3      	uxth	r3, r4
  403a98:	fbb5 f0f2 	udiv	r0, r5, r2
  403a9c:	fb02 5510 	mls	r5, r2, r0, r5
  403aa0:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  403aa4:	fb0c fc00 	mul.w	ip, ip, r0
  403aa8:	45a4      	cmp	ip, r4
  403aaa:	d907      	bls.n	403abc <__udivmoddi4+0x15c>
  403aac:	19e4      	adds	r4, r4, r7
  403aae:	f100 33ff 	add.w	r3, r0, #4294967295
  403ab2:	d202      	bcs.n	403aba <__udivmoddi4+0x15a>
  403ab4:	45a4      	cmp	ip, r4
  403ab6:	f200 80b8 	bhi.w	403c2a <__udivmoddi4+0x2ca>
  403aba:	4618      	mov	r0, r3
  403abc:	eba4 040c 	sub.w	r4, r4, ip
  403ac0:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  403ac4:	e79d      	b.n	403a02 <__udivmoddi4+0xa2>
  403ac6:	4631      	mov	r1, r6
  403ac8:	4630      	mov	r0, r6
  403aca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403ace:	f1ce 0420 	rsb	r4, lr, #32
  403ad2:	fa05 f30e 	lsl.w	r3, r5, lr
  403ad6:	fa07 f70e 	lsl.w	r7, r7, lr
  403ada:	fa20 f804 	lsr.w	r8, r0, r4
  403ade:	0c3a      	lsrs	r2, r7, #16
  403ae0:	fa25 f404 	lsr.w	r4, r5, r4
  403ae4:	ea48 0803 	orr.w	r8, r8, r3
  403ae8:	fbb4 f1f2 	udiv	r1, r4, r2
  403aec:	ea4f 4518 	mov.w	r5, r8, lsr #16
  403af0:	fb02 4411 	mls	r4, r2, r1, r4
  403af4:	fa1f fc87 	uxth.w	ip, r7
  403af8:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  403afc:	fb01 f30c 	mul.w	r3, r1, ip
  403b00:	42ab      	cmp	r3, r5
  403b02:	fa00 f40e 	lsl.w	r4, r0, lr
  403b06:	d909      	bls.n	403b1c <__udivmoddi4+0x1bc>
  403b08:	19ed      	adds	r5, r5, r7
  403b0a:	f101 30ff 	add.w	r0, r1, #4294967295
  403b0e:	f080 808a 	bcs.w	403c26 <__udivmoddi4+0x2c6>
  403b12:	42ab      	cmp	r3, r5
  403b14:	f240 8087 	bls.w	403c26 <__udivmoddi4+0x2c6>
  403b18:	3902      	subs	r1, #2
  403b1a:	443d      	add	r5, r7
  403b1c:	1aeb      	subs	r3, r5, r3
  403b1e:	fa1f f588 	uxth.w	r5, r8
  403b22:	fbb3 f0f2 	udiv	r0, r3, r2
  403b26:	fb02 3310 	mls	r3, r2, r0, r3
  403b2a:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  403b2e:	fb00 f30c 	mul.w	r3, r0, ip
  403b32:	42ab      	cmp	r3, r5
  403b34:	d907      	bls.n	403b46 <__udivmoddi4+0x1e6>
  403b36:	19ed      	adds	r5, r5, r7
  403b38:	f100 38ff 	add.w	r8, r0, #4294967295
  403b3c:	d26f      	bcs.n	403c1e <__udivmoddi4+0x2be>
  403b3e:	42ab      	cmp	r3, r5
  403b40:	d96d      	bls.n	403c1e <__udivmoddi4+0x2be>
  403b42:	3802      	subs	r0, #2
  403b44:	443d      	add	r5, r7
  403b46:	1aeb      	subs	r3, r5, r3
  403b48:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  403b4c:	e78f      	b.n	403a6e <__udivmoddi4+0x10e>
  403b4e:	f1c1 0720 	rsb	r7, r1, #32
  403b52:	fa22 f807 	lsr.w	r8, r2, r7
  403b56:	408b      	lsls	r3, r1
  403b58:	fa05 f401 	lsl.w	r4, r5, r1
  403b5c:	ea48 0303 	orr.w	r3, r8, r3
  403b60:	fa20 fe07 	lsr.w	lr, r0, r7
  403b64:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  403b68:	40fd      	lsrs	r5, r7
  403b6a:	ea4e 0e04 	orr.w	lr, lr, r4
  403b6e:	fbb5 f9fc 	udiv	r9, r5, ip
  403b72:	ea4f 441e 	mov.w	r4, lr, lsr #16
  403b76:	fb0c 5519 	mls	r5, ip, r9, r5
  403b7a:	fa1f f883 	uxth.w	r8, r3
  403b7e:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  403b82:	fb09 f408 	mul.w	r4, r9, r8
  403b86:	42ac      	cmp	r4, r5
  403b88:	fa02 f201 	lsl.w	r2, r2, r1
  403b8c:	fa00 fa01 	lsl.w	sl, r0, r1
  403b90:	d908      	bls.n	403ba4 <__udivmoddi4+0x244>
  403b92:	18ed      	adds	r5, r5, r3
  403b94:	f109 30ff 	add.w	r0, r9, #4294967295
  403b98:	d243      	bcs.n	403c22 <__udivmoddi4+0x2c2>
  403b9a:	42ac      	cmp	r4, r5
  403b9c:	d941      	bls.n	403c22 <__udivmoddi4+0x2c2>
  403b9e:	f1a9 0902 	sub.w	r9, r9, #2
  403ba2:	441d      	add	r5, r3
  403ba4:	1b2d      	subs	r5, r5, r4
  403ba6:	fa1f fe8e 	uxth.w	lr, lr
  403baa:	fbb5 f0fc 	udiv	r0, r5, ip
  403bae:	fb0c 5510 	mls	r5, ip, r0, r5
  403bb2:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  403bb6:	fb00 f808 	mul.w	r8, r0, r8
  403bba:	45a0      	cmp	r8, r4
  403bbc:	d907      	bls.n	403bce <__udivmoddi4+0x26e>
  403bbe:	18e4      	adds	r4, r4, r3
  403bc0:	f100 35ff 	add.w	r5, r0, #4294967295
  403bc4:	d229      	bcs.n	403c1a <__udivmoddi4+0x2ba>
  403bc6:	45a0      	cmp	r8, r4
  403bc8:	d927      	bls.n	403c1a <__udivmoddi4+0x2ba>
  403bca:	3802      	subs	r0, #2
  403bcc:	441c      	add	r4, r3
  403bce:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  403bd2:	eba4 0408 	sub.w	r4, r4, r8
  403bd6:	fba0 8902 	umull	r8, r9, r0, r2
  403bda:	454c      	cmp	r4, r9
  403bdc:	46c6      	mov	lr, r8
  403bde:	464d      	mov	r5, r9
  403be0:	d315      	bcc.n	403c0e <__udivmoddi4+0x2ae>
  403be2:	d012      	beq.n	403c0a <__udivmoddi4+0x2aa>
  403be4:	b156      	cbz	r6, 403bfc <__udivmoddi4+0x29c>
  403be6:	ebba 030e 	subs.w	r3, sl, lr
  403bea:	eb64 0405 	sbc.w	r4, r4, r5
  403bee:	fa04 f707 	lsl.w	r7, r4, r7
  403bf2:	40cb      	lsrs	r3, r1
  403bf4:	431f      	orrs	r7, r3
  403bf6:	40cc      	lsrs	r4, r1
  403bf8:	6037      	str	r7, [r6, #0]
  403bfa:	6074      	str	r4, [r6, #4]
  403bfc:	2100      	movs	r1, #0
  403bfe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403c02:	4618      	mov	r0, r3
  403c04:	e6f8      	b.n	4039f8 <__udivmoddi4+0x98>
  403c06:	4690      	mov	r8, r2
  403c08:	e6e0      	b.n	4039cc <__udivmoddi4+0x6c>
  403c0a:	45c2      	cmp	sl, r8
  403c0c:	d2ea      	bcs.n	403be4 <__udivmoddi4+0x284>
  403c0e:	ebb8 0e02 	subs.w	lr, r8, r2
  403c12:	eb69 0503 	sbc.w	r5, r9, r3
  403c16:	3801      	subs	r0, #1
  403c18:	e7e4      	b.n	403be4 <__udivmoddi4+0x284>
  403c1a:	4628      	mov	r0, r5
  403c1c:	e7d7      	b.n	403bce <__udivmoddi4+0x26e>
  403c1e:	4640      	mov	r0, r8
  403c20:	e791      	b.n	403b46 <__udivmoddi4+0x1e6>
  403c22:	4681      	mov	r9, r0
  403c24:	e7be      	b.n	403ba4 <__udivmoddi4+0x244>
  403c26:	4601      	mov	r1, r0
  403c28:	e778      	b.n	403b1c <__udivmoddi4+0x1bc>
  403c2a:	3802      	subs	r0, #2
  403c2c:	443c      	add	r4, r7
  403c2e:	e745      	b.n	403abc <__udivmoddi4+0x15c>
  403c30:	4608      	mov	r0, r1
  403c32:	e708      	b.n	403a46 <__udivmoddi4+0xe6>
  403c34:	f1a8 0802 	sub.w	r8, r8, #2
  403c38:	443d      	add	r5, r7
  403c3a:	e72b      	b.n	403a94 <__udivmoddi4+0x134>

00403c3c <__aeabi_idiv0>:
  403c3c:	4770      	bx	lr
  403c3e:	bf00      	nop

00403c40 <__libc_init_array>:
  403c40:	b570      	push	{r4, r5, r6, lr}
  403c42:	4e0f      	ldr	r6, [pc, #60]	; (403c80 <__libc_init_array+0x40>)
  403c44:	4d0f      	ldr	r5, [pc, #60]	; (403c84 <__libc_init_array+0x44>)
  403c46:	1b76      	subs	r6, r6, r5
  403c48:	10b6      	asrs	r6, r6, #2
  403c4a:	bf18      	it	ne
  403c4c:	2400      	movne	r4, #0
  403c4e:	d005      	beq.n	403c5c <__libc_init_array+0x1c>
  403c50:	3401      	adds	r4, #1
  403c52:	f855 3b04 	ldr.w	r3, [r5], #4
  403c56:	4798      	blx	r3
  403c58:	42a6      	cmp	r6, r4
  403c5a:	d1f9      	bne.n	403c50 <__libc_init_array+0x10>
  403c5c:	4e0a      	ldr	r6, [pc, #40]	; (403c88 <__libc_init_array+0x48>)
  403c5e:	4d0b      	ldr	r5, [pc, #44]	; (403c8c <__libc_init_array+0x4c>)
  403c60:	1b76      	subs	r6, r6, r5
  403c62:	f000 f94f 	bl	403f04 <_init>
  403c66:	10b6      	asrs	r6, r6, #2
  403c68:	bf18      	it	ne
  403c6a:	2400      	movne	r4, #0
  403c6c:	d006      	beq.n	403c7c <__libc_init_array+0x3c>
  403c6e:	3401      	adds	r4, #1
  403c70:	f855 3b04 	ldr.w	r3, [r5], #4
  403c74:	4798      	blx	r3
  403c76:	42a6      	cmp	r6, r4
  403c78:	d1f9      	bne.n	403c6e <__libc_init_array+0x2e>
  403c7a:	bd70      	pop	{r4, r5, r6, pc}
  403c7c:	bd70      	pop	{r4, r5, r6, pc}
  403c7e:	bf00      	nop
  403c80:	00403f10 	.word	0x00403f10
  403c84:	00403f10 	.word	0x00403f10
  403c88:	00403f18 	.word	0x00403f18
  403c8c:	00403f10 	.word	0x00403f10

00403c90 <memset>:
  403c90:	b470      	push	{r4, r5, r6}
  403c92:	0786      	lsls	r6, r0, #30
  403c94:	d046      	beq.n	403d24 <memset+0x94>
  403c96:	1e54      	subs	r4, r2, #1
  403c98:	2a00      	cmp	r2, #0
  403c9a:	d041      	beq.n	403d20 <memset+0x90>
  403c9c:	b2ca      	uxtb	r2, r1
  403c9e:	4603      	mov	r3, r0
  403ca0:	e002      	b.n	403ca8 <memset+0x18>
  403ca2:	f114 34ff 	adds.w	r4, r4, #4294967295
  403ca6:	d33b      	bcc.n	403d20 <memset+0x90>
  403ca8:	f803 2b01 	strb.w	r2, [r3], #1
  403cac:	079d      	lsls	r5, r3, #30
  403cae:	d1f8      	bne.n	403ca2 <memset+0x12>
  403cb0:	2c03      	cmp	r4, #3
  403cb2:	d92e      	bls.n	403d12 <memset+0x82>
  403cb4:	b2cd      	uxtb	r5, r1
  403cb6:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  403cba:	2c0f      	cmp	r4, #15
  403cbc:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  403cc0:	d919      	bls.n	403cf6 <memset+0x66>
  403cc2:	f103 0210 	add.w	r2, r3, #16
  403cc6:	4626      	mov	r6, r4
  403cc8:	3e10      	subs	r6, #16
  403cca:	2e0f      	cmp	r6, #15
  403ccc:	f842 5c10 	str.w	r5, [r2, #-16]
  403cd0:	f842 5c0c 	str.w	r5, [r2, #-12]
  403cd4:	f842 5c08 	str.w	r5, [r2, #-8]
  403cd8:	f842 5c04 	str.w	r5, [r2, #-4]
  403cdc:	f102 0210 	add.w	r2, r2, #16
  403ce0:	d8f2      	bhi.n	403cc8 <memset+0x38>
  403ce2:	f1a4 0210 	sub.w	r2, r4, #16
  403ce6:	f022 020f 	bic.w	r2, r2, #15
  403cea:	f004 040f 	and.w	r4, r4, #15
  403cee:	3210      	adds	r2, #16
  403cf0:	2c03      	cmp	r4, #3
  403cf2:	4413      	add	r3, r2
  403cf4:	d90d      	bls.n	403d12 <memset+0x82>
  403cf6:	461e      	mov	r6, r3
  403cf8:	4622      	mov	r2, r4
  403cfa:	3a04      	subs	r2, #4
  403cfc:	2a03      	cmp	r2, #3
  403cfe:	f846 5b04 	str.w	r5, [r6], #4
  403d02:	d8fa      	bhi.n	403cfa <memset+0x6a>
  403d04:	1f22      	subs	r2, r4, #4
  403d06:	f022 0203 	bic.w	r2, r2, #3
  403d0a:	3204      	adds	r2, #4
  403d0c:	4413      	add	r3, r2
  403d0e:	f004 0403 	and.w	r4, r4, #3
  403d12:	b12c      	cbz	r4, 403d20 <memset+0x90>
  403d14:	b2c9      	uxtb	r1, r1
  403d16:	441c      	add	r4, r3
  403d18:	f803 1b01 	strb.w	r1, [r3], #1
  403d1c:	429c      	cmp	r4, r3
  403d1e:	d1fb      	bne.n	403d18 <memset+0x88>
  403d20:	bc70      	pop	{r4, r5, r6}
  403d22:	4770      	bx	lr
  403d24:	4614      	mov	r4, r2
  403d26:	4603      	mov	r3, r0
  403d28:	e7c2      	b.n	403cb0 <memset+0x20>
  403d2a:	bf00      	nop

00403d2c <register_fini>:
  403d2c:	4b02      	ldr	r3, [pc, #8]	; (403d38 <register_fini+0xc>)
  403d2e:	b113      	cbz	r3, 403d36 <register_fini+0xa>
  403d30:	4802      	ldr	r0, [pc, #8]	; (403d3c <register_fini+0x10>)
  403d32:	f000 b805 	b.w	403d40 <atexit>
  403d36:	4770      	bx	lr
  403d38:	00000000 	.word	0x00000000
  403d3c:	00403d4d 	.word	0x00403d4d

00403d40 <atexit>:
  403d40:	2300      	movs	r3, #0
  403d42:	4601      	mov	r1, r0
  403d44:	461a      	mov	r2, r3
  403d46:	4618      	mov	r0, r3
  403d48:	f000 b81e 	b.w	403d88 <__register_exitproc>

00403d4c <__libc_fini_array>:
  403d4c:	b538      	push	{r3, r4, r5, lr}
  403d4e:	4c0a      	ldr	r4, [pc, #40]	; (403d78 <__libc_fini_array+0x2c>)
  403d50:	4d0a      	ldr	r5, [pc, #40]	; (403d7c <__libc_fini_array+0x30>)
  403d52:	1b64      	subs	r4, r4, r5
  403d54:	10a4      	asrs	r4, r4, #2
  403d56:	d00a      	beq.n	403d6e <__libc_fini_array+0x22>
  403d58:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  403d5c:	3b01      	subs	r3, #1
  403d5e:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  403d62:	3c01      	subs	r4, #1
  403d64:	f855 3904 	ldr.w	r3, [r5], #-4
  403d68:	4798      	blx	r3
  403d6a:	2c00      	cmp	r4, #0
  403d6c:	d1f9      	bne.n	403d62 <__libc_fini_array+0x16>
  403d6e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  403d72:	f000 b8d1 	b.w	403f18 <_fini>
  403d76:	bf00      	nop
  403d78:	00403f28 	.word	0x00403f28
  403d7c:	00403f24 	.word	0x00403f24

00403d80 <__retarget_lock_acquire_recursive>:
  403d80:	4770      	bx	lr
  403d82:	bf00      	nop

00403d84 <__retarget_lock_release_recursive>:
  403d84:	4770      	bx	lr
  403d86:	bf00      	nop

00403d88 <__register_exitproc>:
  403d88:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  403d8c:	4d2c      	ldr	r5, [pc, #176]	; (403e40 <__register_exitproc+0xb8>)
  403d8e:	4606      	mov	r6, r0
  403d90:	6828      	ldr	r0, [r5, #0]
  403d92:	4698      	mov	r8, r3
  403d94:	460f      	mov	r7, r1
  403d96:	4691      	mov	r9, r2
  403d98:	f7ff fff2 	bl	403d80 <__retarget_lock_acquire_recursive>
  403d9c:	4b29      	ldr	r3, [pc, #164]	; (403e44 <__register_exitproc+0xbc>)
  403d9e:	681c      	ldr	r4, [r3, #0]
  403da0:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  403da4:	2b00      	cmp	r3, #0
  403da6:	d03e      	beq.n	403e26 <__register_exitproc+0x9e>
  403da8:	685a      	ldr	r2, [r3, #4]
  403daa:	2a1f      	cmp	r2, #31
  403dac:	dc1c      	bgt.n	403de8 <__register_exitproc+0x60>
  403dae:	f102 0e01 	add.w	lr, r2, #1
  403db2:	b176      	cbz	r6, 403dd2 <__register_exitproc+0x4a>
  403db4:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  403db8:	2401      	movs	r4, #1
  403dba:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  403dbe:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  403dc2:	4094      	lsls	r4, r2
  403dc4:	4320      	orrs	r0, r4
  403dc6:	2e02      	cmp	r6, #2
  403dc8:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  403dcc:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  403dd0:	d023      	beq.n	403e1a <__register_exitproc+0x92>
  403dd2:	3202      	adds	r2, #2
  403dd4:	f8c3 e004 	str.w	lr, [r3, #4]
  403dd8:	6828      	ldr	r0, [r5, #0]
  403dda:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  403dde:	f7ff ffd1 	bl	403d84 <__retarget_lock_release_recursive>
  403de2:	2000      	movs	r0, #0
  403de4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  403de8:	4b17      	ldr	r3, [pc, #92]	; (403e48 <__register_exitproc+0xc0>)
  403dea:	b30b      	cbz	r3, 403e30 <__register_exitproc+0xa8>
  403dec:	f44f 70c8 	mov.w	r0, #400	; 0x190
  403df0:	f3af 8000 	nop.w
  403df4:	4603      	mov	r3, r0
  403df6:	b1d8      	cbz	r0, 403e30 <__register_exitproc+0xa8>
  403df8:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  403dfc:	6002      	str	r2, [r0, #0]
  403dfe:	2100      	movs	r1, #0
  403e00:	6041      	str	r1, [r0, #4]
  403e02:	460a      	mov	r2, r1
  403e04:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  403e08:	f04f 0e01 	mov.w	lr, #1
  403e0c:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  403e10:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  403e14:	2e00      	cmp	r6, #0
  403e16:	d0dc      	beq.n	403dd2 <__register_exitproc+0x4a>
  403e18:	e7cc      	b.n	403db4 <__register_exitproc+0x2c>
  403e1a:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  403e1e:	430c      	orrs	r4, r1
  403e20:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  403e24:	e7d5      	b.n	403dd2 <__register_exitproc+0x4a>
  403e26:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  403e2a:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  403e2e:	e7bb      	b.n	403da8 <__register_exitproc+0x20>
  403e30:	6828      	ldr	r0, [r5, #0]
  403e32:	f7ff ffa7 	bl	403d84 <__retarget_lock_release_recursive>
  403e36:	f04f 30ff 	mov.w	r0, #4294967295
  403e3a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  403e3e:	bf00      	nop
  403e40:	20000880 	.word	0x20000880
  403e44:	00403f00 	.word	0x00403f00
	...
  403e50:	0000000d 	.word	0x0000000d
  403e54:	00000000 	.word	0x00000000
  403e58:	0000000e 	.word	0x0000000e
  403e5c:	00000007 	.word	0x00000007
  403e60:	000007c7 	.word	0x000007c7

00403e64 <mmc_trans_multipliers>:
  403e64:	00000000 0000000a 0000000c 0000000d     ................
  403e74:	0000000f 00000014 0000001a 0000001e     ................
  403e84:	00000023 00000028 0000002d 00000034     #...(...-...4...
  403e94:	00000037 0000003c 00000046 00000050     7...<...F...P...

00403ea4 <sd_mmc_trans_units>:
  403ea4:	0000000a 00000064 000003e8 00002710     ....d........'..
	...

00403ec0 <sd_trans_multipliers>:
  403ec0:	00000000 0000000a 0000000c 0000000d     ................
  403ed0:	0000000f 00000014 00000019 0000001e     ................
  403ee0:	00000023 00000028 0000002d 00000032     #...(...-...2...
  403ef0:	00000037 0000003c 00000046 00000050     7...<...F...P...

00403f00 <_global_impure_ptr>:
  403f00:	20000458                                X.. 

00403f04 <_init>:
  403f04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  403f06:	bf00      	nop
  403f08:	bcf8      	pop	{r3, r4, r5, r6, r7}
  403f0a:	bc08      	pop	{r3}
  403f0c:	469e      	mov	lr, r3
  403f0e:	4770      	bx	lr

00403f10 <__init_array_start>:
  403f10:	00403d2d 	.word	0x00403d2d

00403f14 <__frame_dummy_init_array_entry>:
  403f14:	004000f1                                ..@.

00403f18 <_fini>:
  403f18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  403f1a:	bf00      	nop
  403f1c:	bcf8      	pop	{r3, r4, r5, r6, r7}
  403f1e:	bc08      	pop	{r3}
  403f20:	469e      	mov	lr, r3
  403f22:	4770      	bx	lr

00403f24 <__fini_array_start>:
  403f24:	004000cd 	.word	0x004000cd

Disassembly of section .relocate:

20000000 <portable_delay_cycles>:
20000000:	f3bf 8f5f 	dmb	sy
20000004:	3801      	subs	r0, #1
20000006:	d1fb      	bne.n	20000000 <portable_delay_cycles>
20000008:	4770      	bx	lr
	...

2000000c <Font08px_123>:
2000000c:	1003 826c                                   ..l.

20000010 <Font08px_124>:
20000010:	fe01 0000                                   ....

20000014 <Font08px_125>:
20000014:	8203 106c                                   ..l.

20000018 <Font08px_126>:
20000018:	1005 1008 1020 0000                         .... ...

20000020 <Font08px_32>:
20000020:	0008 0000 0000 0000 0000 0000               ............

2000002c <Font08px_33>:
2000002c:	9908 3c7e 2424 3c3c 0018 0000               ..~<$$<<....

20000038 <Font08px_34>:
20000038:	0408 66bd 3e3c bc65 0004 0000               ...f<>e.....

20000044 <Font08px_35>:
20000044:	1808 1818 0018 0000 0000 0000               ............

20000050 <Font08px_36>:
20000050:	0008 0000 1800 1818 0018 0000               ............

2000005c <Font08px_37>:
2000005c:	4605 1026 c4c8 0000                         .F&.....

20000064 <Font08px_38>:
20000064:	6c05 ac92 a040 0000                         .l..@...

2000006c <Font08px_39>:
2000006c:	0601 0000                                   ....

20000070 <Font08px_40>:
20000070:	3803 8244                                   .8D.

20000074 <Font08px_41>:
20000074:	8203 3844                                   ..D8

20000078 <Font08px_42>:
20000078:	2803 2810                                   .(.(

2000007c <Font08px_43>:
2000007c:	1003 1038                                   ..8.

20000080 <Font08px_44>:
20000080:	c001 0000                                   ....

20000084 <Font08px_45>:
20000084:	1003 1010                                   ....

20000088 <Font08px_46>:
20000088:	8001 0000                                   ....

2000008c <Font08px_47>:
2000008c:	c003 0638                                   ..8.

20000090 <Font08px_58>:
20000090:	4401 0000                                   .D..

20000094 <Font08px_59>:
20000094:	c401 0000                                   ....

20000098 <Font08px_60>:
20000098:	1004 4428 0082 0000                         ..(D....

200000a0 <Font08px_61>:
200000a0:	2804 2828 0028 0000                         .((((...

200000a8 <Font08px_62>:
200000a8:	8204 2844 0010 0000                         ..D(....

200000b0 <Font08px_63>:
200000b0:	0405 a202 0c12 0000                         ........

200000b8 <Font08px_64>:
200000b8:	3808 9244 aaaa 24ba 0018 0000               .8D....$....

200000c4 <Font08px_91>:
200000c4:	fe03 8282                                   ....

200000c8 <Font08px_92>:
200000c8:	0603 c038                                   ..8.

200000cc <Font08px_93>:
200000cc:	8203 fe82                                   ....

200000d0 <Font08px_94>:
200000d0:	0403 0402                                   ....

200000d4 <Font08px_95>:
200000d4:	8003 8080                                   ....

200000d8 <Font08px_96>:
200000d8:	0202 0004                                   ....

200000dc <Font08px_N0>:
200000dc:	7c05 92a2 7c8a 0000                         .|...|..

200000e4 <Font08px_N1>:
200000e4:	0005 fe84 0080 0000                         ........

200000ec <Font08px_N2>:
200000ec:	8405 a2c2 8c92 0000                         ........

200000f4 <Font08px_N3>:
200000f4:	4405 9282 6c92 0000                         .D...l..

200000fc <Font08px_N4>:
200000fc:	3005 2428 20fe 0000                         .0($. ..

20000104 <Font08px_N5>:
20000104:	5e05 8a8a 728a 0000                         .^...r..

2000010c <Font08px_N6>:
2000010c:	7c05 9292 6492 0000                         .|...d..

20000114 <Font08px_N7>:
20000114:	0205 f202 060a 0000                         ........

2000011c <Font08px_N8>:
2000011c:	6c05 9292 6c92 0000                         .l...l..

20000124 <Font08px_N9>:
20000124:	4c05 9292 7c92 0000                         .L...|..

2000012c <Font08px_UA>:
2000012c:	f805 1214 f814 0000                         ........

20000134 <Font08px_UB>:
20000134:	fe04 9292 006c 0000                         ....l...

2000013c <Font08px_UC>:
2000013c:	7c04 8282 0044 0000                         .|..D...

20000144 <Font08px_UD>:
20000144:	fe04 8282 007c 0000                         ....|...

2000014c <Font08px_UE>:
2000014c:	fe04 9292 0082 0000                         ........

20000154 <Font08px_UF>:
20000154:	fe04 1212 0002 0000                         ........

2000015c <Font08px_UG>:
2000015c:	7c05 9282 f492 0000                         .|......

20000164 <Font08px_UH>:
20000164:	fe04 1010 00fe 0000                         ........

2000016c <Font08px_UI>:
2000016c:	8203 82fe                                   ....

20000170 <Font08px_UJ>:
20000170:	4004 8080 007e 0000                         .@..~...

20000178 <Font08px_UK>:
20000178:	fe05 2810 8244 0000                         ...(D...

20000180 <Font08px_UL>:
20000180:	fe04 8080 0080 0000                         ........

20000188 <Font08px_UM>:
20000188:	fe05 0804 fe04 0000                         ........

20000190 <Font08px_UN>:
20000190:	fe05 1804 fe60 0000                         ....`...

20000198 <Font08px_UO>:
20000198:	7c04 8282 007c 0000                         .|..|...

200001a0 <Font08px_UP>:
200001a0:	fe04 1212 000c 0000                         ........

200001a8 <Font08px_UQ>:
200001a8:	7c05 a282 bc42 0000                         .|..B...

200001b0 <Font08px_UR>:
200001b0:	fe04 3212 00cc 0000                         ...2....

200001b8 <Font08px_US>:
200001b8:	4c04 9292 0064 0000                         .L..d...

200001c0 <Font08px_UT>:
200001c0:	0205 fe02 0202 0000                         ........

200001c8 <Font08px_UU>:
200001c8:	7e04 8080 007e 0000                         .~..~...

200001d0 <Font08px_UV>:
200001d0:	0e05 c030 0e30 0000                         ..0.0...

200001d8 <Font08px_UW>:
200001d8:	3e05 38c0 3ec0 0000                         .>.8.>..

200001e0 <Font08px_UX>:
200001e0:	c605 1028 c628 0000                         ..(.(...

200001e8 <Font08px_UY>:
200001e8:	0605 f008 0608 0000                         ........

200001f0 <Font08px_UZ>:
200001f0:	c205 92a2 868a 0000                         ........

200001f8 <Font08px_la>:
200001f8:	7004 8888 00f8 0000                         .p......

20000200 <Font08px_lb>:
20000200:	fe04 8888 0070 0000                         ....p...

20000208 <Font08px_lc>:
20000208:	7004 8888 0088 0000                         .p......

20000210 <Font08px_ld>:
20000210:	7004 8888 00fe 0000                         .p......

20000218 <Font08px_le>:
20000218:	7004 a8a8 0030 0000                         .p..0...

20000220 <Font08px_lf>:
20000220:	fc03 0212                                   ....

20000224 <Font08px_lg>:
20000224:	1004 a8a8 0078 0000                         ....x...

2000022c <Font08px_lh>:
2000022c:	fe04 0810 00f0 0000                         ........

20000234 <Font08px_li>:
20000234:	fa01 0000                                   ....

20000238 <Font08px_lj>:
20000238:	8002 007a                                   ..z.

2000023c <Font08px_lk>:
2000023c:	fe04 5020 0088 0000                         .. P....

20000244 <Font08px_ll>:
20000244:	fe01 0000                                   ....

20000248 <Font08px_lm>:
20000248:	f805 f008 f008 0000                         ........

20000250 <Font08px_ln>:
20000250:	f804 0810 00f0 0000                         ........

20000258 <Font08px_lo>:
20000258:	7004 8888 0070 0000                         .p..p...

20000260 <Font08px_lp>:
20000260:	f804 2828 0010 0000                         ..((....

20000268 <Font08px_lq>:
20000268:	1004 2828 00f8 0000                         ..((....

20000270 <Font08px_lr>:
20000270:	f803 0810                                   ....

20000274 <Font08px_ls>:
20000274:	9004 a8a8 0048 0000                         ....H...

2000027c <Font08px_lt>:
2000027c:	0803 887c                                   ..|.

20000280 <Font08px_lu>:
20000280:	7804 8080 00f8 0000                         .x......

20000288 <Font08px_lv>:
20000288:	1805 8060 1860 0000                         ..`.`...

20000290 <Font08px_lw>:
20000290:	3805 30c0 38c0 0000                         .8.0.8..

20000298 <Font08px_lx>:
20000298:	8805 2050 8850 0000                         ..P P...

200002a0 <Font08px_ly>:
200002a0:	1804 a0a0 0078 0000                         ....x...

200002a8 <Font08px_lz>:
200002a8:	c803 98a8                                   ....

200002ac <font_table>:
200002ac:	0020 2000 002c 2000 0038 2000 0044 2000      .. ,.. 8.. D.. 
200002bc:	0050 2000 005c 2000 0064 2000 006c 2000     P.. \.. d.. l.. 
200002cc:	0070 2000 0074 2000 0078 2000 007c 2000     p.. t.. x.. |.. 
200002dc:	0080 2000 0084 2000 0088 2000 008c 2000     ... ... ... ... 
200002ec:	00dc 2000 00e4 2000 00ec 2000 00f4 2000     ... ... ... ... 
200002fc:	00fc 2000 0104 2000 010c 2000 0114 2000     ... ... ... ... 
2000030c:	011c 2000 0124 2000 0090 2000 0094 2000     ... $.. ... ... 
2000031c:	0098 2000 00a0 2000 00a8 2000 00b0 2000     ... ... ... ... 
2000032c:	00b8 2000 012c 2000 0134 2000 013c 2000     ... ,.. 4.. <.. 
2000033c:	0144 2000 014c 2000 0154 2000 015c 2000     D.. L.. T.. \.. 
2000034c:	0164 2000 016c 2000 0170 2000 0178 2000     d.. l.. p.. x.. 
2000035c:	0180 2000 0188 2000 0190 2000 0198 2000     ... ... ... ... 
2000036c:	01a0 2000 01a8 2000 01b0 2000 01b8 2000     ... ... ... ... 
2000037c:	01c0 2000 01c8 2000 01d0 2000 01d8 2000     ... ... ... ... 
2000038c:	01e0 2000 01e8 2000 01f0 2000 00c4 2000     ... ... ... ... 
2000039c:	00c8 2000 00cc 2000 00d0 2000 00d4 2000     ... ... ... ... 
200003ac:	00d8 2000 01f8 2000 0200 2000 0208 2000     ... ... ... ... 
200003bc:	0210 2000 0218 2000 0220 2000 0224 2000     ... ...  .. $.. 
200003cc:	022c 2000 0234 2000 0238 2000 023c 2000     ,.. 4.. 8.. <.. 
200003dc:	0244 2000 0248 2000 0250 2000 0258 2000     D.. H.. P.. X.. 
200003ec:	0260 2000 0268 2000 0270 2000 0274 2000     `.. h.. p.. t.. 
200003fc:	027c 2000 0280 2000 0288 2000 0290 2000     |.. ... ... ... 
2000040c:	0298 2000 02a0 2000 02a8 2000 000c 2000     ... ... ... ... 
2000041c:	0010 2000 0014 2000 0018 2000               ... ... ... 

20000428 <sd_mmc_cards>:
	...
20000430:	004c 0000 0000 0000 0000 0000 0000 0000     L...............
	...

2000044c <sd_mmc_spi_devices>:
2000044c:	0001 0000                                   ....

20000450 <SystemCoreClock>:
20000450:	0900 003d 0000 0000                         ..=.....

20000458 <impure_data>:
20000458:	0000 0000 0744 2000 07ac 2000 0814 2000     ....D.. ... ... 
	...
20000500:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
20000510:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20000880 <__atexit_recursive_mutex>:
20000880:	0bf0 2000                                   ... 
